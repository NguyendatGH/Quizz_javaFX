[
  {
    "question": "Which of the following list does present JSP implicit object?",
    "options": [
      "pageContext, config, application, exception",
      "pageContext, config, context, exception",
      "pageContext, servlet, application, parameter",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "pageContext, config, application, exception"
    ]
  },
  {
    "question": "Which methods are used for session tracking of Java web application?",
    "options": [
      "Using HttpSession",
      "Using Hidden Form Fields",
      "Using Cookies",
      "Using URL rewrite technic"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Using HttpSession",
      "Using Cookies",
      "Using URL rewrite technic"
    ]
  },
  {
    "question": "Which following sentence is correct about Filter Life Cycle?",
    "options": [
      "The Filter is trigger before invoke servlet method",
      "The Filter is trigger before request come to servlet",
      "The Filter is trigger before Context Initialization Parameter is created",
      "None of the others"
    ],
    "description": "Choose all that apply",
    "answer": [
      "The Filter is trigger before invoke servlet method",
      "The Filter is trigger before request come to servlet"
    ]
  },
  {
    "question": "How does DBMS deal with concurrent multi-user?",
    "options": [
      "Connection pool is provided by DBMS server and application server",
      "Using 1 connection sharing by multi user",
      "Eliminate connection leaks in database applications",
      "Always manage database tasks with transaction."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Connection pool is provided by DBMS server and application server"
    ]
  },
  {
    "question": "Which of the following statements about the JavaBean is true?",
    "options": [
      "The public get/set methods give access to the properties of the bean.",
      "JavaBean component property must only be write-only format.",
      "It is possible initialise the JavaBeans with arguments using jsp:useBean.",
      "Java bean object can initialized with any construtor in servlet or sriptlet."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The public get/set methods give access to the properties of the bean.",
      "Java bean object can initialized with any construtor in servlet or sriptlet."
    ]
  },
  {
    "question": "Which structure of Request Line in Request Message is?",
    "options": [
      "[HTTP Method] [Requested Resource forming URI] [Protocol Version]",
      "[HTTP Method] [Protocol Version] [Requested Resource forming URI]",
      "[Requested Resource forming URI] [HTTP Method] [Protocol Version]",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "[HTTP Method] [Requested Resource forming URI] [Protocol Version]"
    ]
  },
  {
    "question": "Which structure of Request Line in Request Message is?",
    "options": [
      "[HTTP Method] [Requested Resource forming URI] [Protocol Version]",
      "[HTTP Method] [Protocol Version] [Requested Resource forming URI]",
      "[Requested Resource forming URI] [HTTP Method] [Protocol Version]",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "[HTTP Method] [Requested Resource forming URI] [Protocol Version]"
    ]
  },
  {
    "question": "Where can Request Parameter be put in Request Message?",
    "options": [
      "Request Line And Message Body",
      "Only in Message Body",
      "Header Information and Message Body",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only in Message Body"
    ]
  },
  {
    "question": "Where can Request Parameter be put in Request Message?",
    "options": [
      "Request Line And Message Body",
      "Only in Message Body",
      "Header Information and Message Body",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only in Message Body"
    ]
  },
  {
    "question": "How does container initialize Servlet Object at deploy time?",
    "options": [
      "The servlet must be declared into web deployment descriptor with servlet\ntag",
      "The servlet must be declared into context deployment descriptor with\nservlet tag",
      "The servlet must be declared into web deployment descriptor with\nservlet-mapping tag",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The servlet must be declared into web deployment descriptor with servlet\ntag"
    ]
  },
  {
    "question": "How does container initialize Servlet Object at deploy time?",
    "options": [
      "The servlet must be declared into web deployment descriptor with servlet\ntag",
      "The servlet must be declared into context deployment descriptor with\nservlet tag",
      "The servlet must be declared into web deployment descriptor with\nservlet-mapping tag",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The servlet must be declared into web deployment descriptor with servlet\ntag"
    ]
  },
  {
    "question": "Which feature is the\nparameter of Request, Context, and Config same?",
    "options": [
      "read-only",
      "all are declared in web deployment descriptor",
      "the data type is Object",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "read-only"
    ]
  },
  {
    "question": "Which feature is the\nparameter of Request, Context, and Config same?",
    "options": [
      "read-only",
      "all are declared in web deployment descriptor",
      "the data type is Object",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "read-only"
    ]
  },
  {
    "question": "Which following sentence does present Implicit Objects\u2019 object?",
    "options": [
      "pageContext, config, application, exception",
      "pageContext, config, context, exception",
      "pageContext, servlet, application, parameter",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "pageContext, config, application, exception"
    ]
  },
  {
    "question": "Which component can be used call method and\noutput to response object in JSP code?",
    "options": [
      "expression",
      "scriplets",
      "declaration",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "expression"
    ]
  },
  {
    "question": "Which component can be used call method and\noutput to response object in JSP code?",
    "options": [
      "expression",
      "scriplets",
      "declaration",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "expression"
    ]
  },
  {
    "question": "Which tags in web deployment descriptor are used to refer datasource in\nconfiguring to connect dynamic DB?",
    "options": [
      "res-ref-name, res-type, res-auth",
      "resource-ref-name, resource-type, resource-auth",
      "name, type, auth",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "res-ref-name, res-type, res-auth"
    ]
  },
  {
    "question": "Which tags in web deployment descriptor are used to refer datasource in\nconfiguring to connect dynamic DB?",
    "options": [
      "res-ref-name, res-type, res-auth",
      "resource-ref-name, resource-type, resource-auth",
      "name, type, auth",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "res-ref-name, res-type, res-auth"
    ]
  },
  {
    "question": "Given xml\nfragment code\n<Resource\nname=\"DS007\" type=\"javax.sql.DataSource\"\nauth=\"Container\" driverClassName=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\"\nurl=\"jdbc:sqlserver://localhost:1433;databaseName=Sinhvien2K17;instanceName=SQL2017\"\nusername=\"sa\" password=\"trongkhanh\"/>\nWhere should above code put?",
    "options": [
      "context.xml file",
      "web deployment descriptor file",
      "In JSP file that uses DB in progress",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "context.xml file"
    ]
  },
  {
    "question": "Given xml\nfragment code\n<Resource\nname=\"DS007\" type=\"javax.sql.DataSource\"\nauth=\"Container\" driverClassName=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\"\nurl=\"jdbc:sqlserver://localhost:1433;databaseName=Sinhvien2K17;instanceName=SQL2017\"\nusername=\"sa\" password=\"trongkhanh\"/>\nWhere should above code put?",
    "options": [
      "context.xml file",
      "web deployment descriptor file",
      "In JSP file that uses DB in progress",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "context.xml file"
    ]
  },
  {
    "question": "Which differences between Context Initialization Parameter and Config\nInitialization Parameter are?",
    "options": [
      "Context Initialization Parameter is initialized when the application is\ndeploying but Config Initialization Parameter is initialized when servlet is\nload into memory",
      "Context Initialization Parameter is initialized after servlet is load\ninto memory but Config Initialization Parameter is initialized when application\nis deployed",
      "Context Initialization Parameter is initialized when the user requests\napplication at the first time but Config Initialization Parameter is\ninitialized when application is deployed",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Context Initialization Parameter is initialized when the application is\ndeploying but Config Initialization Parameter is initialized when servlet is\nload into memory"
    ]
  },
  {
    "question": "Which differences between Context Initialization Parameter and Config\nInitialization Parameter are?",
    "options": [
      "Context Initialization Parameter is initialized when the application is\ndeploying but Config Initialization Parameter is initialized when servlet is\nload into memory",
      "Context Initialization Parameter is initialized after servlet is load\ninto memory but Config Initialization Parameter is initialized when application\nis deployed",
      "Context Initialization Parameter is initialized when the user requests\napplication at the first time but Config Initialization Parameter is\ninitialized when application is deployed",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Context Initialization Parameter is initialized when the application is\ndeploying but Config Initialization Parameter is initialized when servlet is\nload into memory"
    ]
  },
  {
    "question": "Which methods in session tracking are used to store information in\nserver side?",
    "options": [
      "Http Session",
      "Hidden Form Fields",
      "Cookies",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Http Session"
    ]
  },
  {
    "question": "Given:\n${2\n+ \u201c2\u201d} = \\${2 + 2}\nWhich result is\ncorrect?",
    "options": [
      "4 = ${2 + 2}",
      "${2 + \u201c2\u201d} = ${2 + 2}",
      "${2 + \u201c2\u201d} = 4",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "4 = ${2 + 2}"
    ]
  },
  {
    "question": "Given:\n${2\n+ \u201c2\u201d} = \\${2 + 2}\nWhich result is\ncorrect?",
    "options": [
      "4 = ${2 + 2}",
      "${2 + \u201c2\u201d} = ${2 + 2}",
      "${2 + \u201c2\u201d} = 4",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "4 = ${2 + 2}"
    ]
  },
  {
    "question": "Which implicit object is supported in jsp page to access pageScope, requestScope, sessionScope, applicationScope?",
    "options": [
      "context object",
      "scope object",
      "pageContext object",
      "application object"
    ],
    "description": "Choose 1 option",
    "answer": [
      "pageContext object"
    ]
  },
  {
    "question": "Which implicit object is supported in jsp page to access pageScope, requestScope, sessionScope, applicationScope?",
    "options": [
      "context object",
      "scope object",
      "pageContext object",
      "application object"
    ],
    "description": "Choose 1 option",
    "answer": [
      "pageContext object"
    ]
  },
  {
    "question": "Given\ntld fragment\n<tag>\n\u00a0\u00a0\u00a0 <name>test</name>\n\u00a0\u00a0\u00a0 <tag-class>sample.custag.Test</tag-class>\n\u00a0\u00a0\u00a0\n<body-content>EMPTY</body-content>\n\u00a0\u00a0\u00a0 <attribute>\n\u00a0\u00a0\u00a0\u00a0\u00a0 <name>a</name>\n\u00a0\u00a0\u00a0\u00a0\u00a0 <required>true</required>\n\u00a0\u00a0\u00a0\u00a0\u00a0\n<rtexprvalue>false</rtexprvalue>\n\u00a0\u00a0 \u00a0</attribute>\n\u00a0 </tag>\n\u00a0\nWhich following tag\nis correct when it is applied above configuration? Assume that the prefix of\ntag is test in used.",
    "options": [
      "<test:test a = \u201c5\u201d/>",
      "<test:test a = \u201c5\u201d>abc</test:test>",
      "<test:test a = \u201c${2 + 2}/>",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<test:test a = \u201c5\u201d/>"
    ]
  },
  {
    "question": "Given\ntld fragment\n<tag>\n\u00a0\u00a0\u00a0 <name>test</name>\n\u00a0\u00a0\u00a0 <tag-class>sample.custag.Test</tag-class>\n\u00a0\u00a0\u00a0\n<body-content>EMPTY</body-content>\n\u00a0\u00a0\u00a0 <attribute>\n\u00a0\u00a0\u00a0\u00a0\u00a0 <name>a</name>\n\u00a0\u00a0\u00a0\u00a0\u00a0 <required>true</required>\n\u00a0\u00a0\u00a0\u00a0\u00a0\n<rtexprvalue>false</rtexprvalue>\n\u00a0\u00a0 \u00a0</attribute>\n\u00a0 </tag>\n\u00a0\nWhich following tag\nis correct when it is applied above configuration? Assume that the prefix of\ntag is test in used.",
    "options": [
      "<test:test a = \u201c5\u201d/>",
      "<test:test a = \u201c5\u201d>abc</test:test>",
      "<test:test a = \u201c${2 + 2}/>",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<test:test a = \u201c5\u201d/>"
    ]
  },
  {
    "question": "Which components are required to use in JSP page after custom tag\nimplemented?",
    "options": [
      "Custom taglib class that extends from tagext, tld file, declaration in web deployment descriptor",
      "Custom taglib class that extends from tagext, tags file, declaration in\nboth web.xml and JSP files",
      "Custom taglib class that extends from JSTL, tld file, declaration in\ncontext.xml file",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Custom taglib class that extends from tagext, tld file, declaration in web deployment descriptor"
    ]
  },
  {
    "question": "Which components are required to use in JSP page after custom tag\nimplemented?",
    "options": [
      "Custom taglib class that extends from tagext, tld file, declaration in web deployment descriptor",
      "Custom taglib class that extends from tagext, tags file, declaration in\nboth web.xml and JSP files",
      "Custom taglib class that extends from JSTL, tld file, declaration in\ncontext.xml file",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Custom taglib class that extends from tagext, tld file, declaration in web deployment descriptor"
    ]
  },
  {
    "question": "Which following function in core library taglib of JSTL is used to\ntraverse the collection objects?",
    "options": [
      "forEach",
      "forToken",
      "forLoop",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "forEach"
    ]
  },
  {
    "question": "Which following function in core library taglib of JSTL is used to\ntraverse the collection objects?",
    "options": [
      "forEach",
      "forToken",
      "forLoop",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "forEach"
    ]
  },
  {
    "question": "Which following syntax in core library taglib of JSTL is same as\nfunction of include standard action?",
    "options": [
      "<c:import url=\u201dabc.jsp\u201d/>",
      "<c:import url=\u201dabc.jsp\u201d var=\u201dtest\u201d/>",
      "<c:import var=\u201dtest\u201d/>",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<c:import url=\u201dabc.jsp\u201d/>"
    ]
  },
  {
    "question": "Which following syntax in core library taglib of JSTL is same as\nfunction of include standard action?",
    "options": [
      "<c:import url=\u201dabc.jsp\u201d/>",
      "<c:import url=\u201dabc.jsp\u201d var=\u201dtest\u201d/>",
      "<c:import var=\u201dtest\u201d/>",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<c:import url=\u201dabc.jsp\u201d/>"
    ]
  },
  {
    "question": "Which following sentence is correct about Filter Life Cycle?",
    "options": [
      "The Filter is trigger before Request Object is created",
      "The Filter is trigger before Request Message is created",
      "The Filter is trigger before Context Initialization Parameter is created",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The Filter is trigger before Request Object is created"
    ]
  },
  {
    "question": "How are Filters triggered in order when filter chain is applied?",
    "options": [
      "The filter is declared in sequence in web deployment descriptor",
      "The filter is declared in sequence in servlet code and JSP page code",
      "The filter is declared in sequence in context.xml file",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The filter is declared in sequence in web deployment descriptor"
    ]
  },
  {
    "question": "How are Filters triggered in order when filter chain is applied?",
    "options": [
      "The filter is declared in sequence in web deployment descriptor",
      "The filter is declared in sequence in servlet code and JSP page code",
      "The filter is declared in sequence in context.xml file",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The filter is declared in sequence in web deployment descriptor"
    ]
  },
  {
    "question": "Which Design Pattern does Struts2 Framework apply?",
    "options": [
      "MVC 2 using Filter as Controller",
      "MVC 2 using Servlet as Controller",
      "MVC 2 using Data Transfer Object as Controller",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "MVC 2 using Filter as Controller"
    ]
  },
  {
    "question": "Which Design Pattern does Struts2 Framework apply?",
    "options": [
      "MVC 2 using Filter as Controller",
      "MVC 2 using Servlet as Controller",
      "MVC 2 using Data Transfer Object as Controller",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "MVC 2 using Filter as Controller"
    ]
  },
  {
    "question": "What is a Domain Data definition in Validation in Struts Framework?",
    "options": [
      "The data that store as properties in action class then it uses in action\nrunning",
      "The data that store as properties in validation class then it uses in\naction running",
      "The data that store as constraint in meta-data then it uses in checking\nconstraints",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The data that store as properties in action class then it uses in action\nrunning"
    ]
  },
  {
    "question": "What is a Domain Data definition in Validation in Struts Framework?",
    "options": [
      "The data that store as properties in action class then it uses in action\nrunning",
      "The data that store as properties in validation class then it uses in\naction running",
      "The data that store as constraint in meta-data then it uses in checking\nconstraints",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The data that store as properties in action class then it uses in action\nrunning"
    ]
  },
  {
    "question": "You are creating a web form with this HTML:\n 11. <form action=\"sendOrder.jsp\">\n 12. <input type=\"text\" name=\"creditCard\">\n 13. <input type=\"text\" name=\"expirationDate\">\n 14. <input type=\"submit\">\n 15. </form>\n Which HTTP method is used when sending this request from the browser?",
    "options": [
      "GET",
      "PUT",
      "POST",
      "SEND",
      "FORM"
    ],
    "description": "Choose 1 option",
    "answer": [
      "GET"
    ]
  },
  {
    "question": "You are creating a web form with this HTML:\n 11. <form action=\"sendOrder.jsp\">\n 12. <input type=\"text\" name=\"creditCard\">\n 13. <input type=\"text\" name=\"expirationDate\">\n 14. <input type=\"submit\">\n 15. </form>\n Which HTTP method is used when sending this request from the browser?",
    "options": [
      "GET",
      "PUT",
      "POST",
      "SEND",
      "FORM"
    ],
    "description": "Choose 1 option",
    "answer": [
      "GET"
    ]
  },
  {
    "question": "Your web application requires the ability to load and remove web files dynamically to the web container's file system? Which two HTTP methods are used to perform these actions? ( Choose two)",
    "options": [
      "PUT",
      "POST",
      "SEND",
      "DELETE",
      "REMOVE"
    ],
    "description": "Choose all that apply",
    "answer": [
      "PUT",
      "DELETE"
    ]
  },
  {
    "question": "Your web application requires the ability to load and remove web files dynamically to the web container's file system? Which two HTTP methods are used to perform these actions? ( Choose two)",
    "options": [
      "PUT",
      "POST",
      "SEND",
      "DELETE",
      "REMOVE"
    ],
    "description": "Choose all that apply",
    "answer": [
      "PUT",
      "DELETE"
    ]
  },
  {
    "question": "Which of the following methods can be used to add cookies to a servlet response?",
    "options": [
      "HttpServletResponse.addCookie( Cookie cookie)",
      "ServletResponse.addCookie( Cookie cookie)",
      "HttpServletResponse.addCookie( String contents)",
      "ServletResponse.addCookie( String contents)",
      "ServletResponse.addHeader( String name, String value)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.addCookie( Cookie cookie)"
    ]
  },
  {
    "question": "Which of the following methods can be used to add cookies to a servlet response?",
    "options": [
      "HttpServletResponse.addCookie( Cookie cookie)",
      "ServletResponse.addCookie( Cookie cookie)",
      "HttpServletResponse.addCookie( String contents)",
      "ServletResponse.addCookie( String contents)",
      "ServletResponse.addHeader( String name, String value)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.addCookie( Cookie cookie)"
    ]
  },
  {
    "question": "Which of the following statements about the Servlet is false?",
    "options": [
      "Initialization code in servlets is executed every time the program is made to run",
      "Servlets are easy to use",
      "Servlets are portable",
      "All of the others",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Initialization code in servlets is executed every time the program is made to run"
    ]
  },
  {
    "question": "Which of the following statements about the Servlet is false?",
    "options": [
      "Initialization code in servlets is executed every time the program is made to run",
      "Servlets are easy to use",
      "Servlets are portable",
      "All of the others",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Initialization code in servlets is executed every time the program is made to run"
    ]
  },
  {
    "question": "Which of the following error code indicates an error inside the HTTP server which prevented it from fulfilling the request?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "500"
    ]
  },
  {
    "question": "Which of the following error code indicates an error inside the HTTP server which prevented it from fulfilling the request?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "500"
    ]
  },
  {
    "question": "In the web deployment descriptor, the url-pattern tag of servlet-mapping tag is used for _________",
    "options": [
      "accessing or calling the servlet instance",
      "applying the security on the servlet instance",
      "applying the filter on the servlet instance",
      "informing server about the location of servlet in web application directory"
    ],
    "description": "Choose 1 option",
    "answer": [
      "accessing or calling the servlet instance"
    ]
  },
  {
    "question": "In the web deployment descriptor, the url-pattern tag of servlet-mapping tag is used for _________",
    "options": [
      "accessing or calling the servlet instance",
      "applying the security on the servlet instance",
      "applying the filter on the servlet instance",
      "informing server about the location of servlet in web application directory"
    ],
    "description": "Choose 1 option",
    "answer": [
      "accessing or calling the servlet instance"
    ]
  },
  {
    "question": "You need to send a GIF file to the browser. Which of the following lines should be \n called after ( or before) a call to response.getOutputStream(  )? ( Select one)",
    "options": [
      "response.setContentType( \"image/gif\"); Before",
      "response.setContentType( \"image/gif\"); After",
      "response.setDataType( \"image/gif\"); Before",
      "response.setDataType( \"image/gif\"); After"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response.setContentType( \"image/gif\"); Before"
    ]
  },
  {
    "question": "You need to send a GIF file to the browser. Which of the following lines should be \n called after ( or before) a call to response.getOutputStream(  )? ( Select one)",
    "options": [
      "response.setContentType( \"image/gif\"); Before",
      "response.setContentType( \"image/gif\"); After",
      "response.setDataType( \"image/gif\"); Before",
      "response.setDataType( \"image/gif\"); After"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response.setContentType( \"image/gif\"); Before"
    ]
  },
  {
    "question": "What is the HTTP 1.1 status code that indicates: Everything's fine?",
    "options": [
      "101",
      "200",
      "201",
      "202"
    ],
    "description": "Choose 1 option",
    "answer": [
      "200"
    ]
  },
  {
    "question": "What is the HTTP 1.1 status code that indicates: Everything's fine?",
    "options": [
      "101",
      "200",
      "201",
      "202"
    ],
    "description": "Choose 1 option",
    "answer": [
      "200"
    ]
  },
  {
    "question": "Which following methods of HttpServlet class stores a resource under the request URL?",
    "options": [
      "doGet",
      "doHead",
      "doPost",
      "doPut",
      "doDelete",
      "doTrace"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doPut"
    ]
  },
  {
    "question": "Which following methods of HttpServlet class stores a resource under the request URL?",
    "options": [
      "doGet",
      "doHead",
      "doPost",
      "doPut",
      "doDelete",
      "doTrace"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doPut"
    ]
  },
  {
    "question": "Which following methods of HttpServlet class returns the HTTP methods the server supports?",
    "options": [
      "doGet",
      "doHead",
      "doPost",
      "doPut",
      "doDelete",
      "doTrace"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doTrace"
    ]
  },
  {
    "question": "Which following methods of HttpServlet class returns the HTTP methods the server supports?",
    "options": [
      "doGet",
      "doHead",
      "doPost",
      "doPut",
      "doDelete",
      "doTrace"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doTrace"
    ]
  },
  {
    "question": "A web application is located in a directory named sales. Where should its deployment descriptor be located?",
    "options": [
      "sales/WEB-INF",
      "sales",
      "sales/deployment",
      "sales/WEB",
      "WEB-INF/sales"
    ],
    "description": "Choose 1 option",
    "answer": [
      "sales/WEB-INF"
    ]
  },
  {
    "question": "A web application is located in a directory named sales. Where should its deployment descriptor be located?",
    "options": [
      "sales/WEB-INF",
      "sales",
      "sales/deployment",
      "sales/WEB",
      "WEB-INF/sales"
    ],
    "description": "Choose 1 option",
    "answer": [
      "sales/WEB-INF"
    ]
  },
  {
    "question": "What file is the deployment descriptor of a web application named BankApp stored in?",
    "options": [
      "BankApp.xml",
      "server.xml",
      "deployment.xml",
      "WebApp.xml",
      "web.xml"
    ],
    "description": "Choose 1 option",
    "answer": [
      "web.xml"
    ]
  },
  {
    "question": "What file is the deployment descriptor of a web application named BankApp stored in?",
    "options": [
      "BankApp.xml",
      "server.xml",
      "deployment.xml",
      "WebApp.xml",
      "web.xml"
    ],
    "description": "Choose 1 option",
    "answer": [
      "web.xml"
    ]
  },
  {
    "question": "Your servlet class depends on a utility class named com.abc.TaxUtil. Where would you keep the TaxUtil.class file?",
    "options": [
      "WEB-INF",
      "WEB-INF/classes",
      "WEB-INF/lib",
      "WEB-INF/jars",
      "WEB-INF/classes/com/abc"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF/classes/com/abc"
    ]
  },
  {
    "question": "Your servlet class depends on a utility class named com.abc.TaxUtil. Where would you keep the TaxUtil.class file?",
    "options": [
      "WEB-INF",
      "WEB-INF/classes",
      "WEB-INF/lib",
      "WEB-INF/jars",
      "WEB-INF/classes/com/abc"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF/classes/com/abc"
    ]
  },
  {
    "question": "Which of the following directories are legal locations for the deployment descriptor file? Note that all paths are shown as from the root of the machine or drive.",
    "options": [
      "/WEB-INF/xml",
      "/WEB-INF",
      "/WEB-INF/classes",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF"
    ]
  },
  {
    "question": "Consider the following HTML page code: \n <html><body><a href=\"/servlet/HelloServlet\">POST</a></body></html> \n\n Which method of HelloServlet will be invoked when the hyperlink displayed by the above page is clicked?",
    "options": [
      "doGet",
      "doPost",
      "doForm",
      "doHref",
      "serviceGet"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doGet"
    ]
  },
  {
    "question": "Which of the following directories are legal locations for the deployment descriptor file? Note that all paths are shown as from the root of the machine or drive.",
    "options": [
      "/WEB-INF/xml",
      "/WEB-INF",
      "/WEB-INF/classes",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF"
    ]
  },
  {
    "question": "Consider the following HTML page code:<html><body><a href=\"/servlet/HelloServlet\">POST</a></body></html>Which method of HelloServlet will be invoked when the hyperlink displayed by the above page is clicked?",
    "options": [
      "doGet",
      "doPost",
      "doForm",
      "doHref",
      "serviceGet"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doGet"
    ]
  },
  {
    "question": "Which of the following directories are legal locations for the deployment descriptor file? Note that all paths are shown as from the root of the machine or drive.",
    "options": [
      "/WEB-INF/xml",
      "/WEB-INF",
      "/WEB-INF/classes",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF"
    ]
  },
  {
    "question": "Consider the following HTML page code: \n <html><body><a href=\"/servlet/HelloServlet\">POST</a></body></html> \n\n Which method of HelloServlet will be invoked when the hyperlink displayed by the above page is clicked?",
    "options": [
      "doGet",
      "doPost",
      "doForm",
      "doHref",
      "serviceGet"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doGet"
    ]
  },
  {
    "question": "Which of the following directories are legal locations for the deployment descriptor file? Note that all paths are shown as from the root of the machine or drive.",
    "options": [
      "/WEB-INF/xml",
      "/WEB-INF",
      "/WEB-INF/classes",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF"
    ]
  },
  {
    "question": "Consider the following HTML page code:<html><body><a href=\"/servlet/HelloServlet\">POST</a></body></html>Which method of HelloServlet will be invoked when the hyperlink displayed by the above page is clicked?",
    "options": [
      "doGet",
      "doPost",
      "doForm",
      "doHref",
      "serviceGet"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doGet"
    ]
  },
  {
    "question": "You are creating a web form with this HTML:\n 11. <form action=\"sendOrder.jsp\">\n 12. <input type=\"text\" name=\"creditCard\">\n 13. <input type=\"text\" name=\"expirationDate\">\n 14. <input type=\"submit\">\n 15. </form>\n Which HTTP method is used when sending this request from the browser?",
    "options": [
      "GET",
      "PUT",
      "POST",
      "SEND",
      "FORM"
    ],
    "description": "Choose 1 option",
    "answer": [
      "GET"
    ]
  },
  {
    "question": "You are creating a web form with this HTML:11. <form action=\"sendOrder.jsp\">12. <input type=\"text\" name=\"creditCard\">13. <input type=\"text\" name=\"expirationDate\">14. <input type=\"submit\">15. </form>Which HTTP method is used when sending this request from the browser?",
    "options": [
      "GET",
      "PUT",
      "POST",
      "SEND",
      "FORM"
    ],
    "description": "Choose 1 option",
    "answer": [
      "GET"
    ]
  },
  {
    "question": "You are creating a web form with this HTML:\n 11. <form action=\"sendOrder.jsp\">\n 12. <input type=\"text\" name=\"creditCard\">\n 13. <input type=\"text\" name=\"expirationDate\">\n 14. <input type=\"submit\">\n 15. </form>\n Which HTTP method is used when sending this request from the browser?",
    "options": [
      "GET",
      "PUT",
      "POST",
      "SEND",
      "FORM"
    ],
    "description": "Choose 1 option",
    "answer": [
      "GET"
    ]
  },
  {
    "question": "You are creating a web form with this HTML:11. <form action=\"sendOrder.jsp\">12. <input type=\"text\" name=\"creditCard\">13. <input type=\"text\" name=\"expirationDate\">14. <input type=\"submit\">15. </form>Which HTTP method is used when sending this request from the browser?",
    "options": [
      "GET",
      "PUT",
      "POST",
      "SEND",
      "FORM"
    ],
    "description": "Choose 1 option",
    "answer": [
      "GET"
    ]
  },
  {
    "question": "A ________has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number.",
    "options": [
      "cookie",
      "session",
      "request",
      "response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "cookie"
    ]
  },
  {
    "question": "A ________has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number.",
    "options": [
      "cookie",
      "session",
      "request",
      "response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "cookie"
    ]
  },
  {
    "question": "Which sub-element is used to define a logical name of servlet in web deployment descriptor?",
    "options": [
      "servlet-name",
      "servlet-class",
      "url-pattern",
      "All of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "servlet-name"
    ]
  },
  {
    "question": "Which sub-element is used to define a logical name of servlet in web deployment descriptor?",
    "options": [
      "servlet-name",
      "servlet-class",
      "url-pattern",
      "All of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "servlet-name"
    ]
  },
  {
    "question": "What are two principal methods to manage session?",
    "options": [
      "Cookie",
      "URL rewriting",
      "HTML field",
      "request",
      "response"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Cookie",
      "URL rewriting"
    ]
  },
  {
    "question": "What are two principal methods to manage session?",
    "options": [
      "Cookie",
      "URL rewriting",
      "HTML field",
      "request",
      "response"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Cookie",
      "URL rewriting"
    ]
  },
  {
    "question": "The HttpServletResponse lets you:",
    "options": [
      "specify outgoing information such as HTTP status codes ( 200, 404, etc.)",
      "specify response headers ( Content-Type, Set-Cookie, etc.)",
      "obtain a PrintWriter used to send the document content back to the client.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "The HttpServletResponse lets you:",
    "options": [
      "specify outgoing information such as HTTP status codes ( 200, 404, etc.)",
      "specify response headers ( Content-Type, Set-Cookie, etc.)",
      "obtain a PrintWriter used to send the document content back to the client.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Servlets and JavaBean classes that are parts of a packages are placed in the _______ directory.",
    "options": [
      "classes",
      "lib",
      "tld",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "classes"
    ]
  },
  {
    "question": "Servlets and JavaBean classes that are parts of a packages are placed in the _______ directory.",
    "options": [
      "classes",
      "lib",
      "tld",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "classes"
    ]
  },
  {
    "question": "Which of the following statements about Web Container is true.",
    "options": [
      "Container is a program, which manages the execution of servlets",
      "A Web application is accessible to all users connected to the Web",
      "The Web Container takes request from a servlet and passes it to a Web Server for processing",
      "The performance of a servlet is independent of the efficiency of the container"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Container is a program, which manages the execution of servlets"
    ]
  },
  {
    "question": "Which of the following methods can be used to add cookies to a servlet response?",
    "options": [
      "HttpServletResponse.addCookie( Cookie cookie)",
      "ServletResponse.addCookie( Cookie cookie)",
      "HttpServletResponse.addCookie( String contents)",
      "ServletResponse.addCookie( String contents)",
      "ServletResponse.addHeader( String name, String value)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.addCookie( Cookie cookie)"
    ]
  },
  {
    "question": "Which of the following statements about Web Container is true.",
    "options": [
      "Container is a program, which manages the execution of servlets",
      "A Web application is accessible to all users connected to the Web",
      "The Web Container takes request from a servlet and passes it to a Web Server for processing",
      "The performance of a servlet is independent of the efficiency of the container"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Container is a program, which manages the execution of servlets"
    ]
  },
  {
    "question": "Which of the following methods can be used to add cookies to a servlet response?",
    "options": [
      "HttpServletResponse.addCookie( Cookie cookie)",
      "ServletResponse.addCookie( Cookie cookie)",
      "HttpServletResponse.addCookie( String contents)",
      "ServletResponse.addCookie( String contents)",
      "ServletResponse.addHeader( String name, String value)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.addCookie( Cookie cookie)"
    ]
  },
  {
    "question": "Consider the following code statement: response.sendRedirect( \u201c/abc/FinalServlet\u201d); Assume that the current context root of application is Final. Which of the following statements about the servlet container translating above code statements to the following URL is true? 1. http://localhost:8080/Final/abc/FinalServlet 2. http://localhost:8080/abc/FinalServlet 3. http://localhost:8080/FinalServlet/abc 4. http://localhost:8080/FinalServlet/abc/Final",
    "options": [
      "2",
      "1",
      "1, 4",
      "2, 3"
    ],
    "description": "Choose 1 option",
    "answer": [
      "2"
    ]
  },
  {
    "question": "Consider the following code statement: response.sendRedirect( \u201c/abc/FinalServlet\u201d); Assume that the current context root of application is Final. Which of the following statements about the servlet container translating above code statements to the following URL is true? 1. http://localhost:8080/Final/abc/FinalServlet 2. http://localhost:8080/abc/FinalServlet 3. http://localhost:8080/FinalServlet/abc 4. http://localhost:8080/FinalServlet/abc/Final",
    "options": [
      "2",
      "1",
      "1, 4",
      "2, 3"
    ],
    "description": "Choose 1 option",
    "answer": [
      "2"
    ]
  },
  {
    "question": "Consider the following descriptions: - The method is called by the servlet container in response to a client request - The method is implemented in HttpServlet classes - The method accepts a HttpServletRequest and HttpServletResponse as parameters - The method dispatches to the appropriate doXXX(  ) methods - The method is one of important methods in Servlet Life Cycle What's the method's name?",
    "options": [
      "service",
      "doGet",
      "doPost",
      "processRequest"
    ],
    "description": "Choose 1 option",
    "answer": [
      "service"
    ]
  },
  {
    "question": "Consider the following descriptions: - The method is called by the servlet container in response to a client request - The method is implemented in HttpServlet classes - The method accepts a HttpServletRequest and HttpServletResponse as parameters - The method dispatches to the appropriate doXXX(  ) methods - The method is one of important methods in Servlet Life Cycle What's the method's name?",
    "options": [
      "service",
      "doGet",
      "doPost",
      "processRequest"
    ],
    "description": "Choose 1 option",
    "answer": [
      "service"
    ]
  },
  {
    "question": "Which of the following statements about Request and Response message structure are false?",
    "options": [
      "Request line returns the User-Agent along with the Accept header",
      "Request message structure consists of request line and header information",
      "Header information in response message contains information such as server, last modified date, content-length and content type"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Request line returns the User-Agent along with the Accept header"
    ]
  },
  {
    "question": "Which of the following statements about Request and Response message structure are false?",
    "options": [
      "Request line returns the User-Agent along with the Accept header",
      "Request message structure consists of request line and header information",
      "Header information in response message contains information such as server, last modified date, content-length and content type"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Request line returns the User-Agent along with the Accept header"
    ]
  },
  {
    "question": "The _____ directory contains the archive files requires for Web Application such as database drivers",
    "options": [
      "lib",
      "classes",
      "tlds",
      "tags"
    ],
    "description": "Choose 1 option",
    "answer": [
      "lib"
    ]
  },
  {
    "question": "The _____ directory contains the archive files requires for Web Application such as database drivers",
    "options": [
      "lib",
      "classes",
      "tlds",
      "tags"
    ],
    "description": "Choose 1 option",
    "answer": [
      "lib"
    ]
  },
  {
    "question": "The _____ directory contains the archive files requires for Web Application such as database drivers",
    "options": [
      "lib",
      "classes",
      "tlds",
      "tags"
    ],
    "description": "Choose 1 option",
    "answer": [
      "lib"
    ]
  },
  {
    "question": "The _____ directory contains the archive files requires for Web Application such as database drivers",
    "options": [
      "lib",
      "classes",
      "tlds",
      "tags"
    ],
    "description": "Choose 1 option",
    "answer": [
      "lib"
    ]
  },
  {
    "question": "Which of the following methods of HTTP will send data from clients to servers using security format in the body of the request?",
    "options": [
      "POST",
      "GET",
      "GET and POST",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "POST"
    ]
  },
  {
    "question": "Which of the following methods of HTTP will send data from clients to servers using security format in the body of the request?",
    "options": [
      "POST",
      "GET",
      "GET and POST",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "POST"
    ]
  },
  {
    "question": "The ________ method returns a string containing the value of the named initialization parameter",
    "options": [
      "getInitParameter(  )",
      "init(  )",
      "jspInit",
      "getServletConfig(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getInitParameter(  )"
    ]
  },
  {
    "question": "The ________ method called by the servlet container to allow the servlet to response to a request.",
    "options": [
      "getServletContext(  )",
      "getInitParameter(  )",
      "service(  )",
      "init(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "service(  )"
    ]
  },
  {
    "question": "The ________ method returns a string containing the value of the named initialization parameter",
    "options": [
      "getInitParameter(  )",
      "init(  )",
      "jspInit",
      "getServletConfig(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getInitParameter(  )"
    ]
  },
  {
    "question": "The ________ method called by the servlet container to allow the servlet to response to a request.",
    "options": [
      "getServletContext(  )",
      "getInitParameter(  )",
      "service(  )",
      "init(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "service(  )"
    ]
  },
  {
    "question": "Which of the following error code is associated with the message \"Resource not found\u201d?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "404"
    ]
  },
  {
    "question": "Which of the following error code is associated with the message \"Resource not found\u201d?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "404"
    ]
  },
  {
    "question": "_____ provides a way to identify a user across more than one page request or visit to a Web site and to store information about that user.",
    "options": [
      "Session management",
      "Cookie",
      "Hidden Field",
      "URL Rewrite"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session management"
    ]
  },
  {
    "question": "_____ provides a way to identify a user across more than one page request or visit to a Web site and to store information about that user.",
    "options": [
      "Session management",
      "Cookie",
      "Hidden Field",
      "URL Rewrite"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session management"
    ]
  },
  {
    "question": "Which of the following error code indicates an error inside the HTTP server which prevented it from fulfilling the request?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "500"
    ]
  },
  {
    "question": "_____ provides a way to identify a user across more than one page request or visit to a Web site and to store information about that user.",
    "options": [
      "Session management",
      "Cookie",
      "Hidden Field",
      "URL Rewrite"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session management"
    ]
  },
  {
    "question": "_____ provides a way to identify a user across more than one page request or visit to a Web site and to store information about that user.",
    "options": [
      "Session management",
      "Cookie",
      "Hidden Field",
      "URL Rewrite"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session management"
    ]
  },
  {
    "question": "Which of the following error code indicates an error inside the HTTP server which prevented it from fulfilling the request?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "500"
    ]
  },
  {
    "question": "Which of the following error code indicates that the HTTP server is temporarily overloaded, and unable to handle the request?",
    "options": [
      "404",
      "503",
      "504",
      "403"
    ],
    "description": "Choose 1 option",
    "answer": [
      "503"
    ]
  },
  {
    "question": "Which of the following error code indicates that the HTTP server is temporarily overloaded, and unable to handle the request?",
    "options": [
      "404",
      "503",
      "504",
      "403"
    ],
    "description": "Choose 1 option",
    "answer": [
      "503"
    ]
  },
  {
    "question": "What is the HTTP 1.1 status code that indicates the request accepted?",
    "options": [
      "101",
      "200",
      "201",
      "202"
    ],
    "description": "Choose 1 option",
    "answer": [
      "202"
    ]
  },
  {
    "question": "What is the HTTP 1.1 status code that indicates the request accepted?",
    "options": [
      "101",
      "200",
      "201",
      "202"
    ],
    "description": "Choose 1 option",
    "answer": [
      "202"
    ]
  },
  {
    "question": "Which following methods of HttpServlet class returns the HTTP methods the server supports?",
    "options": [
      "doGet",
      "doHead",
      "doPost",
      "doPut",
      "doDelete",
      "doTrace"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doTrace"
    ]
  },
  {
    "question": "Which following methods of HttpServlet class returns the HTTP methods the server supports?",
    "options": [
      "doGet",
      "doHead",
      "doPost",
      "doPut",
      "doDelete",
      "doTrace"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doTrace"
    ]
  },
  {
    "question": "Which of the following files is the correct name and location of deployment descriptor of a web application?. Assume that the web application is rooted at \\doc-root. Select the one correct answer.",
    "options": [
      "\\doc-root\\dd.xml",
      "\\doc-root\\web.xml",
      "\\doc-root\\WEB-INF\\web.xml",
      "\\doc-root\\WEB_INF\\dd.xml",
      "\\doc-root\\WEB_META\\web.xml"
    ],
    "description": "Choose 1 option",
    "answer": [
      "\\doc-root\\WEB-INF\\web.xml"
    ]
  },
  {
    "question": "Which of the following files is the correct name and location of deployment descriptor of a web application?. Assume that the web application is rooted at \\doc-root. Select the one correct answer.",
    "options": [
      "\\doc-root\\dd.xml",
      "\\doc-root\\web.xml",
      "\\doc-root\\WEB-INF\\web.xml",
      "\\doc-root\\WEB_INF\\dd.xml",
      "\\doc-root\\WEB_META\\web.xml"
    ],
    "description": "Choose 1 option",
    "answer": [
      "\\doc-root\\WEB-INF\\web.xml"
    ]
  },
  {
    "question": "Which of the following methods can be used to add cookies to a servlet response?",
    "options": [
      "HttpServletResponse.addCookie( Cookie cookie)",
      "ServletResponse.addCookie( Cookie cookie)",
      "HttpServletResponse.addCookie( String contents)",
      "ServletResponse.addCookie( String contents)",
      "ServletResponse.addHeader( String name, String value)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.addCookie( Cookie cookie)"
    ]
  },
  {
    "question": "Which of the following methods can be used to add cookies to a servlet response?",
    "options": [
      "HttpServletResponse.addCookie( Cookie cookie)",
      "ServletResponse.addCookie( Cookie cookie)",
      "HttpServletResponse.addCookie( String contents)",
      "ServletResponse.addCookie( String contents)",
      "ServletResponse.addHeader( String name, String value)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.addCookie( Cookie cookie)"
    ]
  },
  {
    "question": "Consider the following HTML page code:\n        <html><body> \n        <form name=\"data\" action=\"/servlet/DataServlet\" method=\"POST\"> \n        <input type=\"text\" name=\"name\"> \n        <input type=\"submit\" name=\"submit\"> \n        </form> \n        </body></html> \n\n Identify the two methods that can be used to retrieve the value of the name \n parameter when the form is submitted.",
    "options": [
      "getParameter( \"name\");",
      "getParameterValue( \"name\");",
      "getParameterValues( \"name\");",
      "getParameters( \"name\");"
    ],
    "description": "Choose all that apply",
    "answer": [
      "getParameter( \"name\");",
      "getParameterValues( \"name\");"
    ]
  },
  {
    "question": "Consider the following HTML page code:\n        <html><body> \n        <form name=\"data\" action=\"/servlet/DataServlet\" method=\"POST\"> \n        <input type=\"text\" name=\"name\"> \n        <input type=\"submit\" name=\"submit\"> \n        </form> \n        </body></html> \n\n Identify the two methods that can be used to retrieve the value of the name \n parameter when the form is submitted.",
    "options": [
      "getParameter( \"name\");",
      "getParameterValue( \"name\");",
      "getParameterValues( \"name\");",
      "getParameters( \"name\");"
    ],
    "description": "Choose all that apply",
    "answer": [
      "getParameter( \"name\");",
      "getParameterValues( \"name\");"
    ]
  },
  {
    "question": "Consider the following code:\n    public void doGet( HttpServletRequest req,\n                      HttpServletResponse res)\n                      throws IOException\n    {\n      if( req.getParameter( \"switch\") == null)\n       {\n         //1\n       }\n       else\n       {\n       //other code\n       }\n    }\n Which of the following lines can be inserted at //1 so that the request is redi-\n rected to the collectinfo.html page? ( Select one)",
    "options": [
      "req.sendRedirect( \"collectinfo.html\");",
      "req.redirect( \"collectinfo.html\");",
      "res.direct( \"collectinfo.html\");",
      "res.sendRedirect( \"collectinfo.html\");"
    ],
    "description": "Choose 1 option",
    "answer": [
      "res.sendRedirect( \"collectinfo.html\");"
    ]
  },
  {
    "question": "Consider the following code:\n    public void doGet( HttpServletRequest req,\n                      HttpServletResponse res)\n                      throws IOException\n    {\n      if( req.getParameter( \"switch\") == null)\n       {\n         //1\n       }\n       else\n       {\n       //other code\n       }\n    }\n Which of the following lines can be inserted at //1 so that the request is redi-\n rected to the collectinfo.html page? ( Select one)",
    "options": [
      "req.sendRedirect( \"collectinfo.html\");",
      "req.redirect( \"collectinfo.html\");",
      "res.direct( \"collectinfo.html\");",
      "res.sendRedirect( \"collectinfo.html\");"
    ],
    "description": "Choose 1 option",
    "answer": [
      "res.sendRedirect( \"collectinfo.html\");"
    ]
  },
  {
    "question": "Consider the following code:\n    public void doGet( HttpServletRequest req,\n                      HttpServletResponse res)\n    {\n       HttpSession session = req.getSession(  );\n       ServletContext ctx = this.getServletContext(  );\n       if( req.getParameter( \"userid\") != null)\n       {\n          String userid = req.getParameter( \"userid\");\n          //1\n       }\n    }\n You want  the userid parameter to be available only to the requests that come \n from the same user. Which of the following lines would you insert at //1? \n ( Select one)",
    "options": [
      "session.setAttribute( \"userid\", userid);",
      "req.setAttribute( \"userid\", userid);",
      "ctx.addAttribute( \"userid\", userid);",
      "session.addAttribute( \"userid\", userid);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.setAttribute( \"userid\", userid);"
    ]
  },
  {
    "question": "Consider the following code:\n    public void doGet( HttpServletRequest req,\n                      HttpServletResponse res)\n    {\n       HttpSession session = req.getSession(  );\n       ServletContext ctx = this.getServletContext(  );\n       if( req.getParameter( \"userid\") != null)\n       {\n          String userid = req.getParameter( \"userid\");\n          //1\n       }\n    }\n You want  the userid parameter to be available only to the requests that come \n from the same user. Which of the following lines would you insert at //1? \n ( Select one)",
    "options": [
      "session.setAttribute( \"userid\", userid);",
      "req.setAttribute( \"userid\", userid);",
      "ctx.addAttribute( \"userid\", userid);",
      "session.addAttribute( \"userid\", userid);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.setAttribute( \"userid\", userid);"
    ]
  },
  {
    "question": "Which followings is a folder that contains jar files in web application?",
    "options": [
      "/lib",
      "/WEB-INF/lib",
      "/WEB-INF/jar",
      "/WEB-INF/classes",
      "/META-INF/lib"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF/lib"
    ]
  },
  {
    "question": "Consider the following code:\n    public void doGet( HttpServletRequest req,\n                      HttpServletResponse res)\n    {\n       HttpSession session = req.getSession(  );\n       ServletContext ctx = this.getServletContext(  );\n       if( req.getParameter( \"userid\") != null)\n       {\n          String userid = req.getParameter( \"userid\");\n          //1\n       }\n    }\n You want  the userid parameter to be available only to the requests that come \n from the same user. Which of the following lines would you insert at //1? \n ( Select one)",
    "options": [
      "session.setAttribute( \"userid\", userid);",
      "req.setAttribute( \"userid\", userid);",
      "ctx.addAttribute( \"userid\", userid);",
      "session.addAttribute( \"userid\", userid);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.setAttribute( \"userid\", userid);"
    ]
  },
  {
    "question": "Consider the following code:\n    public void doGet( HttpServletRequest req,\n                      HttpServletResponse res)\n    {\n       HttpSession session = req.getSession(  );\n       ServletContext ctx = this.getServletContext(  );\n       if( req.getParameter( \"userid\") != null)\n       {\n          String userid = req.getParameter( \"userid\");\n          //1\n       }\n    }\n You want  the userid parameter to be available only to the requests that come \n from the same user. Which of the following lines would you insert at //1? \n ( Select one)",
    "options": [
      "session.setAttribute( \"userid\", userid);",
      "req.setAttribute( \"userid\", userid);",
      "ctx.addAttribute( \"userid\", userid);",
      "session.addAttribute( \"userid\", userid);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.setAttribute( \"userid\", userid);"
    ]
  },
  {
    "question": "Which followings is a folder that contains jar files in web application?",
    "options": [
      "/lib",
      "/WEB-INF/lib",
      "/WEB-INF/jar",
      "/WEB-INF/classes",
      "/META-INF/lib"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF/lib"
    ]
  },
  {
    "question": "Consider the following URL:\n\n http://localhost:8080/examp0401/SessionExample;jsessionid= 58112645388D9380808A726A27F92997?name=value\n\n This is an example of _____",
    "options": [
      "Cookie",
      "URL rewriting",
      "HTML field",
      "URL",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "URL rewriting"
    ]
  },
  {
    "question": "Consider the following URL:\n\n http://localhost:8080/examp0401/SessionExample;jsessionid= 58112645388D9380808A726A27F92997?name=value\n\n This is an example of _____",
    "options": [
      "Cookie",
      "URL rewriting",
      "HTML field",
      "URL",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "URL rewriting"
    ]
  },
  {
    "question": "Which of the following lines would initialize the out variable for sending a Microsoft Word file to the browser?",
    "options": [
      "PrintWriter out = response.getServletOutput(  );",
      "PrintWriter out = response.getPrintWriter(  );",
      "OutputStream out = response.getWriter(  );",
      "OutputStream out = response.getOuputStream(  );"
    ],
    "description": "Choose 1 option",
    "answer": [
      "OutputStream out = response.getOuputStream(  );"
    ]
  },
  {
    "question": "Which of the following lines would initialize the out variable for sending a Microsoft Word file to the browser?",
    "options": [
      "PrintWriter out = response.getServletOutput(  );",
      "PrintWriter out = response.getPrintWriter(  );",
      "OutputStream out = response.getWriter(  );",
      "OutputStream out = response.getOuputStream(  );"
    ],
    "description": "Choose 1 option",
    "answer": [
      "OutputStream out = response.getOuputStream(  );"
    ]
  },
  {
    "question": "Which of the following interfaces or classes is used to retrieve the session associated with a user?",
    "options": [
      "ServletConfig",
      "ServletContext",
      "HttpServlet",
      "HttpServletRequest",
      "HttpServletResponse"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "Which of the following interfaces or classes is used to retrieve the session associated with a user?",
    "options": [
      "ServletConfig",
      "ServletContext",
      "HttpServlet",
      "HttpServletRequest",
      "HttpServletResponse"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "Which method is required for using the URL rewriting mechanism of implementing session support?",
    "options": [
      "HttpServletRequest.encodeURL(  )",
      "HttpServletRequest.rewriteURL(  )",
      "HttpServletResponse.encodeURL(  )",
      "HttpServletResponse.rewriteURL(  )",
      "HttpServletResponse.decodeURL(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.encodeURL(  )"
    ]
  },
  {
    "question": "Which method is required for using the URL rewriting mechanism of implementing session support?",
    "options": [
      "HttpServletRequest.encodeURL(  )",
      "HttpServletRequest.rewriteURL(  )",
      "HttpServletResponse.encodeURL(  )",
      "HttpServletResponse.rewriteURL(  )",
      "HttpServletResponse.decodeURL(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.encodeURL(  )"
    ]
  },
  {
    "question": "Study the statements:1)Every web application within a web container has a unique context path. \n\n 2)The context path and any directories you choose to create within it contain resources that are accessible through HTTP.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are  not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true."
    ]
  },
  {
    "question": "Study the statements:1)Every web application within a web container has a unique context path. \n\n 2)The context path and any directories you choose to create within it contain resources that are accessible through HTTP.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are  not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true."
    ]
  },
  {
    "question": "Study the statements about web.xml file:1)The deployment descriptor file is called web.xml, and it must be located in the WEB-INF directory. \n 2)web.xml is in XML ( extended markup language) format. Its root element is <web>.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only statement 1 is true."
    ]
  },
  {
    "question": "Study the statements about web.xml file:1)The deployment descriptor file is called web.xml, and it must be located in the WEB-INF directory.2)web.xml is in XML ( extended markup language) format. Its root element is <web>.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only statement 1 is true."
    ]
  },
  {
    "question": "Study the statements about web.xml file:1)The deployment descriptor file is called web.xml, and it must be located in the WEB-INF directory. \n 2)web.xml is in XML ( extended markup language) format. Its root element is <web>.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only statement 1 is true."
    ]
  },
  {
    "question": "Study the statements about web.xml file:1)The deployment descriptor file is called web.xml, and it must be located in the WEB-INF directory.2)web.xml is in XML ( extended markup language) format. Its root element is <web>.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only statement 1 is true."
    ]
  },
  {
    "question": "Which object is passed as parameter in attributedAdded, attributedReplaced, and attributedRemoved method of the HttpSessionAttributeListener?",
    "options": [
      "HttpSessionBindingEvent",
      "HttpSessionListenerEvent",
      "HttpSession",
      "HttpSessionEvent"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpSessionBindingEvent"
    ]
  },
  {
    "question": "Which object is passed as parameter in attributedAdded, attributedReplaced, and attributedRemoved method of the HttpSessionAttributeListener?",
    "options": [
      "HttpSessionBindingEvent",
      "HttpSessionListenerEvent",
      "HttpSession",
      "HttpSessionEvent"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpSessionBindingEvent"
    ]
  },
  {
    "question": "Which of the following directories are legal locations for the deployment descriptor file? Note that all paths are shown as from the root of the machine or drive.",
    "options": [
      "/WEB-INF/xml",
      "/WEB-INF",
      "/WEB-INF/classes",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF"
    ]
  },
  {
    "question": "Which of the following directories are legal locations for the deployment descriptor file? Note that all paths are shown as from the root of the machine or drive.",
    "options": [
      "/WEB-INF/xml",
      "/WEB-INF",
      "/WEB-INF/classes",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF"
    ]
  },
  {
    "question": "What are two principal methods to manage session?",
    "options": [
      "Cookie",
      "URL rewriting",
      "HTML field",
      "request",
      "response"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Cookie",
      "URL rewriting"
    ]
  },
  {
    "question": "What are two principal methods to manage session?",
    "options": [
      "Cookie",
      "URL rewriting",
      "HTML field",
      "request",
      "response"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Cookie",
      "URL rewriting"
    ]
  },
  {
    "question": "Which of the following statements about the ServletContext is true ?",
    "options": [
      "All of the others",
      "The ServletContext API is used to set the information common to all servlets in an application",
      "Servlets running in the same application share resources stored in context",
      "The attributes of ServletContext class can be used to share information among a group of servlets"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which of the following statements about the ServletContext is true ?",
    "options": [
      "All of the others",
      "The ServletContext API is used to set the information common to all servlets in an application",
      "Servlets running in the same application share resources stored in context",
      "The attributes of ServletContext class can be used to share information among a group of servlets"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which of the following statements relating to URL rewriting is incorrect?",
    "options": [
      "URL rewriting technique adds some extra data at the end of the URL to identify the session",
      "Generally, the extra information appended in the URL rewriting is the unique session ID and tracking can be done by retrieving this session ID",
      "None of the others",
      "Only information after ? is sent to the next page and information before ? is detached"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only information after ? is sent to the next page and information before ? is detached"
    ]
  },
  {
    "question": "The ________ method returns an array containing all the Cookie objects the client sent along with the request",
    "options": [
      "getCookies(  )",
      "getHeader(  )",
      "getHeaders(  )",
      "getCookie(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getCookies(  )"
    ]
  },
  {
    "question": "The ________ method returns an array containing all the Cookie objects the client sent along with the request",
    "options": [
      "getCookies(  )",
      "getHeader(  )",
      "getHeaders(  )",
      "getCookie(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getCookies(  )"
    ]
  },
  {
    "question": "Which classes or interfaces provide a getSession method?",
    "options": [
      "javax.servlet.http.HttpServletRequest",
      "javax.servlet.http.HttpSessionContext",
      "javax.servlet.http.HttpServletResponse",
      "javax.servlet.http.HttpSessionAttributeEvent"
    ],
    "description": "Choose 1 option",
    "answer": [
      "javax.servlet.http.HttpServletRequest"
    ]
  },
  {
    "question": "Which classes or interfaces provide a getSession method?",
    "options": [
      "javax.servlet.http.HttpServletRequest",
      "javax.servlet.http.HttpSessionContext",
      "javax.servlet.http.HttpServletResponse",
      "javax.servlet.http.HttpSessionAttributeEvent"
    ],
    "description": "Choose 1 option",
    "answer": [
      "javax.servlet.http.HttpServletRequest"
    ]
  },
  {
    "question": "Given that session is a valid HttpSession object: int max = session.getAttribute( \"MyReallyLongName\"); Which is true?",
    "options": [
      "Primitives CANNOT be stored in the HttpSession.",
      "The getAttribute method takes two arguments.",
      "The HttpSession attribute name must NOT exceed eight characters.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Primitives CANNOT be stored in the HttpSession."
    ]
  },
  {
    "question": "Given that session is a valid HttpSession object: int max = session.getAttribute( \"MyReallyLongName\"); Which is true?",
    "options": [
      "Primitives CANNOT be stored in the HttpSession.",
      "The getAttribute method takes two arguments.",
      "The HttpSession attribute name must NOT exceed eight characters.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Primitives CANNOT be stored in the HttpSession."
    ]
  },
  {
    "question": "Name of the class that includes the getSession method that is used to get the HttpSession object.",
    "options": [
      "HttpServletRequest",
      "HttpServletResponse",
      "SessionContext",
      "SessionConfig"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "Name of the class that includes the getSession method that is used to get the HttpSession object.",
    "options": [
      "HttpServletRequest",
      "HttpServletResponse",
      "SessionContext",
      "SessionConfig"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "The session time-out value is controlled in which way( s)?",
    "options": [
      "Application Server Global Default.",
      "Web Application Default.",
      "Individual Session Setting.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "The session time-out value is controlled in which way( s)?",
    "options": [
      "Application Server Global Default.",
      "Web Application Default.",
      "Individual Session Setting.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Study the following statements:1) A session object\u00a0can be\u00a0accessed by\u00a0all web applications\u00a0in the same server.2) Session object exists longer than the application object.3) The request object lives longer than the session object.The statement ( 1) is ...., ( 2) is .... and ( 3) is .......",
    "options": [
      "None of the others",
      "false, false, true",
      "true, false, false",
      "true, false, true",
      "true, true, true"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "The ________ method returns a string containing the value of the named initialization parameter",
    "options": [
      "getInitParameter(  )",
      "init(  )",
      "jspInit",
      "getServletConfig(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getInitParameter(  )"
    ]
  },
  {
    "question": "Study the following statements:1) A session object\u00a0can be\u00a0accessed by\u00a0all web applications\u00a0in the same server.2) Session object exists longer than the application object.3) The request object lives longer than the session object.The statement ( 1) is ...., ( 2) is .... and ( 3) is .......",
    "options": [
      "None of the others",
      "false, false, true",
      "true, false, false",
      "true, false, true",
      "true, true, true"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "The ________ method returns a string containing the value of the named initialization parameter",
    "options": [
      "getInitParameter(  )",
      "init(  )",
      "jspInit",
      "getServletConfig(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getInitParameter(  )"
    ]
  },
  {
    "question": "The value of the default session timeout is set in the web deployment descriptor using the unit of ......",
    "options": [
      "minute",
      "second",
      "hour",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "minute"
    ]
  },
  {
    "question": "The value of the default session timeout is set in the web deployment descriptor using the unit of ......",
    "options": [
      "minute",
      "second",
      "hour",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "minute"
    ]
  },
  {
    "question": "Which of the following interfaces or classes is used to retrieve the session associated with a user? ( Select one)",
    "options": [
      "GenericServlet",
      "ServletConfig",
      "ServletContext",
      "HttpServletRequest"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "Which of the following interfaces or classes is used to retrieve the session associated with a user? ( Select one)",
    "options": [
      "GenericServlet",
      "ServletConfig",
      "ServletContext",
      "HttpServletRequest"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "Which of the following code snippets, when inserted in the doGet(  ) method, \n will correctly count the number of GET requests made by a user? ( Select one)",
    "options": [
      "HttpSession session = request.getSession(  );\n int count = session.getAttribute( \"count\");\n session.setAttribute( \"count\", count++);",
      "HttpSession session = request.getSession(  );\n int count = ( int) session.getAttribute( \"count\");\n session.setAttribute( \"count\", count++)",
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", count++);",
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", new Integer( count++));"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", new Integer( count++));"
    ]
  },
  {
    "question": "Which of the following code snippets, when inserted in the doGet(  ) method, \n will correctly count the number of GET requests made by a user? ( Select one)",
    "options": [
      "HttpSession session = request.getSession(  );\n int count = session.getAttribute( \"count\");\n session.setAttribute( \"count\", count++);",
      "HttpSession session = request.getSession(  );\n int count = ( int) session.getAttribute( \"count\");\n session.setAttribute( \"count\", count++)",
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", count++);",
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", new Integer( count++));"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", new Integer( count++));"
    ]
  },
  {
    "question": "A ________has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number.",
    "options": [
      "cookie",
      "session",
      "request",
      "response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "cookie"
    ]
  },
  {
    "question": "A ________has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number.",
    "options": [
      "cookie",
      "session",
      "request",
      "response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "cookie"
    ]
  },
  {
    "question": "The jquery_1_3_2.jar file contains the JQuery Ajax framework in its META-INF/ resources directory. Where should the jar file be placed inside the web application to ensure the resources it contains are accessible by clients?",
    "options": [
      "WEB-INF/classes",
      "WEB-INF/jar",
      "WEB-INF/lib",
      "WEB INF/resources"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF/lib"
    ]
  },
  {
    "question": "The jquery_1_3_2.jar file contains the JQuery Ajax framework in its META-INF/ resources directory. Where should the jar file be placed inside the web application to ensure the resources it contains are accessible by clients?",
    "options": [
      "WEB-INF/classes",
      "WEB-INF/jar",
      "WEB-INF/lib",
      "WEB INF/resources"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF/lib"
    ]
  },
  {
    "question": "In which two locations can library dependencies be defined for a web application?",
    "options": [
      "the web application deployment descriptor",
      "the /META-INF/dependencies.xml file",
      "the /META-INF/MANIFEST.MF manifest file",
      "the /META-INF/MANIFEST.MF manifest of a JAR in the web application classpath"
    ],
    "description": "Choose all that apply",
    "answer": [
      "the /META-INF/MANIFEST.MF manifest file",
      "the /META-INF/MANIFEST.MF manifest of a JAR in the web application classpath"
    ]
  },
  {
    "question": "In which two locations can library dependencies be defined for a web application?",
    "options": [
      "the web application deployment descriptor",
      "the /META-INF/dependencies.xml file",
      "the /META-INF/MANIFEST.MF manifest file",
      "the /META-INF/MANIFEST.MF manifest of a JAR in the web application classpath"
    ],
    "description": "Choose all that apply",
    "answer": [
      "the /META-INF/MANIFEST.MF manifest file",
      "the /META-INF/MANIFEST.MF manifest of a JAR in the web application classpath"
    ]
  },
  {
    "question": "When a specific request is processed, some servlets must be called and they need to access some common data. These common data should be put to\u00a0dynamic variables in the ..... scope (  select the most correct option).",
    "options": [
      "request",
      "session",
      "application",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "request"
    ]
  },
  {
    "question": "When a specific request is processed, some servlets must be called and they need to access some common data. These common data should be put to\u00a0dynamic variables in the ..... scope (  select the most correct option).",
    "options": [
      "request",
      "session",
      "application",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "request"
    ]
  },
  {
    "question": "Consider the following HTML page code:       <html><body>       <form name=\"data\" action=\"/servlet/DataServlet\" method=\"POST\">       <input type=\"text\" name=\"name\">       <input type=\"submit\" name=\"submit\">       </form>       </body></html>Identify the two methods that can be used to retrieve the value of the name parameter when the form is submitted.",
    "options": [
      "getParameter( \"name\");",
      "getParameterValue( \"name\");",
      "getParameterValues( \"name\");",
      "getParameters( \"name\");"
    ],
    "description": "Choose all that apply",
    "answer": [
      "getParameter( \"name\");",
      "getParameterValues( \"name\");"
    ]
  },
  {
    "question": "Consider the following HTML page code:       <html><body>       <form name=\"data\" action=\"/servlet/DataServlet\" method=\"POST\">       <input type=\"text\" name=\"name\">       <input type=\"submit\" name=\"submit\">       </form>       </body></html>Identify the two methods that can be used to retrieve the value of the name parameter when the form is submitted.",
    "options": [
      "getParameter( \"name\");",
      "getParameterValue( \"name\");",
      "getParameterValues( \"name\");",
      "getParameters( \"name\");"
    ],
    "description": "Choose all that apply",
    "answer": [
      "getParameter( \"name\");",
      "getParameterValues( \"name\");"
    ]
  },
  {
    "question": "What is the term for determining whether a user has access to a particular resource?",
    "options": [
      "Authorization",
      "Authentication",
      "Confidentiality",
      "Secrecy",
      "Privacy"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authorization"
    ]
  },
  {
    "question": "What is the term for determining whether a user has access to a particular resource?",
    "options": [
      "Authorization",
      "Authentication",
      "Confidentiality",
      "Secrecy",
      "Privacy"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authorization"
    ]
  },
  {
    "question": "Which one of the following must be done before authorization takes place?",
    "options": [
      "Data validation",
      "User authentication",
      "Data encryption",
      "Data compression",
      "Auditing"
    ],
    "description": "Choose 1 option",
    "answer": [
      "User authentication"
    ]
  },
  {
    "question": "Which one of the following must be done before authorization takes place?",
    "options": [
      "Data validation",
      "User authentication",
      "Data encryption",
      "Data compression",
      "Auditing"
    ],
    "description": "Choose 1 option",
    "answer": [
      "User authentication"
    ]
  },
  {
    "question": "________ is the process of ensuring that an authenticated party gains access only to the resources it is entitled to.",
    "options": [
      "Authorization",
      "Authentication",
      "Data integrity",
      "Confidentiality"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authorization"
    ]
  },
  {
    "question": "________ is the process of ensuring that an authenticated party gains access only to the resources it is entitled to.",
    "options": [
      "Authorization",
      "Authentication",
      "Data integrity",
      "Confidentiality"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authorization"
    ]
  },
  {
    "question": "The custom web page for logging in using FORM-based authentication must contain an html Form. The form must contain ________",
    "options": [
      "action attribute must equal j_security_check",
      "method attribute must equal GET",
      "action attribute must equal j_security_check and method attribute must equal POST",
      "None of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "action attribute must equal j_security_check and method attribute must equal POST"
    ]
  },
  {
    "question": "The custom web page for logging in using FORM-based authentication must contain an html Form. The form must contain ________",
    "options": [
      "action attribute must equal j_security_check",
      "method attribute must equal GET",
      "action attribute must equal j_security_check and method attribute must equal POST",
      "None of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "action attribute must equal j_security_check and method attribute must equal POST"
    ]
  },
  {
    "question": "Which of the following statement is false about security mechanism used in Web application?",
    "options": [
      "In basic security mechanism, the Web browser never pops-up a login page",
      "In form-based authentication, an error page is shown at user\u2019s side if the login failed.",
      "In HTTP digest authentication, the server has the digest value of password based on a hash function.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "In basic security mechanism, the Web browser never pops-up a login page"
    ]
  },
  {
    "question": "Which of the following statement is false about security mechanism used in Web application?",
    "options": [
      "In basic security mechanism, the Web browser never pops-up a login page",
      "In form-based authentication, an error page is shown at user\u2019s side if the login failed.",
      "In HTTP digest authentication, the server has the digest value of password based on a hash function.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "In basic security mechanism, the Web browser never pops-up a login page"
    ]
  },
  {
    "question": "The login page in basic security prompts the user for _____",
    "options": [
      "Identical and Signature",
      "Password and Encryption",
      "User-ID and password",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "User-ID and password"
    ]
  },
  {
    "question": "The login page in basic security prompts the user for _____",
    "options": [
      "Identical and Signature",
      "Password and Encryption",
      "User-ID and password",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "User-ID and password"
    ]
  },
  {
    "question": "The login page in basic security prompts the user for _____",
    "options": [
      "Identical and Signature",
      "Password and Encryption",
      "User-ID and password",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "User-ID and password"
    ]
  },
  {
    "question": "The login page in basic security prompts the user for _____",
    "options": [
      "Identical and Signature",
      "Password and Encryption",
      "User-ID and password",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "User-ID and password"
    ]
  },
  {
    "question": "Digest authentiction is based on ______",
    "options": [
      "A hash function and encryption",
      "A plaintext and SSL",
      "A decoded password and encrypted username",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A hash function and encryption"
    ]
  },
  {
    "question": "Digest authentiction is based on ______",
    "options": [
      "A hash function and encryption",
      "A plaintext and SSL",
      "A decoded password and encrypted username",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A hash function and encryption"
    ]
  },
  {
    "question": "The ______ security allows password matching strategies",
    "options": [
      "Declarative",
      "Basic authentication",
      "Programmatic",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Programmatic"
    ]
  },
  {
    "question": "The ______ security allows password matching strategies",
    "options": [
      "Declarative",
      "Basic authentication",
      "Programmatic",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Programmatic"
    ]
  },
  {
    "question": "The ______ security allows password matching strategies",
    "options": [
      "Declarative",
      "Basic authentication",
      "Programmatic",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Programmatic"
    ]
  },
  {
    "question": "The ______ security allows password matching strategies",
    "options": [
      "Declarative",
      "Basic authentication",
      "Programmatic",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Programmatic"
    ]
  },
  {
    "question": "In Tomcat webserver, container Security will check username and password based on the content of the file ........",
    "options": [
      "server.xml",
      "tomcat-users.xm",
      "web.xml",
      "config.xml"
    ],
    "description": "Choose 1 option",
    "answer": [
      "tomcat-users.xm"
    ]
  },
  {
    "question": "In Tomcat webserver, container Security will check username and password based on the content of the file ........",
    "options": [
      "server.xml",
      "tomcat-users.xm",
      "web.xml",
      "config.xml"
    ],
    "description": "Choose 1 option",
    "answer": [
      "tomcat-users.xm"
    ]
  },
  {
    "question": "Which security mechanism can be directed through the <login-config> element in a web application deployment descriptor?",
    "options": [
      "Authentication",
      "Authorization",
      "Data integrity",
      "Confidentiality"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authentication"
    ]
  },
  {
    "question": "Which security mechanism can be directed through the <login-config> element in a web application deployment descriptor?",
    "options": [
      "Authentication",
      "Authorization",
      "Data integrity",
      "Confidentiality"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authentication"
    ]
  },
  {
    "question": "When using Form Based Authentication, which pair of fields must be used in the login form?",
    "options": [
      "j_user and j_password",
      "j_login and j_password",
      "j_username and j_password",
      "j_id and j_password"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_username and j_password"
    ]
  },
  {
    "question": "When using Form Based Authentication, which pair of fields must be used in the login form?",
    "options": [
      "j_user and j_password",
      "j_login and j_password",
      "j_username and j_password",
      "j_id and j_password"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_username and j_password"
    ]
  },
  {
    "question": "When using Form Based Authentication, which pair of fields must be used in the login form?",
    "options": [
      "j_user and j_password",
      "j_login and j_password",
      "j_username and j_password",
      "j_id and j_password"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_username and j_password"
    ]
  },
  {
    "question": "When using Form Based Authentication, which pair of fields must be used in the login form?",
    "options": [
      "j_user and j_password",
      "j_login and j_password",
      "j_username and j_password",
      "j_id and j_password"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_username and j_password"
    ]
  },
  {
    "question": "Which of information are needed when declaring the web resource collection in the deployment descriptor?",
    "options": [
      "The URL pattern that requires authorization",
      "The users allowed access to the web resource",
      "The authentication mechanism required by the web resource",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The URL pattern that requires authorization"
    ]
  },
  {
    "question": "Which of information are needed when declaring the web resource collection in the deployment descriptor?",
    "options": [
      "The URL pattern that requires authorization",
      "The users allowed access to the web resource",
      "The authentication mechanism required by the web resource",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The URL pattern that requires authorization"
    ]
  },
  {
    "question": "Which of information are needed when declaring the web resource collection in the deployment descriptor?",
    "options": [
      "The URL pattern that requires authorization",
      "The users allowed access to the web resource",
      "The authentication mechanism required by the web resource",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The URL pattern that requires authorization"
    ]
  },
  {
    "question": "Which of information are needed when declaring the web resource collection in the deployment descriptor?",
    "options": [
      "The URL pattern that requires authorization",
      "The users allowed access to the web resource",
      "The authentication mechanism required by the web resource",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The URL pattern that requires authorization"
    ]
  },
  {
    "question": "When using form-based authentication, which action must be used in the login form?",
    "options": [
      "j_securitycheck",
      "jsecurity_check",
      "j_security_check",
      "jsecuritycheck"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_security_check"
    ]
  },
  {
    "question": "When using form-based authentication, which action must be used in the login form?",
    "options": [
      "j_securitycheck",
      "jsecurity_check",
      "j_security_check",
      "jsecuritycheck"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_security_check"
    ]
  },
  {
    "question": "Which security mechanism proves that data has not been tampered with during its transit through the network?",
    "options": [
      "Data validation",
      "Data integrity",
      "Authentication",
      "Packet sniffing",
      "Data privacy",
      "Authorization"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Data integrity"
    ]
  },
  {
    "question": "Which security mechanism proves that data has not been tampered with during its transit through the network?",
    "options": [
      "Data validation",
      "Data integrity",
      "Authentication",
      "Packet sniffing",
      "Data privacy",
      "Authorization"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Data integrity"
    ]
  },
  {
    "question": "Which security mechanism proves that data has not been tampered with during its transit through the network?",
    "options": [
      "Data validation",
      "Data integrity",
      "Authentication",
      "Packet sniffing",
      "Data privacy",
      "Authorization"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Data integrity"
    ]
  },
  {
    "question": "Which security mechanism proves that data has not been tampered with during its transit through the network?",
    "options": [
      "Data validation",
      "Data integrity",
      "Authentication",
      "Packet sniffing",
      "Data privacy",
      "Authorization"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Data integrity"
    ]
  },
  {
    "question": "Which security mechanism limits access to the availability of resources to permitted groups of users or programs?",
    "options": [
      "Authentication",
      "Authorization",
      "Data integrity",
      "Confidentiality",
      "Checksum validation",
      "MD5 encryption"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authorization"
    ]
  },
  {
    "question": "Which security mechanism limits access to the availability of resources to permitted groups of users or programs?",
    "options": [
      "Authentication",
      "Authorization",
      "Data integrity",
      "Confidentiality",
      "Checksum validation",
      "MD5 encryption"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authorization"
    ]
  },
  {
    "question": "Java Security Mechanism will be activated when ........",
    "options": [
      "A protected resource is accessed by clients.",
      "The login page is accessed by clients.",
      "The page for registration is accessed by clients.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A protected resource is accessed by clients."
    ]
  },
  {
    "question": "Java Security Mechanism will be activated when ........",
    "options": [
      "A protected resource is accessed by clients.",
      "The login page is accessed by clients.",
      "The page for registration is accessed by clients.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A protected resource is accessed by clients."
    ]
  },
  {
    "question": "Which of the following correctly defines data integrity?",
    "options": [
      "It guarantees that information is accessible only to certain users.",
      "It guarantees that the information is kept in encrypted form on the server.",
      "None of the others",
      "It guarantees that unintended parties cannot read the information during transmission between the client and the server.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It guarantees that unintended parties cannot read the information during transmission between the client and the server."
    ]
  },
  {
    "question": "Which of the following correctly defines data integrity?",
    "options": [
      "It guarantees that information is accessible only to certain users.",
      "It guarantees that the information is kept in encrypted form on the server.",
      "It guarantees that unintended parties cannot read the information during transmission between the client and the server.",
      "It guarantees that unintended parties cannot read the information during transmission between the client and the server."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It guarantees that unintended parties cannot read the information during transmission between the client and the server."
    ]
  },
  {
    "question": "Which of the following correctly defines data integrity?",
    "options": [
      "It guarantees that information is accessible only to certain users.",
      "It guarantees that the information is kept in encrypted form on the server.",
      "None of the others",
      "It guarantees that unintended parties cannot read the information during transmission between the client and the server.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It guarantees that unintended parties cannot read the information during transmission between the client and the server."
    ]
  },
  {
    "question": "Which of the following correctly defines data integrity?",
    "options": [
      "It guarantees that information is accessible only to certain users.",
      "It guarantees that the information is kept in encrypted form on the server.",
      "It guarantees that unintended parties cannot read the information during transmission between the client and the server.",
      "It guarantees that unintended parties cannot read the information during transmission between the client and the server."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It guarantees that unintended parties cannot read the information during transmission between the client and the server."
    ]
  },
  {
    "question": "Identify the authentication mechanisms that are built into the HTTP specification. ( Select two)",
    "options": [
      "Basic",
      "Client-Cert",
      "FORM",
      "Digest"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Basic",
      "Digest"
    ]
  },
  {
    "question": "Identify the authentication mechanisms that are built into the HTTP specification. ( Select two)",
    "options": [
      "Basic",
      "Client-Cert",
      "FORM",
      "Digest"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Basic",
      "Digest"
    ]
  },
  {
    "question": "Which of the following deployment descriptor elements is used for specifying the \n authentication mechanism for a web application?",
    "options": [
      "security-constraint",
      "auth-constraint",
      "login-config",
      "web-resource-collection"
    ],
    "description": "Choose 1 option",
    "answer": [
      "login-config"
    ]
  },
  {
    "question": "Which of the following deployment descriptor elements is used for specifying the \n authentication mechanism for a web application?",
    "options": [
      "security-constraint",
      "auth-constraint",
      "login-config",
      "web-resource-collection"
    ],
    "description": "Choose 1 option",
    "answer": [
      "login-config"
    ]
  },
  {
    "question": "Which of the following statements regarding authentication mechanisms are correct? ( Select two)",
    "options": [
      "The HTTP Basic mechanism transmits the username/password \u201cin the open.\u201d",
      "The HTTP Basic mechanism uses HTML FORMs to collect usernames/passwords.",
      "The transmission method in the Basic and FORM mechanisms is the same.",
      "The method of capturing the usernames/passwords in the Basic and FORM mechanisms is the same."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The HTTP Basic mechanism transmits the username/password \u201cin the open.\u201d",
      "The transmission method in the Basic and FORM mechanisms is the same."
    ]
  },
  {
    "question": "Which of the following statements regarding authentication mechanisms are correct? ( Select two)",
    "options": [
      "The HTTP Basic mechanism transmits the username/password \u201cin the open.\u201d",
      "The HTTP Basic mechanism uses HTML FORMs to collect usernames/passwords.",
      "The transmission method in the Basic and FORM mechanisms is the same.",
      "The method of capturing the usernames/passwords in the Basic and FORM mechanisms is the same."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The HTTP Basic mechanism transmits the username/password \u201cin the open.\u201d",
      "The transmission method in the Basic and FORM mechanisms is the same."
    ]
  },
  {
    "question": "Identify the correct order of phases in the Public/Private Key encryption?\n\n 1. Server provides its public key \n 2. Client makes request for secure resource\n 3. Server provides secure resource, encrypted with the client's public key \n 4. Client provides its public key, encrypted with the server's public key",
    "options": [
      "2 \u2013 1 \u2013 4 \u2013 3",
      "1 \u2013 2 \u2013 3 \u2013 4",
      "3 \u2013 1 \u2013 4 \u2013 2",
      "2 \u2013 4 \u2013 3 \u2013 1"
    ],
    "description": "Choose 1 option",
    "answer": [
      "2 \u2013 1 \u2013 4 \u2013 3"
    ]
  },
  {
    "question": "Identify the correct order of phases in the Public/Private Key encryption?1. Server provides its public key 2. Client makes request for secure resource3. Server provides secure resource, encrypted with the client's public key 4. Client provides its public key, encrypted with the server's public key",
    "options": [
      "2 \u2013 1 \u2013 4 \u2013 3",
      "1 \u2013 2 \u2013 3 \u2013 4",
      "3 \u2013 1 \u2013 4 \u2013 2",
      "2 \u2013 4 \u2013 3 \u2013 1"
    ],
    "description": "Choose 1 option",
    "answer": [
      "2 \u2013 1 \u2013 4 \u2013 3"
    ]
  },
  {
    "question": "Identify the correct order of phases in the Public/Private Key encryption?\n\n 1. Server provides its public key \n 2. Client makes request for secure resource\n 3. Server provides secure resource, encrypted with the client's public key \n 4. Client provides its public key, encrypted with the server's public key",
    "options": [
      "2 \u2013 1 \u2013 4 \u2013 3",
      "1 \u2013 2 \u2013 3 \u2013 4",
      "3 \u2013 1 \u2013 4 \u2013 2",
      "2 \u2013 4 \u2013 3 \u2013 1"
    ],
    "description": "Choose 1 option",
    "answer": [
      "2 \u2013 1 \u2013 4 \u2013 3"
    ]
  },
  {
    "question": "Identify the correct order of phases in the Public/Private Key encryption?1. Server provides its public key 2. Client makes request for secure resource3. Server provides secure resource, encrypted with the client's public key 4. Client provides its public key, encrypted with the server's public key",
    "options": [
      "2 \u2013 1 \u2013 4 \u2013 3",
      "1 \u2013 2 \u2013 3 \u2013 4",
      "3 \u2013 1 \u2013 4 \u2013 2",
      "2 \u2013 4 \u2013 3 \u2013 1"
    ],
    "description": "Choose 1 option",
    "answer": [
      "2 \u2013 1 \u2013 4 \u2013 3"
    ]
  },
  {
    "question": "_____ authentication improves a little on BASIC by using a secure algorithm to encrypt the password and other security details.",
    "options": [
      "BASIC",
      "DIGEST",
      "FORM",
      "CLIENT-CERT",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "DIGEST"
    ]
  },
  {
    "question": "_____ authentication improves a little on BASIC by using a secure algorithm to encrypt the password and other security details.",
    "options": [
      "BASIC",
      "DIGEST",
      "FORM",
      "CLIENT-CERT",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "DIGEST"
    ]
  },
  {
    "question": "What authentication type requires that the form must have \"j_security_check\u201d as its action?",
    "options": [
      "BASIC",
      "DIGEST",
      "FORM",
      "CLIENT-CERT"
    ],
    "description": "Choose 1 option",
    "answer": [
      "FORM"
    ]
  },
  {
    "question": "What authentication type requires that the form must have \"j_security_check\u201d as its action?",
    "options": [
      "BASIC",
      "DIGEST",
      "FORM",
      "CLIENT-CERT"
    ],
    "description": "Choose 1 option",
    "answer": [
      "FORM"
    ]
  },
  {
    "question": "____ authentication type is a little improved form of Basic type.",
    "options": [
      "BASIC",
      "DIGEST",
      "FORM",
      "CLIENT-CERT"
    ],
    "description": "Choose 1 option",
    "answer": [
      "DIGEST"
    ]
  },
  {
    "question": "____ authentication type is a little improved form of Basic type.",
    "options": [
      "BASIC",
      "DIGEST",
      "FORM",
      "CLIENT-CERT"
    ],
    "description": "Choose 1 option",
    "answer": [
      "DIGEST"
    ]
  },
  {
    "question": "___ security mechanism is used to prove to one another that they are acting on behalf of specific identities that are authorized for access",
    "options": [
      "Confidentiality",
      "Authentication",
      "Authorization",
      "Data Integrity"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authentication"
    ]
  },
  {
    "question": "___ security mechanism is used to prove to one another that they are acting on behalf of specific identities that are authorized for access",
    "options": [
      "Confidentiality",
      "Authentication",
      "Authorization",
      "Data Integrity"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authentication"
    ]
  },
  {
    "question": "Consider the following code and select the correct statement about it from the options below.<html><body><%! int aNum=5 %>The value of aNum is <%= aNum %></body></html>",
    "options": [
      "It will print \"The value of aNum is 5\" to the output.",
      "It will flag a compile-time error because of an incorrect declaration.",
      "It will throw a runtime exception while executing the expression.",
      "It will not flag any compile time or runtime errors and will not print anything to the output.",
      "If you remove \"!\", it will not flag any compile time or runtime errors."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It will flag a compile-time error because of an incorrect declaration."
    ]
  },
  {
    "question": "Consider the following code and select the correct statement about it from the options below.<html><body><%! int aNum=5 %>The value of aNum is <%= aNum %></body></html>",
    "options": [
      "It will print \"The value of aNum is 5\" to the output.",
      "It will flag a compile-time error because of an incorrect declaration.",
      "It will throw a runtime exception while executing the expression.",
      "It will not flag any compile time or runtime errors and will not print anything to the output.",
      "If you remove \"!\", it will not flag any compile time or runtime errors."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It will flag a compile-time error because of an incorrect declaration."
    ]
  },
  {
    "question": "Which of the followings correctly declares that the current page is an error page and also enables it to take part in a session?",
    "options": [
      "<%@ page pageType=\"errorPage\" session=\"required\" %>",
      "<%@ page isErrorPage=\"true\" session=\"mandatory\" %>",
      "<%@ page errorPage=\"true\" session=\"true\" %>",
      "<%@ page isErrorPage=\"true\" session=\"true\" %>",
      "<%@ page errorPage=\"true\" session=\"mandatory\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page isErrorPage=\"true\" session=\"true\" %>"
    ]
  },
  {
    "question": "Which of the followings correctly declares that the current page is an error page and also enables it to take part in a session?",
    "options": [
      "<%@ page pageType=\"errorPage\" session=\"required\" %>",
      "<%@ page isErrorPage=\"true\" session=\"mandatory\" %>",
      "<%@ page errorPage=\"true\" session=\"true\" %>",
      "<%@ page isErrorPage=\"true\" session=\"true\" %>",
      "<%@ page errorPage=\"true\" session=\"mandatory\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page isErrorPage=\"true\" session=\"true\" %>"
    ]
  },
  {
    "question": "Use a _________ to place code in the generated servlet outside of the _jspService(  ) method",
    "options": [
      "scriptlet",
      "comment",
      "declaration",
      "expression"
    ],
    "description": "Choose 1 option",
    "answer": [
      "declaration"
    ]
  },
  {
    "question": "Use a _________ to place code in the generated servlet outside of the _jspService(  ) method",
    "options": [
      "scriptlet",
      "comment",
      "declaration",
      "expression"
    ],
    "description": "Choose 1 option",
    "answer": [
      "declaration"
    ]
  },
  {
    "question": "JSP expression is evaluated and the result is converted into a string at ________",
    "options": [
      "Run-time",
      "Compiled-time",
      "Tested-time",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Run-time"
    ]
  },
  {
    "question": "JSP expression is evaluated and the result is converted into a string at ________",
    "options": [
      "Run-time",
      "Compiled-time",
      "Tested-time",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Run-time"
    ]
  },
  {
    "question": "The <jsp:include/> action can pass parameters to the page which it is included. How does this second page obtain the value of these parameters?",
    "options": [
      "Use the   action",
      "Use the request.getParameter(  ) method",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Use the request.getParameter(  ) method"
    ]
  },
  {
    "question": "The <jsp:include/> action can pass parameters to the page which it is included. How does this second page obtain the value of these parameters?",
    "options": [
      "Use the   action",
      "Use the request.getParameter(  ) method",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Use the request.getParameter(  ) method"
    ]
  },
  {
    "question": "What object will represent the output stream for the JSP page?",
    "options": [
      "out",
      "response",
      "dispatch",
      "writer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "out"
    ]
  },
  {
    "question": "What object will represent the output stream for the JSP page?",
    "options": [
      "out",
      "response",
      "dispatch",
      "writer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "out"
    ]
  },
  {
    "question": "Which statement( s) is( are) applied during JSP page translation?",
    "options": [
      "The JSP page implementation class is created",
      "The JSP page is validated for syntactic correctness",
      "The associated tag files are validated for syntactic correctness",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which statement( s) is( are) applied during JSP page translation?",
    "options": [
      "The JSP page implementation class is created",
      "The JSP page is validated for syntactic correctness",
      "The associated tag files are validated for syntactic correctness",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which is a benefit of precompiling a JSP page?",
    "options": [
      "It provides better performance on the first request for the JSP page.",
      "It provides the ability to debug runtime errors in the application.",
      "It avoids initialization on the first request.",
      "It avoids execution of the _jspService method on the first request."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It provides better performance on the first request for the JSP page."
    ]
  },
  {
    "question": "Which is a benefit of precompiling a JSP page?",
    "options": [
      "It provides better performance on the first request for the JSP page.",
      "It provides the ability to debug runtime errors in the application.",
      "It avoids initialization on the first request.",
      "It avoids execution of the _jspService method on the first request."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It provides better performance on the first request for the JSP page."
    ]
  },
  {
    "question": "A JavaBeans component has the following field: private boolean enabled;  \n\n Which pairs of method declarations follow the JavaBeans standard for accessing this field?",
    "options": [
      "public void setEnabled(  boolean enabled)  \n public boolean getEnabled(  )",
      "public void setEnabled(  boolean enabled) \n public void isEnabled(  )",
      "public Boolean setEnabled(  boolean enabled)  \n public boolean sEnabled(  )",
      "public boolean setEnabled(  boolean enabled)  \n public boolean getEnabled(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void setEnabled(  boolean enabled)  \n public boolean getEnabled(  )"
    ]
  },
  {
    "question": "A JavaBeans component has the following field: private boolean enabled;  \n\n Which pairs of method declarations follow the JavaBeans standard for accessing this field?",
    "options": [
      "public void setEnabled(  boolean enabled)  \n public boolean getEnabled(  )",
      "public void setEnabled(  boolean enabled) \n public void isEnabled(  )",
      "public Boolean setEnabled(  boolean enabled)  \n public boolean sEnabled(  )",
      "public boolean setEnabled(  boolean enabled)  \n public boolean getEnabled(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void setEnabled(  boolean enabled)  \n public boolean getEnabled(  )"
    ]
  },
  {
    "question": "JSP __________ let you insert arbitrary code into the servlet's _jspService method ( which is called by service).",
    "options": [
      "scriptlets",
      "declarations",
      "expressions",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "scriptlets"
    ]
  },
  {
    "question": "JSP __________ let you insert arbitrary code into the servlet's _jspService method ( which is called by service).",
    "options": [
      "scriptlets",
      "declarations",
      "expressions",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "scriptlets"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Declarations?",
    "options": [
      "<%! code %>",
      "<% code %>",
      "<%= code %>",
      "None of these"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%! code %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Declarations?",
    "options": [
      "<%! code %>",
      "<% code %>",
      "<%= code %>",
      "None of these"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%! code %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Scriptlets?",
    "options": [
      "<% code %>",
      "<%= code %>",
      "<%! code %>",
      "None of these"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<% code %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Scriptlets?",
    "options": [
      "<% code %>",
      "<%= code %>",
      "<%! code %>",
      "None of these"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<% code %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Scriptlets?",
    "options": [
      "<% code %>",
      "<%= code %>",
      "<%! code %>",
      "None of these"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<% code %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Scriptlets?",
    "options": [
      "<% code %>",
      "<%= code %>",
      "<%! code %>",
      "None of these"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<% code %>"
    ]
  },
  {
    "question": "Which of the following represents the XML equivalent of this statement <%@ include file=\"a.jsp\"%> . Select one correct statement.",
    "options": [
      "<jsp:include file=\"a.jsp\"/>",
      "<jsp:include page=\"a.jsp\"/>",
      "<jsp:directive.include file=\"a.jsp\"/>",
      "There is no XML equivalent of include directive."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:directive.include file=\"a.jsp\"/>"
    ]
  },
  {
    "question": "Which of the following represents the XML equivalent of this statement <%@ include file=\"a.jsp\"%> . Select one correct statement.",
    "options": [
      "<jsp:include file=\"a.jsp\"/>",
      "<jsp:include page=\"a.jsp\"/>",
      "<jsp:directive.include file=\"a.jsp\"/>",
      "There is no XML equivalent of include directive."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:directive.include file=\"a.jsp\"/>"
    ]
  },
  {
    "question": "Consider the following code and select the correct statement about it from the \n options below. \n   <html><body> \n      <%! int aNum=5 %> \n      The value of aNum is <%= aNum %> \n   </body></html>",
    "options": [
      "It will print \"The value of aNum is 5\" to the output.",
      "It will flag a compile-time error because of an incorrect declaration.",
      "It will throw a runtime exception while executing the expression.",
      "It will not flag any compile time or runtime errors and will not print anything to the output."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It will flag a compile-time error because of an incorrect declaration."
    ]
  },
  {
    "question": "Consider the following code and select the correct statement about it from the \n options below. \n   <html><body> \n      <%! int aNum=5 %> \n      The value of aNum is <%= aNum %> \n   </body></html>",
    "options": [
      "It will print \"The value of aNum is 5\" to the output.",
      "It will flag a compile-time error because of an incorrect declaration.",
      "It will throw a runtime exception while executing the expression.",
      "It will not flag any compile time or runtime errors and will not print anything to the output."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It will flag a compile-time error because of an incorrect declaration."
    ]
  },
  {
    "question": "Which of the following correctly declares that the current page is an error page \n and also enables it to take part in a session? ( Select one)",
    "options": [
      "<%@ page pageType=\"errorPage\" session=\"required\"  %>",
      "<%@ page isErrorPage=\"true\"   session=\"mandatory\" %>",
      "<%@ page errorPage=\"true\"     session=\"true\"      %>",
      "<%@ page isErrorPage=\"true\"   session=\"true\"      %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page isErrorPage=\"true\"   session=\"true\"      %>"
    ]
  },
  {
    "question": "Which of the following correctly declares that the current page is an error page \n and also enables it to take part in a session? ( Select one)",
    "options": [
      "<%@ page pageType=\"errorPage\" session=\"required\"  %>",
      "<%@ page isErrorPage=\"true\"   session=\"mandatory\" %>",
      "<%@ page errorPage=\"true\"     session=\"true\"      %>",
      "<%@ page isErrorPage=\"true\"   session=\"true\"      %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page isErrorPage=\"true\"   session=\"true\"      %>"
    ]
  },
  {
    "question": "A web application allows the HTML title banner to be set using a servlet context initialization parameter called titleStr. Which two properly set the title in this scenario? ( Select two)",
    "options": [
      "<title>${titleStr}</title>",
      "<title>${initParam.titleStr}</title>",
      "<title>${params[0].titleStr}</title>",
      "<title>${paramValues.titleStr}</title>",
      "<title>${initParam['titleStr']}</title>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<title>${initParam.titleStr}</title>",
      "<title>${initParam['titleStr']}</title>"
    ]
  },
  {
    "question": "A web application allows the HTML title banner to be set using a servlet context initialization parameter called titleStr. Which two properly set the title in this scenario? ( Select two)",
    "options": [
      "<title>${titleStr}</title>",
      "<title>${initParam.titleStr}</title>",
      "<title>${params[0].titleStr}</title>",
      "<title>${paramValues.titleStr}</title>",
      "<title>${initParam['titleStr']}</title>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<title>${initParam.titleStr}</title>",
      "<title>${initParam['titleStr']}</title>"
    ]
  },
  {
    "question": "Which of the followings is a correct way to pass a parameter equivalent to the query string user=mary at request time to an included component?",
    "options": [
      "<jsp:include page=\"other.jsp\"><jsp:param paramName=\"user\" paramValue=\"mary\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param name=\"mary\" value=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param param=\"user\" value=\"mary\"/></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param user=\"mary\" /></jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>"
    ]
  },
  {
    "question": "Which of the followings is a correct way to pass a parameter equivalent to the query string user=mary at request time to an included component?",
    "options": [
      "<jsp:include page=\"other.jsp\"><jsp:param paramName=\"user\" paramValue=\"mary\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param name=\"mary\" value=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param param=\"user\" value=\"mary\"/></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param user=\"mary\" /></jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>"
    ]
  },
  {
    "question": "Given a web application in which the request parameter productID contains a product identifier. Which TWO EL expressions evaluate the value of the productID?",
    "options": [
      "${param.productID}",
      "${paramValues.productID[0]}",
      "${params.productID}",
      "${params.productID[1]}",
      "${paramValues.productID}"
    ],
    "description": "Choose all that apply",
    "answer": [
      "${param.productID}",
      "${paramValues.productID[0]}"
    ]
  },
  {
    "question": "Given a web application in which the request parameter productID contains a product identifier. Which TWO EL expressions evaluate the value of the productID?",
    "options": [
      "${param.productID}",
      "${paramValues.productID[0]}",
      "${params.productID}",
      "${params.productID[1]}",
      "${paramValues.productID}"
    ],
    "description": "Choose all that apply",
    "answer": [
      "${param.productID}",
      "${paramValues.productID[0]}"
    ]
  },
  {
    "question": "Which of the following constitute valid ways of importing Java classes into JSP page source?",
    "options": [
      "<%! import java.util.*; %>",
      "<%@ import java.util.* %>",
      "<%@ page import=\"java.util.*\" %>",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page import=\"java.util.*\" %>"
    ]
  },
  {
    "question": "Which of the following constitute valid ways of importing Java classes into JSP page source?",
    "options": [
      "<%! import java.util.*; %>",
      "<%@ import java.util.* %>",
      "<%@ page import=\"java.util.*\" %>",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page import=\"java.util.*\" %>"
    ]
  },
  {
    "question": "Which method( s) must be generated in servlet when the jsp page is translated?",
    "options": [
      "All of the others.",
      "jspInit",
      "jspDestroy",
      "_jspService"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Which method( s) must be generated in servlet when the jsp page is translated?",
    "options": [
      "All of the others.",
      "jspInit",
      "jspDestroy",
      "_jspService"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "The page, request, session, or application object in JSP has some methods as _______",
    "options": [
      "setAttribute, getAttribute, removeAttribute",
      "setAttribute, getSession, getParameter",
      "setContent, getAttribute, invalidate",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "setAttribute, getAttribute, removeAttribute"
    ]
  },
  {
    "question": "The page, request, session, or application object in JSP has some methods as _______",
    "options": [
      "setAttribute, getAttribute, removeAttribute",
      "setAttribute, getSession, getParameter",
      "setContent, getAttribute, invalidate",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "setAttribute, getAttribute, removeAttribute"
    ]
  },
  {
    "question": "JSP expression is evaluated and the result is converted into a string at ________",
    "options": [
      "Run-time",
      "Compiled-time",
      "Tested-time",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Run-time"
    ]
  },
  {
    "question": "JSP expression is evaluated and the result is converted into a string at ________",
    "options": [
      "Run-time",
      "Compiled-time",
      "Tested-time",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Run-time"
    ]
  },
  {
    "question": "The translation unit consists of the JSP source file as well as all of its _____ include files.",
    "options": [
      "Static",
      "Dynamic",
      "Half static-Half dynamic",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Static"
    ]
  },
  {
    "question": "The translation unit consists of the JSP source file as well as all of its _____ include files.",
    "options": [
      "Static",
      "Dynamic",
      "Half static-Half dynamic",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Static"
    ]
  },
  {
    "question": "What is the initial contact point for handling a web request in a Page-Centric architecture?",
    "options": [
      "A JSP page.",
      "A Java bean.",
      "A servlet.",
      "A session manager."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A JSP page."
    ]
  },
  {
    "question": "What is the initial contact point for handling a web request in a Page-Centric architecture?",
    "options": [
      "A JSP page.",
      "A Java bean.",
      "A servlet.",
      "A session manager."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A JSP page."
    ]
  },
  {
    "question": "The JSP developer wants a comment to be visible in the final output to the browser. Which comment style needs to be used in a JSP page?",
    "options": [
      "<!-- this is a comment -->",
      "<% // this is a comment %>",
      "<%-- this is a comment --%>",
      "<% /** this is a comment **/ %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<!-- this is a comment -->"
    ]
  },
  {
    "question": "The JSP developer wants a comment to be visible in the final output to the browser. Which comment style needs to be used in a JSP page?",
    "options": [
      "<!-- this is a comment -->",
      "<% // this is a comment %>",
      "<%-- this is a comment --%>",
      "<% /** this is a comment **/ %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<!-- this is a comment -->"
    ]
  },
  {
    "question": "A JSP page needs to perform some operations before servicing the first request. Where can this be done?",
    "options": [
      "within the page directive of the JSP page",
      "within a scriptlet at the top of the JSP page",
      "within a method called jspInit",
      "within the <jsp:initialize> XML element"
    ],
    "description": "Choose 1 option",
    "answer": [
      "within a method called jspInit"
    ]
  },
  {
    "question": "A JSP page needs to perform some operations before servicing the first request. Where can this be done?",
    "options": [
      "within the page directive of the JSP page",
      "within a scriptlet at the top of the JSP page",
      "within a method called jspInit",
      "within the <jsp:initialize> XML element"
    ],
    "description": "Choose 1 option",
    "answer": [
      "within a method called jspInit"
    ]
  },
  {
    "question": "JSP __________ let you insert arbitrary code into the servlet's _jspService method ( which is called by service).",
    "options": [
      "scriptlets",
      "declarations",
      "expressions",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "scriptlets"
    ]
  },
  {
    "question": "JSP __________ let you insert arbitrary code into the servlet's _jspService method ( which is called by service).",
    "options": [
      "scriptlets",
      "declarations",
      "expressions",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "scriptlets"
    ]
  },
  {
    "question": "A JSP page needs to generate an XML file. Which attribute of page directive may be used to specify that the JSP page is generating an XML file.",
    "options": [
      "<%@page contentType =\u201dtext/xml\u201d>",
      "<%@page contentType =\u201dxml\u201d>",
      "<%@page contentType =\u201dtext/html\u201d>",
      "<%@page contentType =\u201dhtml/xml\u201d>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@page contentType =\u201dtext/xml\u201d>"
    ]
  },
  {
    "question": "A JSP page needs to generate an XML file. Which attribute of page directive may be used to specify that the JSP page is generating an XML file.",
    "options": [
      "<%@page contentType =\u201dtext/xml\u201d>",
      "<%@page contentType =\u201dxml\u201d>",
      "<%@page contentType =\u201dtext/html\u201d>",
      "<%@page contentType =\u201dhtml/xml\u201d>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@page contentType =\u201dtext/xml\u201d>"
    ]
  },
  {
    "question": "Which of the following methods is defined by the JSP engine?",
    "options": [
      "jspInit(  )",
      "_jspService(  )",
      "_jspService( ServletRequest, ServletResponse)",
      "_jspService( HttpServletRequest, HttpServletResponse)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "_jspService( HttpServletRequest, HttpServletResponse)"
    ]
  },
  {
    "question": "Which of the following methods is defined by the JSP engine?",
    "options": [
      "jspInit(  )",
      "_jspService(  )",
      "_jspService( ServletRequest, ServletResponse)",
      "_jspService( HttpServletRequest, HttpServletResponse)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "_jspService( HttpServletRequest, HttpServletResponse)"
    ]
  },
  {
    "question": "Which of the following exceptions may be thrown by the _jspService(  ) method? ( Select one)",
    "options": [
      "javax.servlet.ServletException",
      "javax.servlet.jsp.JSPException",
      "javax.servlet.ServletException and javax.servlet.jsp.JSPException",
      "javax.servlet.ServletException and java.io.IOException"
    ],
    "description": "Choose 1 option",
    "answer": [
      "javax.servlet.ServletException and java.io.IOException"
    ]
  },
  {
    "question": "Which of the following exceptions may be thrown by the _jspService(  ) method? ( Select one)",
    "options": [
      "javax.servlet.ServletException",
      "javax.servlet.jsp.JSPException",
      "javax.servlet.ServletException and javax.servlet.jsp.JSPException",
      "javax.servlet.ServletException and java.io.IOException"
    ],
    "description": "Choose 1 option",
    "answer": [
      "javax.servlet.ServletException and java.io.IOException"
    ]
  },
  {
    "question": "Given:\n 6. <myTag:foo bar='42'>\n 7. <%=\"processing\" %>\n 8. </myTag:foo> and a custom tag handler for foo which extends TagSupport. Which two are true about the tag handler referenced by foo? ( Choose two.)",
    "options": [
      "The doStartTag method is called once.",
      "The doAfterBody method is NOT called.",
      "The EVAL_PAGE constant is a valid return value for the doEndTag method.",
      "The SKIP_PAGE constant is a valid return value for the doStartTag method.",
      "The EVAL_BODY_BUFFERED constant is a valid return value for the doStartTag method."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The doStartTag method is called once.",
      "The EVAL_PAGE constant is a valid return value for the doEndTag method."
    ]
  },
  {
    "question": "Given:\n 6. <myTag:foo bar='42'>\n 7. <%=\"processing\" %>\n 8. </myTag:foo> and a custom tag handler for foo which extends TagSupport. Which two are true about the tag handler referenced by foo? ( Choose two.)",
    "options": [
      "The doStartTag method is called once.",
      "The doAfterBody method is NOT called.",
      "The EVAL_PAGE constant is a valid return value for the doEndTag method.",
      "The SKIP_PAGE constant is a valid return value for the doStartTag method.",
      "The EVAL_BODY_BUFFERED constant is a valid return value for the doStartTag method."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The doStartTag method is called once.",
      "The EVAL_PAGE constant is a valid return value for the doEndTag method."
    ]
  },
  {
    "question": "Which statement is true if the doStartTag method returns EVAL_BODY_BUFFERED ?",
    "options": [
      "The tag handler must implement BodyTag.",
      "The doAfterBody method is NOT called.",
      "The setBodyContent method is called once.",
      "It is never legal to return EVAL_BODY_BUFFERED from doStartTag."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The setBodyContent method is called once."
    ]
  },
  {
    "question": "Which statement is true if the doStartTag method returns EVAL_BODY_BUFFERED ?",
    "options": [
      "The tag handler must implement BodyTag.",
      "The doAfterBody method is NOT called.",
      "The setBodyContent method is called once.",
      "It is never legal to return EVAL_BODY_BUFFERED from doStartTag."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The setBodyContent method is called once."
    ]
  },
  {
    "question": "You have created a servlet that generates weather maps. The data for these maps is calculated by a remote host. The IP address of this host is usually stable, but occasionally does have to change as the corporate network grows and changes. This IP address used to be hard coded, but after the fifth change to the IP address in two years, you have decided that this value should be declared in the deployment descriptor so you do NOT have the recompile the web application every time the IP address changes. Which deployment descriptor snippet accomplishes this goal?",
    "options": [
      "<serlvet-param>\n <name>WeatherServlet.hostIP</name>\n <value>127.0.4.20</value>\n </servlet-param>",
      "<init-param>\n <name>WeatherServlet.hostIP</name>\n <value>127.0.4.20</value>\n </init-param>",
      "<servlet>\n <!-- servlet definition here -->\n <param-name>WeatherServlet.hostIP</param-name>\n <param-value>127.0.4.20</param-value>\n </servlet>",
      "<init-param>\n <param-name>WeatherServlet.hostIP</param-name>\n <param-value>127.0.4.20</param-value>\n </init-param>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<init-param>\n <param-name>WeatherServlet.hostIP</param-name>\n <param-value>127.0.4.20</param-value>\n </init-param>"
    ]
  },
  {
    "question": "You have created a servlet that generates weather maps. The data for these maps is calculated by a remote host. The IP address of this host is usually stable, but occasionally does have to change as the corporate network grows and changes. This IP address used to be hard coded, but after the fifth change to the IP address in two years, you have decided that this value should be declared in the deployment descriptor so you do NOT have the recompile the web application every time the IP address changes. Which deployment descriptor snippet accomplishes this goal?",
    "options": [
      "<serlvet-param>\n <name>WeatherServlet.hostIP</name>\n <value>127.0.4.20</value>\n </servlet-param>",
      "<init-param>\n <name>WeatherServlet.hostIP</name>\n <value>127.0.4.20</value>\n </init-param>",
      "<servlet>\n <!-- servlet definition here -->\n <param-name>WeatherServlet.hostIP</param-name>\n <param-value>127.0.4.20</param-value>\n </servlet>",
      "<init-param>\n <param-name>WeatherServlet.hostIP</param-name>\n <param-value>127.0.4.20</param-value>\n </init-param>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<init-param>\n <param-name>WeatherServlet.hostIP</param-name>\n <param-value>127.0.4.20</param-value>\n </init-param>"
    ]
  },
  {
    "question": "Assume the product attribute does NOT yet exist in any scope. Which two create an instance of com.example.Product and initialize the name and price properties to the name and price request parameters? ( Choose two.)",
    "options": [
      "<jsp:useBean id=\"product\" class=\"com.example.Product\" /> . <jsp:setProperty name=\"product\" property=\"*\" />",
      "<jsp:useBean id=\"product\" class=\"com.example.Product\" /> <% product.setName(  request.getParameter(  \"name\" ) ); %> <% product.setPrice(  request.getParameter(  \"price\" ) ); %>",
      "<jsp:useBean id=\"product\" class=\"com.example.Product\" /> . <jsp:setProperty name=\"product\" property=\"name\"\n value=\"${param.name}\" />\n <jsp:setProperty name=\"product\" property=\"price\" value=\"${param.price}\" />",
      "<jsp:useBean id=\"product\" class=\"com.example.Product\"> . <jsp:setProperty name=\"product\" property=\"name\"\n value=\"${name}\" />\n <jsp:setProperty name=\"product\" property=\"price\" value=\"${price}\" />\n </jsp:useBean>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<jsp:useBean id=\"product\" class=\"com.example.Product\" /> <% product.setName(  request.getParameter(  \"name\" ) ); %> <% product.setPrice(  request.getParameter(  \"price\" ) ); %>",
      "<jsp:useBean id=\"product\" class=\"com.example.Product\"> . <jsp:setProperty name=\"product\" property=\"name\"\n value=\"${name}\" />\n <jsp:setProperty name=\"product\" property=\"price\" value=\"${price}\" />\n </jsp:useBean>"
    ]
  },
  {
    "question": "Assume the product attribute does NOT yet exist in any scope. Which two create an instance of com.example.Product and initialize the name and price properties to the name and price request parameters? ( Choose two.)",
    "options": [
      "<jsp:useBean id=\"product\" class=\"com.example.Product\" /> . <jsp:setProperty name=\"product\" property=\"*\" />",
      "<jsp:useBean id=\"product\" class=\"com.example.Product\" /> <% product.setName(  request.getParameter(  \"name\" ) ); %> <% product.setPrice(  request.getParameter(  \"price\" ) ); %>",
      "<jsp:useBean id=\"product\" class=\"com.example.Product\" /> . <jsp:setProperty name=\"product\" property=\"name\"\n value=\"${param.name}\" />\n <jsp:setProperty name=\"product\" property=\"price\" value=\"${param.price}\" />",
      "<jsp:useBean id=\"product\" class=\"com.example.Product\"> . <jsp:setProperty name=\"product\" property=\"name\"\n value=\"${name}\" />\n <jsp:setProperty name=\"product\" property=\"price\" value=\"${price}\" />\n </jsp:useBean>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<jsp:useBean id=\"product\" class=\"com.example.Product\" /> <% product.setName(  request.getParameter(  \"name\" ) ); %> <% product.setPrice(  request.getParameter(  \"price\" ) ); %>",
      "<jsp:useBean id=\"product\" class=\"com.example.Product\"> . <jsp:setProperty name=\"product\" property=\"name\"\n value=\"${name}\" />\n <jsp:setProperty name=\"product\" property=\"price\" value=\"${price}\" />\n </jsp:useBean>"
    ]
  },
  {
    "question": "A session-scoped attribute, product, is stored by a servlet. That servlet then forwards to a JSP page. This attribute holds an instance of the com.example.Product class with a name property of \"The Matrix\" and price property of 39.95. Given the JSP page code snippet:\n 1. <jsp:useBean id='product' class='com.example.Product'>\n 2. <jsp:setProperty name='product' property='price' value='49.95'/>\n 3. </jsp:useBean>\n 4. <%= product.getName(  ) %> costs <%= product.getPrice(  ) %> What is the response output of this JSP page code snippet?",
    "options": [
      "Default costs 0.0",
      "Default costs 49.95",
      "Default costs 39.95",
      "The Matrix costs 0.0"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Default costs 49.95"
    ]
  },
  {
    "question": "A session-scoped attribute, product, is stored by a servlet. That servlet then forwards to a JSP page. This attribute holds an instance of the com.example.Product class with a name property of \"The Matrix\" and price property of 39.95. Given the JSP page code snippet:\n 1. <jsp:useBean id='product' class='com.example.Product'>\n 2. <jsp:setProperty name='product' property='price' value='49.95'/>\n 3. </jsp:useBean>\n 4. <%= product.getName(  ) %> costs <%= product.getPrice(  ) %> What is the response output of this JSP page code snippet?",
    "options": [
      "Default costs 0.0",
      "Default costs 49.95",
      "Default costs 39.95",
      "The Matrix costs 0.0"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Default costs 49.95"
    ]
  },
  {
    "question": "A servlet sets a session-scoped attribute product with an instance of com.example.Product and forwards to a JSP. Which two output the name of the product in the response?",
    "options": [
      "<jsp:getProperty name=\"product\" property=\"name\" />",
      "<jsp:useBean id=\"com.example.Product\" />\n <%= product.getName(  ) %>",
      "<jsp:getProperty name=\"product\" class=\"com.example.Product\" property=\"name\" />",
      "<jsp:useBean id=\"product\" type=\"com.example.Product\"> . <%= product.getName(  ) %>\n </jsp:useBean>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:getProperty name=\"product\" property=\"name\" />"
    ]
  },
  {
    "question": "A servlet sets a session-scoped attribute product with an instance of com.example.Product and forwards to a JSP. Which two output the name of the product in the response?",
    "options": [
      "<jsp:getProperty name=\"product\" property=\"name\" />",
      "<jsp:useBean id=\"com.example.Product\" />\n <%= product.getName(  ) %>",
      "<jsp:getProperty name=\"product\" class=\"com.example.Product\" property=\"name\" />",
      "<jsp:useBean id=\"product\" type=\"com.example.Product\"> . <%= product.getName(  ) %>\n </jsp:useBean>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:getProperty name=\"product\" property=\"name\" />"
    ]
  },
  {
    "question": "A servlet sets a session-scoped attribute product with an instance of com.example.Product and forwards to a JSP. Which two output the name of the product in the response?",
    "options": [
      "${product.name}",
      "<jsp:useBean id=\"com.example.Product\" />\n <%= product.getName(  ) %>",
      "<jsp:getProperty name=\"product\" class=\"com.example.Product\" property=\"name\" />",
      "<jsp:useBean id=\"product\" type=\"com.example.Product\"> . <%= product.getName(  ) %>\n </jsp:useBean>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "${product.name}"
    ]
  },
  {
    "question": "A servlet sets a session-scoped attribute product with an instance of com.example.Product and forwards to a JSP. Which two output the name of the product in the response?",
    "options": [
      "${product.name}",
      "<jsp:useBean id=\"com.example.Product\" />\n <%= product.getName(  ) %>",
      "<jsp:getProperty name=\"product\" class=\"com.example.Product\" property=\"name\" />",
      "<jsp:useBean id=\"product\" type=\"com.example.Product\"> . <%= product.getName(  ) %>\n </jsp:useBean>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "${product.name}"
    ]
  },
  {
    "question": "Which is a benefit of precompiling a JSP page?",
    "options": [
      "It avoids initialization on the first request.",
      "It provides the ability to debug runtime errors in the application.",
      "It provides better performance on the first request for the JSP page.",
      "It avoids execution of the _jspService method on the first request."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It provides better performance on the first request for the JSP page."
    ]
  },
  {
    "question": "Which is a benefit of precompiling a JSP page?",
    "options": [
      "It avoids initialization on the first request.",
      "It provides the ability to debug runtime errors in the application.",
      "It provides better performance on the first request for the JSP page.",
      "It avoids execution of the _jspService method on the first request."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It provides better performance on the first request for the JSP page."
    ]
  },
  {
    "question": "Your company has a corporate policy that prohibits storing a customer's credit card number in any corporate database. However, users have complained that they do NOT want to re- enter their credit card number for each transaction. Your management has decided to use client-side cookies to record the user's credit card number for 120 days. Furthermore, they also want to protect this information during transit from the web browser to the web container; so the cookie must only be transmitted over HTTPS. Which code snippet creates the \"creditCard\" cookie and adds it to the out going response to be stored on the user's web browser?",
    "options": [
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setAge( 10368000);\n 13. response.addCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setHttps( true);\n 12. c.setMaxAge( 10368000);\n 13. response.setCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setMaxAge( 10368000);\n 13. response.addCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setHttps( true);\n 12. c.setAge( 10368000);\n 13. response.addCookie( c);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setMaxAge( 10368000);\n 13. response.addCookie( c);"
    ]
  },
  {
    "question": "Your company has a corporate policy that prohibits storing a customer's credit card number in any corporate database. However, users have complained that they do NOT want to re- enter their credit card number for each transaction. Your management has decided to use client-side cookies to record the user's credit card number for 120 days. Furthermore, they also want to protect this information during transit from the web browser to the web container; so the cookie must only be transmitted over HTTPS. Which code snippet creates the \"creditCard\" cookie and adds it to the out going response to be stored on the user's web browser?",
    "options": [
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setAge( 10368000);\n 13. response.addCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setHttps( true);\n 12. c.setMaxAge( 10368000);\n 13. response.setCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setMaxAge( 10368000);\n 13. response.addCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setHttps( true);\n 12. c.setAge( 10368000);\n 13. response.addCookie( c);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setMaxAge( 10368000);\n 13. response.addCookie( c);"
    ]
  },
  {
    "question": "Consider the following TLD excerpt: <body-content>empty</body-content><attribute><name>color</name><rtexprvalue>true</rtexprvalue></attribute><dynamic-attributes>true</dynamic-attributes> If the name of the tag is tagname and its prefix is pre, which of the following JSP statements is valid?",
    "options": [
      "<pre:tagname color=\"yellow\" size=${sizenum} />",
      "<pre:tagname size=\"18\" color=\"red\"> </pre:tagname>",
      "<pre:tagname color=\"${colorname}\" size=\"22\" font=\"verdana\"></pre:tagname>",
      "<pre:tagname color=\"green\" size=\"30\">font=\"Times New Roman\"</pre:tagname>",
      "<pre:tagname color=\"${colorname}\" size=\"18\"></pre>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<pre:tagname color=\"${colorname}\" size=\"22\" font=\"verdana\"></pre:tagname>"
    ]
  },
  {
    "question": "Consider the following TLD excerpt: <body-content>empty</body-content><attribute><name>color</name><rtexprvalue>true</rtexprvalue></attribute><dynamic-attributes>true</dynamic-attributes> If the name of the tag is tagname and its prefix is pre, which of the following JSP statements is valid?",
    "options": [
      "<pre:tagname color=\"yellow\" size=${sizenum} />",
      "<pre:tagname size=\"18\" color=\"red\"> </pre:tagname>",
      "<pre:tagname color=\"${colorname}\" size=\"22\" font=\"verdana\"></pre:tagname>",
      "<pre:tagname color=\"green\" size=\"30\">font=\"Times New Roman\"</pre:tagname>",
      "<pre:tagname color=\"${colorname}\" size=\"18\"></pre>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<pre:tagname color=\"${colorname}\" size=\"22\" font=\"verdana\"></pre:tagname>"
    ]
  },
  {
    "question": "You are given a tag library that has a tag named printReport. This tag may accept an attribute, department, which cannot take a dynamic value. Which of the following are correct uses of this tag? ( Select two)",
    "options": [
      "<mylib:printReport/>",
      "<mylib:printReport department=\"finance\"/>",
      "<mylib:printReport attribute=\"department\" value=\"finance\"/>",
      "<mylib:printReport attribute=\"department\" attribute-value=\"finance\"/>",
      "<mylib:printReport><jsp:attribute name=\"department\" value=\"finance\" /></mylib:printReport>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<mylib:printReport/>",
      "<mylib:printReport department=\"finance\"/>"
    ]
  },
  {
    "question": "You are given a tag library that has a tag named printReport. This tag may accept an attribute, department, which cannot take a dynamic value. Which of the following are correct uses of this tag? ( Select two)",
    "options": [
      "<mylib:printReport/>",
      "<mylib:printReport department=\"finance\"/>",
      "<mylib:printReport attribute=\"department\" value=\"finance\"/>",
      "<mylib:printReport attribute=\"department\" attribute-value=\"finance\"/>",
      "<mylib:printReport><jsp:attribute name=\"department\" value=\"finance\" /></mylib:printReport>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<mylib:printReport/>",
      "<mylib:printReport department=\"finance\"/>"
    ]
  },
  {
    "question": "Which of the followings is a correct way to pass a parameter equivalent to the query string user=mary at request time to an included component?",
    "options": [
      "<jsp:include page=\"other.jsp\"><jsp:param paramName=\"user\" paramValue=\"mary\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param name=\"mary\" value=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param param=\"user\" value=\"mary\"/></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param user=\"mary\" /></jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>"
    ]
  },
  {
    "question": "_______________ sends a request to an object and includes the result in a JSP file.",
    "options": [
      "<jsp:include>",
      "<jsp:forward>",
      "include directive",
      "import directive"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include>"
    ]
  },
  {
    "question": "Which of the followings is a correct way to pass a parameter equivalent to the query string user=mary at request time to an included component?",
    "options": [
      "<jsp:include page=\"other.jsp\"><jsp:param paramName=\"user\" paramValue=\"mary\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param name=\"mary\" value=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param param=\"user\" value=\"mary\"/></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param user=\"mary\" /></jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>"
    ]
  },
  {
    "question": "_______________ sends a request to an object and includes the result in a JSP file.",
    "options": [
      "<jsp:include>",
      "<jsp:forward>",
      "include directive",
      "import directive"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include>"
    ]
  },
  {
    "question": "Given a web application in which the request parameter productID contains a product identifier. Which TWO EL expressions evaluate the value of the productID?",
    "options": [
      "${param.productID}",
      "${paramValues.productID[0]}",
      "${params.productID}",
      "${params.productID[1]}",
      "${paramValues.productID}"
    ],
    "description": "Choose all that apply",
    "answer": [
      "${param.productID}",
      "${paramValues.productID[0]}"
    ]
  },
  {
    "question": "_______ includes a static file in a JSP file, parsing the file's JSP elements (choose the most correct one)",
    "options": [
      "<jsp:include>",
      "include directive",
      "import directive",
      "<jsp:useBean>",
      "<jsp:forward>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "include directive"
    ]
  },
  {
    "question": "Given a web application in which the request parameter productID contains a product identifier. Which TWO EL expressions evaluate the value of the productID?",
    "options": [
      "${param.productID}",
      "${paramValues.productID[0]}",
      "${params.productID}",
      "${params.productID[1]}",
      "${paramValues.productID}"
    ],
    "description": "Choose all that apply",
    "answer": [
      "${param.productID}",
      "${paramValues.productID[0]}"
    ]
  },
  {
    "question": "_______ includes a static file in a JSP file, parsing the file's JSP elements (choose the most correct one)",
    "options": [
      "<jsp:include>",
      "include directive",
      "import directive",
      "<jsp:useBean>",
      "<jsp:forward>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "include directive"
    ]
  },
  {
    "question": "The empty operator in EL language returns true value for ______",
    "options": [
      "null, empty Strings, empty arrays, and empty collections",
      "Only null value",
      "Only empty Strings because the null value in EL is converted to empty String",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "null, empty Strings, empty arrays, and empty collections"
    ]
  },
  {
    "question": "The empty operator in EL language returns true value for ______",
    "options": [
      "null, empty Strings, empty arrays, and empty collections",
      "Only null value",
      "Only empty Strings because the null value in EL is converted to empty String",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "null, empty Strings, empty arrays, and empty collections"
    ]
  },
  {
    "question": "If true value is passed in the ______ element then it suggests that the attribute needs to be evaluated at the time of request or during run time or dynamically.",
    "options": [
      "rtexprvalue",
      "attribute",
      "required",
      "name"
    ],
    "description": "Choose 1 option",
    "answer": [
      "rtexprvalue"
    ]
  },
  {
    "question": "If true value is passed in the ______ element then it suggests that the attribute needs to be evaluated at the time of request or during run time or dynamically.",
    "options": [
      "rtexprvalue",
      "attribute",
      "required",
      "name"
    ],
    "description": "Choose 1 option",
    "answer": [
      "rtexprvalue"
    ]
  },
  {
    "question": "Which of the following statements about the JavaBean is true?",
    "options": [
      "The public get/set methods give access to the properties of the bean.",
      "JavaBean component property must only be write-only format.",
      "It is possible initialise the JavaBeans with arguments using jsp:useBean.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The public get/set methods give access to the properties of the bean."
    ]
  },
  {
    "question": "Which of the following descriptions most closely matches what happens when a tag file is used for the first time?",
    "options": [
      "The tag file is located, and source is generated into a class which implements the SimpleTag interface, then compiled. The calling JSP makes calls to SimpleTag life cycle methods",
      "The tag file is located, and its source is included in the calling JSP. The combined source is treated as a translation unit and generated into servlet source, which is compiled",
      "The tag file is located, and its source is used for the generation and compilation of a separate servlet invoked from the calling JSP",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The tag file is located, and source is generated into a class which implements the SimpleTag interface, then compiled. The calling JSP makes calls to SimpleTag life cycle methods"
    ]
  },
  {
    "question": "Which of the followings is not a valid setting for the scope attribute of <jsp:useBean> tag?",
    "options": [
      "request",
      "local",
      "session",
      "application"
    ],
    "description": "Choose 1 option",
    "answer": [
      "local"
    ]
  },
  {
    "question": "Which of the following descriptions most closely matches what happens when a tag file is used for the first time?",
    "options": [
      "The tag file is located, and source is generated into a class which implements the SimpleTag interface, then compiled. The calling JSP makes calls to SimpleTag life cycle methods",
      "The tag file is located, and its source is included in the calling JSP. The combined source is treated as a translation unit and generated into servlet source, which is compiled",
      "The tag file is located, and its source is used for the generation and compilation of a separate servlet invoked from the calling JSP",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The tag file is located, and source is generated into a class which implements the SimpleTag interface, then compiled. The calling JSP makes calls to SimpleTag life cycle methods"
    ]
  },
  {
    "question": "Which of the followings is not a valid setting for the scope attribute of <jsp:useBean> tag?",
    "options": [
      "request",
      "local",
      "session",
      "application"
    ],
    "description": "Choose 1 option",
    "answer": [
      "local"
    ]
  },
  {
    "question": "Which of the following statements about the standard actions is true?",
    "options": [
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "JSP uses standard actions for calling the JavaBean methods.",
      "The attributes in standard action can not distinguish between uppercase and lowercase.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSP uses standard actions for calling the JavaBean methods."
    ]
  },
  {
    "question": "Which of the following statements about the standard actions is true?",
    "options": [
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "JSP uses standard actions for calling the JavaBean methods.",
      "The attributes in standard action can not distinguish between uppercase and lowercase.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSP uses standard actions for calling the JavaBean methods."
    ]
  },
  {
    "question": "Which of the following statements about the standard actions are true?",
    "options": [
      "JSP uses standard actions for calling the JavaBean methods",
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "The Attributes in standard action cannot distinguish between uppercase and lowercase",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSP uses standard actions for calling the JavaBean methods"
    ]
  },
  {
    "question": "Which of the following statements about the standard actions are true?",
    "options": [
      "JSP uses standard actions for calling the JavaBean methods",
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "The Attributes in standard action cannot distinguish between uppercase and lowercase",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSP uses standard actions for calling the JavaBean methods"
    ]
  },
  {
    "question": "Which of the following statements about the jsp:useBean is ( are) true?",
    "options": [
      "The jsp:useBean is used to locate or instantiate a JavaBean component",
      "The jsp:useBean first tries to locate an instance of the bean, otherwise it instantiates the Bean from a class",
      "To locate and instantiate the Bean, the jsp:useBean attempts to locate a Bean within the scope",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which of the following statements about the jsp:useBean is ( are) true?",
    "options": [
      "The jsp:useBean is used to locate or instantiate a JavaBean component",
      "The jsp:useBean first tries to locate an instance of the bean, otherwise it instantiates the Bean from a class",
      "To locate and instantiate the Bean, the jsp:useBean attempts to locate a Bean within the scope",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "What will be the output of the code snippet ${\"2\u201d + \"2\u201d}?",
    "options": [
      "None of the others",
      "4",
      "22",
      "2+2"
    ],
    "description": "Choose 1 option",
    "answer": [
      "4"
    ]
  },
  {
    "question": "What will be the output of the code snippet ${\"2\u201d + \"2\u201d}?",
    "options": [
      "None of the others",
      "4",
      "22",
      "2+2"
    ],
    "description": "Choose 1 option",
    "answer": [
      "4"
    ]
  },
  {
    "question": "_____ sends a request to an object and includes the result in a JSP file.",
    "options": [
      "<jsp:include>",
      "<jsp:forward>",
      "include directive",
      "import directive"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include>"
    ]
  },
  {
    "question": "_____ sends a request to an object and includes the result in a JSP file.",
    "options": [
      "<jsp:include>",
      "<jsp:forward>",
      "include directive",
      "import directive"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include>"
    ]
  },
  {
    "question": "Which of the following JSP tags can be used to include the output of another JSP \n page into the output of the current page at request time?",
    "options": [
      "<jsp:insert>",
      "<jsp:include>",
      "<jsp:directive.include>",
      "<jsp:directive:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include>"
    ]
  },
  {
    "question": "Which of the following JSP tags can be used to include the output of another JSP \n page into the output of the current page at request time?",
    "options": [
      "<jsp:insert>",
      "<jsp:include>",
      "<jsp:directive.include>",
      "<jsp:directive:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include>"
    ]
  },
  {
    "question": "Which of the following is a correct way to pass a parameter equivalent to the \n query string user=mary at request time to an included component? ( Select one)",
    "options": [
      "<jsp:include page=\"other.jsp\" > \n       <jsp:param paramName=\"user\" paramValue=\"mary\" />\n </jsp:include>",
      "<jsp:include page=\"other.jsp\" > \n       <jsp:param name=\"mary\" value=\"user\" />\n </jsp:include>",
      "<jsp:include page=\"other.jsp\" >\n       <jsp:param value=\"mary\" name=\"user\" />\n </jsp:include>",
      "<jsp:include page=\"other.jsp\" > \n       <jsp:param param=\"user\" value=\"mary\"/>\n  </jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\" >\n       <jsp:param value=\"mary\" name=\"user\" />\n </jsp:include>"
    ]
  },
  {
    "question": "Which of the following is a correct way to pass a parameter equivalent to the query string user=mary at request time to an included component? ( Select one)",
    "options": [
      "<jsp:include page=\"other.jsp\" >       <jsp:param paramName=\"user\" paramValue=\"mary\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\" >       <jsp:param name=\"mary\" value=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\" >      <jsp:param value=\"mary\" name=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\" >       <jsp:param param=\"user\" value=\"mary\"/> </jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\" >      <jsp:param value=\"mary\" name=\"user\" /></jsp:include>"
    ]
  },
  {
    "question": "Which of the following is a correct way to pass a parameter equivalent to the \n query string user=mary at request time to an included component? ( Select one)",
    "options": [
      "<jsp:include page=\"other.jsp\" > \n       <jsp:param paramName=\"user\" paramValue=\"mary\" />\n </jsp:include>",
      "<jsp:include page=\"other.jsp\" > \n       <jsp:param name=\"mary\" value=\"user\" />\n </jsp:include>",
      "<jsp:include page=\"other.jsp\" >\n       <jsp:param value=\"mary\" name=\"user\" />\n </jsp:include>",
      "<jsp:include page=\"other.jsp\" > \n       <jsp:param param=\"user\" value=\"mary\"/>\n  </jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\" >\n       <jsp:param value=\"mary\" name=\"user\" />\n </jsp:include>"
    ]
  },
  {
    "question": "Which of the following is a correct way to pass a parameter equivalent to the query string user=mary at request time to an included component? ( Select one)",
    "options": [
      "<jsp:include page=\"other.jsp\" >       <jsp:param paramName=\"user\" paramValue=\"mary\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\" >       <jsp:param name=\"mary\" value=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\" >      <jsp:param value=\"mary\" name=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\" >       <jsp:param param=\"user\" value=\"mary\"/> </jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\" >      <jsp:param value=\"mary\" name=\"user\" /></jsp:include>"
    ]
  },
  {
    "question": "Consider the following <taglib> element, which appears in a deployment \n descriptor of a web application:\n    <taglib>\n     <taglib-uri>/accounting</taglib-uri>  \n     <taglib-location>/WEB-INF/tlds/SmartAccount.tld</taglib-location>\n    </taglib>\n Which of the following correctly specifies the use of the above tag library in a JSP \n page? ( Select one)",
    "options": [
      "<%@ taglib uri=\"/accounting\" prefix=\"acc\"%>",
      "<%@ taglib uri=\"/acc\" prefix=\"/accounting\"%>",
      "<%@ taglib name=\"/accounting\" prefix=\"acc\"%>",
      "<%@ taglib library=\"/accounting\" prefix=\"acc\"%>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ taglib uri=\"/accounting\" prefix=\"acc\"%>"
    ]
  },
  {
    "question": "Consider the following <taglib> element, which appears in a deployment \n descriptor of a web application:\n    <taglib>\n     <taglib-uri>/accounting</taglib-uri>  \n     <taglib-location>/WEB-INF/tlds/SmartAccount.tld</taglib-location>\n    </taglib>\n Which of the following correctly specifies the use of the above tag library in a JSP \n page? ( Select one)",
    "options": [
      "<%@ taglib uri=\"/accounting\" prefix=\"acc\"%>",
      "<%@ taglib uri=\"/acc\" prefix=\"/accounting\"%>",
      "<%@ taglib name=\"/accounting\" prefix=\"acc\"%>",
      "<%@ taglib library=\"/accounting\" prefix=\"acc\"%>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ taglib uri=\"/accounting\" prefix=\"acc\"%>"
    ]
  },
  {
    "question": "Consider the contents of three JSP files:File 1: one.jsp    <html><body><pre>       <jsp:include page=\"two.jsp\" >          <jsp:param name=\"color\" value=\"red\" />       </jsp:include>    </pre></body></html>File 2: two.jsp    <jsp:include page=\"three.jsp\" >       <jsp:param name=\"color\" value=\"green\" />    </jsp:include>File 3: three.jsp   <%= request.getParameter( \"color\")  %>What will be the output of accessing the one.jsp file via the following URL? http://localhost:8080/chapter12/one.jsp?color=blue",
    "options": [
      "red",
      "green",
      "blue",
      "The answer cannot be determined."
    ],
    "description": "Choose 1 option",
    "answer": [
      "green"
    ]
  },
  {
    "question": "Consider the contents of three JSP files:File 1: one.jsp    <html><body><pre>       <jsp:include page=\"two.jsp\" >          <jsp:param name=\"color\" value=\"red\" />       </jsp:include>    </pre></body></html>File 2: two.jsp    <jsp:include page=\"three.jsp\" >       <jsp:param name=\"color\" value=\"green\" />    </jsp:include>File 3: three.jsp   <%= request.getParameter( \"color\")  %>What will be the output of accessing the one.jsp file via the following URL? http://localhost:8080/chapter12/one.jsp?color=blue",
    "options": [
      "red",
      "green",
      "blue",
      "The answer cannot be determined."
    ],
    "description": "Choose 1 option",
    "answer": [
      "green"
    ]
  },
  {
    "question": "Given the JSP code:\n 10.  \n 11.  \n 12.  \n 13. Hello, ${customer.title} ${customer.lastName}, welcome\n 14. to Squeaky Beans, Inc.\n 15.  \n 16.  \n Which three types of JSP code are used? ( Choose three.)",
    "options": [
      "Java code",
      "Template text",
      "Scripting code",
      "Standard action",
      "Expression language"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Template text",
      "Standard action",
      "Expression language"
    ]
  },
  {
    "question": "You need to store a Java long primitive attribute, called customerOID, into the session scope. Which two code snippets allow you to insert this value into the session? ( Choose two.)",
    "options": [
      "long customerOID = 47L;session.setAttribute( \"customerOID\", new Long( customerOID));",
      "long customerOID = 47L;session.setLongAttribute( \"customerOID\", new Long( customerOID));",
      "long customerOID = 47L;session.setAttribute( \"customerOID\", customerOID);",
      "long customerOID = 47L;session.setNumericAttribute( \"customerOID\", new Long( customerOID));"
    ],
    "description": "Choose all that apply",
    "answer": [
      "long customerOID = 47L;session.setAttribute( \"customerOID\", new Long( customerOID));",
      "long customerOID = 47L;session.setAttribute( \"customerOID\", customerOID);"
    ]
  },
  {
    "question": "Given the JSP code:\n 10.  \n 11.  \n 12.  \n 13. Hello, ${customer.title} ${customer.lastName}, welcome\n 14. to Squeaky Beans, Inc.\n 15.  \n 16.  \n Which three types of JSP code are used? ( Choose three.)",
    "options": [
      "Java code",
      "Template text",
      "Scripting code",
      "Standard action",
      "Expression language"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Template text",
      "Standard action",
      "Expression language"
    ]
  },
  {
    "question": "You need to store a Java long primitive attribute, called customerOID, into the session scope. Which two code snippets allow you to insert this value into the session? ( Choose two.)",
    "options": [
      "long customerOID = 47L;session.setAttribute( \"customerOID\", new Long( customerOID));",
      "long customerOID = 47L;session.setLongAttribute( \"customerOID\", new Long( customerOID));",
      "long customerOID = 47L;session.setAttribute( \"customerOID\", customerOID);",
      "long customerOID = 47L;session.setNumericAttribute( \"customerOID\", new Long( customerOID));"
    ],
    "description": "Choose all that apply",
    "answer": [
      "long customerOID = 47L;session.setAttribute( \"customerOID\", new Long( customerOID));",
      "long customerOID = 47L;session.setAttribute( \"customerOID\", customerOID);"
    ]
  },
  {
    "question": "Which statement is true about web container session management?",
    "options": [
      "Access to session-scoped attributes is guaranteed to be thread-safe by the web container.",
      "To activate URL rewriting, the developer must use the HttpServletResponse.setURLRewriting method.",
      "If the web application uses HTTPS, then the web container may use the data on the HTTPS request stream to identify the client.",
      "The JSESSIONID cookie is stored permanently on the client so that a user may return to the web application and the web container will rejoin that session."
    ],
    "description": "Choose 1 option",
    "answer": [
      "If the web application uses HTTPS, then the web container may use the data on the HTTPS request stream to identify the client."
    ]
  },
  {
    "question": "Which statement is true about web container session management?",
    "options": [
      "Access to session-scoped attributes is guaranteed to be thread-safe by the web container.",
      "To activate URL rewriting, the developer must use the HttpServletResponse.setURLRewriting method.",
      "If the web application uses HTTPS, then the web container may use the data on the HTTPS request stream to identify the client.",
      "The JSESSIONID cookie is stored permanently on the client so that a user may return to the web application and the web container will rejoin that session."
    ],
    "description": "Choose 1 option",
    "answer": [
      "If the web application uses HTTPS, then the web container may use the data on the HTTPS request stream to identify the client."
    ]
  },
  {
    "question": "Which two about WAR files are true? ( Choose two.)",
    "options": [
      "WAR files must be located in the web application library directory.",
      "WAR files must contain the web application deployment descriptor.",
      "WAR files must be created by using archive tools designed specifically for that purpose.",
      "The web container must allow access to resources in JARs in the web application library directory.",
      "The web container must serve the content of any META-INF directory located in a WAR file."
    ],
    "description": "Choose all that apply",
    "answer": [
      "WAR files must contain the web application deployment descriptor.",
      "The web container must allow access to resources in JARs in the web application library directory."
    ]
  },
  {
    "question": "Which two about WAR files are true? ( Choose two.)",
    "options": [
      "WAR files must be located in the web application library directory.",
      "WAR files must contain the web application deployment descriptor.",
      "WAR files must be created by using archive tools designed specifically for that purpose.",
      "The web container must allow access to resources in JARs in the web application library directory.",
      "The web container must serve the content of any META-INF directory located in a WAR file."
    ],
    "description": "Choose all that apply",
    "answer": [
      "WAR files must contain the web application deployment descriptor.",
      "The web container must allow access to resources in JARs in the web application library directory."
    ]
  },
  {
    "question": "Your company has a corporate policy that prohibits storing a customer's credit card number in any corporate database. However, users have complained that they do NOT want to re- enter their credit card number for each transaction. Your management has decided to use client-side cookies to record the user's credit card number for 120 days. Furthermore, they also want to protect this information during transit from the web browser to the web container; so the cookie must only be transmitted over HTTPS. Which code snippet creates the \"creditCard\" cookie and adds it to the out going response to be stored on the user's web browser?",
    "options": [
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setAge( 10368000);\n 13. response.addCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setHttps( true);\n 12. c.setMaxAge( 10368000);\n 13. response.setCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setMaxAge( 10368000);\n 13. response.addCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setHttps( true);\n 12. c.setAge( 10368000);\n 13. response.addCookie( c);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setMaxAge( 10368000);\n 13. response.addCookie( c);"
    ]
  },
  {
    "question": "Your company has a corporate policy that prohibits storing a customer's credit card number in any corporate database. However, users have complained that they do NOT want to re- enter their credit card number for each transaction. Your management has decided to use client-side cookies to record the user's credit card number for 120 days. Furthermore, they also want to protect this information during transit from the web browser to the web container; so the cookie must only be transmitted over HTTPS. Which code snippet creates the \"creditCard\" cookie and adds it to the out going response to be stored on the user's web browser?",
    "options": [
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setAge( 10368000);\n 13. response.addCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setHttps( true);\n 12. c.setMaxAge( 10368000);\n 13. response.setCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setMaxAge( 10368000);\n 13. response.addCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setHttps( true);\n 12. c.setAge( 10368000);\n 13. response.addCookie( c);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setMaxAge( 10368000);\n 13. response.addCookie( c);"
    ]
  },
  {
    "question": "Given an HttpServletRequest request and HttpServletResponse response, which sets a cookie \"username\" with the value \"joe\" in a servlet?",
    "options": [
      "request.addCookie( \"username\", \"joe\")",
      "request.addHeader( new Cookie( \"username\", \"joe\"))",
      "response.addCookie( \"username\", \"joe\")",
      "response.addCookie( new Cookie( \"username\", \"joe\"))",
      "response.addHeader( new Cookie( \"username\", \"joe\"))"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response.addCookie( new Cookie( \"username\", \"joe\"))"
    ]
  },
  {
    "question": "Given an HttpServletRequest request and HttpServletResponse response, which sets a cookie \"username\" with the value \"joe\" in a servlet?",
    "options": [
      "request.addCookie( \"username\", \"joe\")",
      "request.addHeader( new Cookie( \"username\", \"joe\"))",
      "response.addCookie( \"username\", \"joe\")",
      "response.addCookie( new Cookie( \"username\", \"joe\"))",
      "response.addHeader( new Cookie( \"username\", \"joe\"))"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response.addCookie( new Cookie( \"username\", \"joe\"))"
    ]
  },
  {
    "question": "In a JSP-centric web application, you need to create a catalog browsing JSP page. The catalog is stored as a List object in the catalog attribute of the webapp's ServletContext object. Which scriptlet code snippet gives you access to the catalog object?",
    "options": [
      "<% List catalog = config.getAttribute( \"catalog\"); %>",
      "<% List catalog = context.getAttribute( \"catalog\"); %>",
      "<% List catalog = application.getAttribute( \"catalog\"); %>",
      "<% List catalog = servletContext.getAttribute( \"catalog\"); %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<% List catalog = application.getAttribute( \"catalog\"); %>"
    ]
  },
  {
    "question": "In a JSP-centric web application, you need to create a catalog browsing JSP page. The catalog is stored as a List object in the catalog attribute of the webapp's ServletContext object. Which scriptlet code snippet gives you access to the catalog object?",
    "options": [
      "<% List catalog = config.getAttribute( \"catalog\"); %>",
      "<% List catalog = context.getAttribute( \"catalog\"); %>",
      "<% List catalog = application.getAttribute( \"catalog\"); %>",
      "<% List catalog = servletContext.getAttribute( \"catalog\"); %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<% List catalog = application.getAttribute( \"catalog\"); %>"
    ]
  },
  {
    "question": "You are creating a new JSP page and you need to execute some code that acts when the page is first executed, but only once. Which three are possible mechanisms for performing this initialization code? ( Choose 4.)",
    "options": [
      "In the init method.",
      "In the jspInit method.",
      "In the constructor of the JSP's Java code.",
      "In a JSP declaration, which includes an initializer block.",
      "In a JSP declaration, which includes a static initializer block."
    ],
    "description": "Choose all that apply",
    "answer": [
      "In the init method.",
      "In the jspInit method.",
      "In a JSP declaration, which includes an initializer block.",
      "In a JSP declaration, which includes a static initializer block."
    ]
  },
  {
    "question": "You are creating a new JSP page and you need to execute some code that acts when the page is first executed, but only once. Which three are possible mechanisms for performing this initialization code? ( Choose 4.)",
    "options": [
      "In the init method.",
      "In the jspInit method.",
      "In the constructor of the JSP's Java code.",
      "In a JSP declaration, which includes an initializer block.",
      "In a JSP declaration, which includes a static initializer block."
    ],
    "description": "Choose all that apply",
    "answer": [
      "In the init method.",
      "In the jspInit method.",
      "In a JSP declaration, which includes an initializer block.",
      "In a JSP declaration, which includes a static initializer block."
    ]
  },
  {
    "question": "Which statement is true if the doStartTag method returns EVAL_BODY_BUFFERED ?",
    "options": [
      "The tag handler must implement BodyTag.",
      "The doAfterBody method is NOT called.",
      "The setBodyContent method is called once.",
      "It is never legal to return EVAL_BODY_BUFFERED from doStartTag."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The setBodyContent method is called once."
    ]
  },
  {
    "question": "Which statement is true if the doStartTag method returns EVAL_BODY_BUFFERED ?",
    "options": [
      "The tag handler must implement BodyTag.",
      "The doAfterBody method is NOT called.",
      "The setBodyContent method is called once.",
      "It is never legal to return EVAL_BODY_BUFFERED from doStartTag."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The setBodyContent method is called once."
    ]
  },
  {
    "question": "Which statement is true if the doStartTag method returns EVAL_BODY_BUFFERED ?",
    "options": [
      "The tag handler must implement BodyTag.",
      "The doAfterBody method is NOT called.",
      "The setBodyContent method is called once.",
      "It is never legal to return EVAL_BODY_BUFFERED from doStartTag."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The setBodyContent method is called once."
    ]
  },
  {
    "question": "Which statement is true if the doStartTag method returns EVAL_BODY_BUFFERED ?",
    "options": [
      "The tag handler must implement BodyTag.",
      "The doAfterBody method is NOT called.",
      "The setBodyContent method is called once.",
      "It is never legal to return EVAL_BODY_BUFFERED from doStartTag."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The setBodyContent method is called once."
    ]
  },
  {
    "question": "Which security mechanism uses the concept of a realm?",
    "options": [
      "Authorization",
      "Data integrity",
      "Confidentiality",
      "Authentication"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authentication"
    ]
  },
  {
    "question": "Which security mechanism uses the concept of a realm?",
    "options": [
      "Authorization",
      "Data integrity",
      "Confidentiality",
      "Authentication"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authentication"
    ]
  },
  {
    "question": "You have created a servlet that generates weather maps. The data for these maps is calculated by a remote host. The IP address of this host is usually stable, but occasionally does have to change as the corporate network grows and changes. This IP address used to be hard coded, but after the fifth change to the IP address in two years, you have decided that this value should be declared in the deployment descriptor so you do NOT have the recompile the web application every time the IP address changes. Which deployment descriptor snippet accomplishes this goal?",
    "options": [
      "<serlvet-param><name>WeatherServlet.hostIP</name><value>127.0.4.20</value></servlet-param>",
      "<init-param><name>WeatherServlet.hostIP</name><value>127.0.4.20</value></init-param>",
      "<servlet><!-- servlet definition here --><param-name>WeatherServlet.hostIP</param-name><param-value>127.0.4.20</param-value></servlet>",
      "<init-param><param-name>WeatherServlet.hostIP</param-name><param-value>127.0.4.20</param-value></init-param>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<init-param><param-name>WeatherServlet.hostIP</param-name><param-value>127.0.4.20</param-value></init-param>"
    ]
  },
  {
    "question": "You have created a servlet that generates weather maps. The data for these maps is calculated by a remote host. The IP address of this host is usually stable, but occasionally does have to change as the corporate network grows and changes. This IP address used to be hard coded, but after the fifth change to the IP address in two years, you have decided that this value should be declared in the deployment descriptor so you do NOT have the recompile the web application every time the IP address changes. Which deployment descriptor snippet accomplishes this goal?",
    "options": [
      "<serlvet-param><name>WeatherServlet.hostIP</name><value>127.0.4.20</value></servlet-param>",
      "<init-param><name>WeatherServlet.hostIP</name><value>127.0.4.20</value></init-param>",
      "<servlet><!-- servlet definition here --><param-name>WeatherServlet.hostIP</param-name><param-value>127.0.4.20</param-value></servlet>",
      "<init-param><param-name>WeatherServlet.hostIP</param-name><param-value>127.0.4.20</param-value></init-param>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<init-param><param-name>WeatherServlet.hostIP</param-name><param-value>127.0.4.20</param-value></init-param>"
    ]
  },
  {
    "question": "Which defines the welcome files in a web application deployment descriptor?",
    "options": [
      "<welcome>\n <welcome-file>/welcome.jsp</welcome-file>\n </welcome>\n <welcome>\n . <welcome-file>/index.html</welcome-file>\n . </welcome>",
      "<welcome-file-list>\n <welcome-file>welcome.jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>",
      "<welcome>\n <welcome-file>welcome.jsp</welcome-file>\n </welcome>\n <welcome>\n <welcome-file>index.html</welcome-file>\n </welcome>",
      "<welcome-file-list>\n <welcome-file>/welcome.jsp</welcome-file>\n <welcome-file>/index.html</welcome-file>\n </welcome-file-list>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<welcome-file-list>\n <welcome-file>welcome.jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>"
    ]
  },
  {
    "question": "Which defines the welcome files in a web application deployment descriptor?",
    "options": [
      "<welcome>\n <welcome-file>/welcome.jsp</welcome-file>\n </welcome>\n <welcome>\n . <welcome-file>/index.html</welcome-file>\n . </welcome>",
      "<welcome-file-list>\n <welcome-file>welcome.jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>",
      "<welcome>\n <welcome-file>welcome.jsp</welcome-file>\n </welcome>\n <welcome>\n <welcome-file>index.html</welcome-file>\n </welcome>",
      "<welcome-file-list>\n <welcome-file>/welcome.jsp</welcome-file>\n <welcome-file>/index.html</welcome-file>\n </welcome-file-list>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<welcome-file-list>\n <welcome-file>welcome.jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>"
    ]
  },
  {
    "question": "A session-scoped attribute, product, is stored by a servlet. That servlet then forwards to a JSP page. This attribute holds an instance of the com.example.Product class with a name property of \"The Matrix\" and price property of 39.95. Given the JSP page code snippet:1. <jsp:useBean id='product' class='com.example.Product'>2. <jsp:setProperty name='product' property='price' value='49.95'/>3. </jsp:useBean>4. <%= product.getName(  ) %> costs <%= product.getPrice(  ) %> What is the response output of this JSP page code snippet?",
    "options": [
      "Default costs 0.0",
      "Default costs 49.95",
      "Default costs 39.95",
      "The Matrix costs 0.0"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Default costs 49.95"
    ]
  },
  {
    "question": "A session-scoped attribute, product, is stored by a servlet. That servlet then forwards to a JSP page. This attribute holds an instance of the com.example.Product class with a name property of \"The Matrix\" and price property of 39.95. Given the JSP page code snippet:1. <jsp:useBean id='product' class='com.example.Product'>2. <jsp:setProperty name='product' property='price' value='49.95'/>3. </jsp:useBean>4. <%= product.getName(  ) %> costs <%= product.getPrice(  ) %> What is the response output of this JSP page code snippet?",
    "options": [
      "Default costs 0.0",
      "Default costs 49.95",
      "Default costs 39.95",
      "The Matrix costs 0.0"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Default costs 49.95"
    ]
  },
  {
    "question": "A servlet sets a session-scoped attribute product with an instance of com.example.Product and forwards to a JSP. Which will output the name of the product in the response?",
    "options": [
      "${product.name}",
      "<jsp:useBean id=\"com.example.Product\" /><%= product.getName(  ) %>",
      "<jsp:getProperty name=\"product\" class=\"com.example.Product\" property=\"name\" />",
      "<jsp:useBean id=\"product\" type=\"com.example.Product\"> . <%= product.getName(  ) %></jsp:useBean>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "${product.name}"
    ]
  },
  {
    "question": "A servlet sets a session-scoped attribute product with an instance of com.example.Product and forwards to a JSP. Which will output the name of the product in the response?",
    "options": [
      "${product.name}",
      "<jsp:useBean id=\"com.example.Product\" /><%= product.getName(  ) %>",
      "<jsp:getProperty name=\"product\" class=\"com.example.Product\" property=\"name\" />",
      "<jsp:useBean id=\"product\" type=\"com.example.Product\"> . <%= product.getName(  ) %></jsp:useBean>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "${product.name}"
    ]
  },
  {
    "question": "The deployment descriptor for a stateless session bean that uses the isCallerInRole method reads as follows:\n\n 3. <security-role-ref>\n 4. <role-name>manager</role-name>\n 5. <role-link>humanresources</role-link>\n 6. <security-role-ref>\n\n 16. <security-role>\n 17. <description>\n 18. Is allowed to view and update all employee records.\n 19. </description>\n 20. <role-name>humanresources</role-name>\n 21. </security-role>\n\n Which two roles are responsible for creating this deployment descriptor? ( Choose two.)",
    "options": [
      "Deployer",
      "Bean Provider",
      "System Administrator",
      "Application Assembler"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Bean Provider",
      "Application Assembler"
    ]
  },
  {
    "question": "The deployment descriptor for a stateless session bean that uses the isCallerInRole method reads as follows:\n\n 3. <security-role-ref>\n 4. <role-name>manager</role-name>\n 5. <role-link>humanresources</role-link>\n 6. <security-role-ref>\n\n 16. <security-role>\n 17. <description>\n 18. Is allowed to view and update all employee records.\n 19. </description>\n 20. <role-name>humanresources</role-name>\n 21. </security-role>\n\n Which two roles are responsible for creating this deployment descriptor? ( Choose two.)",
    "options": [
      "Deployer",
      "Bean Provider",
      "System Administrator",
      "Application Assembler"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Bean Provider",
      "Application Assembler"
    ]
  },
  {
    "question": "Given the following statements about an EJB deployment descriptor for which the metadata-complete attribute is not specified:\n\n I. The EJB deployment descriptor can provide additional metadata to bean class annotations.\n\n II. The EJB deployment descriptor can partially override bean class annotations.\n\n III. The EJB deployment descriptor can entirely override bean class annotations.\n\n Which is true?",
    "options": [
      "Only statement I is correct.",
      "Only statement II is correct.",
      "Only statement III is correct.",
      "Both statements I and II are correct.",
      "Both statements I and III are correct."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both statements I and II are correct."
    ]
  },
  {
    "question": "Given the following statements about an EJB deployment descriptor for which the metadata-complete attribute is not specified:\n\n I. The EJB deployment descriptor can provide additional metadata to bean class annotations.\n\n II. The EJB deployment descriptor can partially override bean class annotations.\n\n III. The EJB deployment descriptor can entirely override bean class annotations.\n\n Which is true?",
    "options": [
      "Only statement I is correct.",
      "Only statement II is correct.",
      "Only statement III is correct.",
      "Both statements I and II are correct.",
      "Both statements I and III are correct."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both statements I and II are correct."
    ]
  },
  {
    "question": "Given:\n\n 5. public interface MrB1 {\n 6. public interface MrB2 {\n\n A java class is defined as:\n\n 11. @Stateless\n 12. public class MrBean implements MrB1,MrB2 {\n\n Which two statements are correct for making this code work as a stateless session bean, considering that this session bean is NOT defined in a deployment descriptor and the interfaces do NOT have annotations? ( Choose two.)",
    "options": [
      "Only the inteface for remote usage must be annotated.",
      "The interfaces MrB1 and MrB2 can only be used locally without changing the code.",
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ],
    "description": "Choose all that apply",
    "answer": [
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ]
  },
  {
    "question": "Given:\n\n 5. public interface MrB1 {\n 6. public interface MrB2 {\n\n A java class is defined as:\n\n 11. @Stateless\n 12. public class MrBean implements MrB1,MrB2 {\n\n Which two statements are correct for making this code work as a stateless session bean, considering that this session bean is NOT defined in a deployment descriptor and the interfaces do NOT have annotations? ( Choose two.)",
    "options": [
      "Only the inteface for remote usage must be annotated.",
      "The interfaces MrB1 and MrB2 can only be used locally without changing the code.",
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ],
    "description": "Choose all that apply",
    "answer": [
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ]
  },
  {
    "question": "A developer wants to write a stateful session bean using the following interface as local business interface:\n\n 1. package acme;\n 2. public interface Bar {\n 3. public void bar(  );\n 4. }\n\n Assuming there is NOT an ejb-jar.xml file, which code can be inserted into Lines 4-6 below to define the\n bean with the ejb name of BarBean?\n\n 1. package acme;\n 2. import javax.ejb.*;\n 3. import java.io.*;\n 4.\n 5.\n 6.\n 7. }",
    "options": [
      "@Stateful\n public class BarEJB implements Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) {}",
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) throws java.rmi.RemoteException {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}"
    ]
  },
  {
    "question": "A developer wants to write a stateful session bean using the following interface as local business interface:\n\n 1. package acme;\n 2. public interface Bar {\n 3. public void bar(  );\n 4. }\n\n Assuming there is NOT an ejb-jar.xml file, which code can be inserted into Lines 4-6 below to define the\n bean with the ejb name of BarBean?\n\n 1. package acme;\n 2. import javax.ejb.*;\n 3. import java.io.*;\n 4.\n 5.\n 6.\n 7. }",
    "options": [
      "@Stateful\n public class BarEJB implements Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) {}",
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) throws java.rmi.RemoteException {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}"
    ]
  },
  {
    "question": "Which of the following is not true about Enterprise JavaBeans ( prior to EJB 3.0) objects?",
    "options": [
      "The home interface is responsible for locating or creating instances of the desired bean and returning remote references.",
      "The remote interface, or the EJBObject interface, typically provides method signatures for business methods.",
      "The bean implements either the EntityBean interface or the SessionBean interface but need not implement all the methods defined in the remote interface.",
      "The bean must implement one ejbCreate(  ) method for each create(  ) method in the home interface."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The bean implements either the EntityBean interface or the SessionBean interface but need not implement all the methods defined in the remote interface."
    ]
  },
  {
    "question": "Which of the following is not true about Enterprise JavaBeans ( prior to EJB 3.0) objects?",
    "options": [
      "The home interface is responsible for locating or creating instances of the desired bean and returning remote references.",
      "The remote interface, or the EJBObject interface, typically provides method signatures for business methods.",
      "The bean implements either the EntityBean interface or the SessionBean interface but need not implement all the methods defined in the remote interface.",
      "The bean must implement one ejbCreate(  ) method for each create(  ) method in the home interface."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The bean implements either the EntityBean interface or the SessionBean interface but need not implement all the methods defined in the remote interface."
    ]
  },
  {
    "question": "Which of the following is true about Enterprise JavaBeans ( EJB 3.x) objects?",
    "options": [
      "The home interface is no longer required.",
      "The remote interface, or the EJBObject interface, typically provides method signatures for business methods.",
      "The bean class implements the EJBInterface class.",
      "The bean must be defined in the XML deployment descriptor."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The home interface is no longer required."
    ]
  },
  {
    "question": "Which of the following is true about Enterprise JavaBeans ( EJB 3.x) objects?",
    "options": [
      "The home interface is no longer required.",
      "The remote interface, or the EJBObject interface, typically provides method signatures for business methods.",
      "The bean class implements the EJBInterface class.",
      "The bean must be defined in the XML deployment descriptor."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The home interface is no longer required."
    ]
  },
  {
    "question": "Which of the following statements about the simple and classic modes is true?",
    "options": [
      "All of the others.",
      "Both simple and classic tags can be declared in tlds.",
      "Simple and classic tags use different types of objects to hold contextual information.",
      "Simple tags use an exception mechanism to skip rest of page processing."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "What are the types of messaging models supported in JMS? (Choose two)",
    "options": [
      "Point-to-point",
      "Send/receive",
      "Transmit/receive",
      "Publish/subscribe"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Point-to-point",
      "Publish/subscribe"
    ]
  },
  {
    "question": "Which of the following statements about the simple and classic modes is true?",
    "options": [
      "All of the others.",
      "Both simple and classic tags can be declared in tlds.",
      "Simple and classic tags use different types of objects to hold contextual information.",
      "Simple tags use an exception mechanism to skip rest of page processing."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "What are the types of messaging models supported in JMS? (Choose two)",
    "options": [
      "Point-to-point",
      "Send/receive",
      "Transmit/receive",
      "Publish/subscribe"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Point-to-point",
      "Publish/subscribe"
    ]
  },
  {
    "question": "The _______ tags generally do not contain any body.",
    "options": [
      "Basic",
      "Iteration",
      "Complex",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Basic"
    ]
  },
  {
    "question": "Which of the following scenarios are suitable for publish/subscribe messaging model?",
    "options": [
      "It is used to receive news stories.",
      "It is used for receiving sales forecasts.",
      "It is used for sending stock prices to traders on the trading floor.",
      "It is used to authorize a user ID and password."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It is used to authorize a user ID and password."
    ]
  },
  {
    "question": "The _______ tags generally do not contain any body.",
    "options": [
      "Basic",
      "Iteration",
      "Complex",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Basic"
    ]
  },
  {
    "question": "Which of the following scenarios are suitable for publish/subscribe messaging model?",
    "options": [
      "It is used to receive news stories.",
      "It is used for receiving sales forecasts.",
      "It is used for sending stock prices to traders on the trading floor.",
      "It is used to authorize a user ID and password."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It is used to authorize a user ID and password."
    ]
  },
  {
    "question": "Which of the following would not be used in a client application performing point-to-point messaging?",
    "options": [
      "Topic",
      "InitialContext",
      "Queue",
      "Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Topic"
    ]
  },
  {
    "question": "Which of the following would not be used in a client application performing point-to-point messaging?",
    "options": [
      "Topic",
      "InitialContext",
      "Queue",
      "Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Topic"
    ]
  },
  {
    "question": "A custom tag implements BodyTag interface. What is the valid return value of the doEndTag(  ) method?",
    "options": [
      "BodyTag.SKIP_PAGE",
      "Tag.EVAL_PAGE",
      "Tag.SKIP_CONTAINER",
      "BodyTag.EVAL_BODY_BUFFERED"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Tag.EVAL_PAGE"
    ]
  },
  {
    "question": "A custom tag implements BodyTag interface. What is the valid return value of the doEndTag(  ) method?",
    "options": [
      "BodyTag.SKIP_PAGE",
      "Tag.EVAL_PAGE",
      "Tag.SKIP_CONTAINER",
      "BodyTag.EVAL_BODY_BUFFERED"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Tag.EVAL_PAGE"
    ]
  },
  {
    "question": "A custom tag implements BodyTag interface. What is the valid return value of the doEndTag(  ) method?",
    "options": [
      "BodyTag.SKIP_PAGE",
      "Tag.EVAL_PAGE",
      "Tag.SKIP_CONTAINER",
      "BodyTag.EVAL_BODY_BUFFERED"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Tag.EVAL_PAGE"
    ]
  },
  {
    "question": "A custom tag implements BodyTag interface. What is the valid return value of the doEndTag(  ) method?",
    "options": [
      "BodyTag.SKIP_PAGE",
      "Tag.EVAL_PAGE",
      "Tag.SKIP_CONTAINER",
      "BodyTag.EVAL_BODY_BUFFERED"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Tag.EVAL_PAGE"
    ]
  },
  {
    "question": "What method must be implemented to receive messages in a message-driven bean ( MDB)?",
    "options": [
      "The receive method",
      "The onMessage method",
      "The readMessage method",
      "The processMessage method"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The onMessage method"
    ]
  },
  {
    "question": "A custom JSP tag must be able to support an arbitrary number of attributes whose names are unknown when the tag class is designed. Which are true?",
    "options": [
      "The <body-content> element in the echo tag TLD must have the value JSP.",
      "The <dynamic-attributes>true</dynamic-attributes> element must appear in the echo tag TLD.",
      "The echo tag handler must define the setAttribute( String key, String value) method.",
      "The class implementing the echo tag handler must implement the javax.servlet.jsp.tagext.IterationTag interface."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The <dynamic-attributes>true</dynamic-attributes> element must appear in the echo tag TLD."
    ]
  },
  {
    "question": "What method must be implemented to receive messages in a message-driven bean ( MDB)?",
    "options": [
      "The receive method",
      "The onMessage method",
      "The readMessage method",
      "The processMessage method"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The onMessage method"
    ]
  },
  {
    "question": "A custom JSP tag must be able to support an arbitrary number of attributes whose names are unknown when the tag class is designed. Which are true?",
    "options": [
      "The <body-content> element in the echo tag TLD must have the value JSP.",
      "The <dynamic-attributes>true</dynamic-attributes> element must appear in the echo tag TLD.",
      "The echo tag handler must define the setAttribute( String key, String value) method.",
      "The class implementing the echo tag handler must implement the javax.servlet.jsp.tagext.IterationTag interface."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The <dynamic-attributes>true</dynamic-attributes> element must appear in the echo tag TLD."
    ]
  },
  {
    "question": "Which of the following are legal types for the items attribute in a JSTL c:forEach action?",
    "options": [
      "An array of primitives or Objects, A String, A Collection",
      "An instance of the java.util.Arrays class, Objects, A Collection",
      "Only array of String",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "An array of primitives or Objects, A String, A Collection"
    ]
  },
  {
    "question": "Which of the following are legal types for the items attribute in a JSTL c:forEach action?",
    "options": [
      "An array of primitives or Objects, A String, A Collection",
      "An instance of the java.util.Arrays class, Objects, A Collection",
      "Only array of String",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "An array of primitives or Objects, A String, A Collection"
    ]
  },
  {
    "question": "A JSP file uses a tag as <myTaglib:myTag>. The myTag element here should be defined in the tag library descriptor file in the taglib element using which element. Select one correct answer.",
    "options": [
      "tagname",
      "name",
      "tag",
      "prefix"
    ],
    "description": "Choose 1 option",
    "answer": [
      "name"
    ]
  },
  {
    "question": "A JSP file uses a tag as <myTaglib:myTag>. The myTag element here should be defined in the tag library descriptor file in the taglib element using which element. Select one correct answer.",
    "options": [
      "tagname",
      "name",
      "tag",
      "prefix"
    ],
    "description": "Choose 1 option",
    "answer": [
      "name"
    ]
  },
  {
    "question": "A JSP file uses a tag as <myTaglib:myTag>. The myTag element here should be defined in the tag library descriptor file in the taglib element using which element. Select one correct answer.",
    "options": [
      "tagname",
      "name",
      "tag",
      "prefix"
    ],
    "description": "Choose 1 option",
    "answer": [
      "name"
    ]
  },
  {
    "question": "A JSP file uses a tag as <myTaglib:myTag>. The myTag element here should be defined in the tag library descriptor file in the taglib element using which element. Select one correct answer.",
    "options": [
      "tagname",
      "name",
      "tag",
      "prefix"
    ],
    "description": "Choose 1 option",
    "answer": [
      "name"
    ]
  },
  {
    "question": "Which of the following is a valid use of the <jsp:useBean> action? ( Select one)",
    "options": [
      "<jsp:useBean id=\"address\" class=\"AddressBean\" />",
      "<jsp:useBean name=\"address\" class=\"AddressBean\"/>",
      "<jsp:useBean bean=\"address\" class=\"AddressBean\" />",
      "<jsp:useBean beanName=\"address\" class=\"AddressBean\" />"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:useBean id=\"address\" class=\"AddressBean\" />"
    ]
  },
  {
    "question": "Which of the following is a valid use of the <jsp:useBean> action? ( Select one)",
    "options": [
      "<jsp:useBean id=\"address\" class=\"AddressBean\" />",
      "<jsp:useBean name=\"address\" class=\"AddressBean\"/>",
      "<jsp:useBean bean=\"address\" class=\"AddressBean\" />",
      "<jsp:useBean beanName=\"address\" class=\"AddressBean\" />"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:useBean id=\"address\" class=\"AddressBean\" />"
    ]
  },
  {
    "question": "Which of the following are valid uses of the <jsp:useBean> action? ( Select two)",
    "options": [
      "<jsp:useBean id=\"address\" class=\"AddressBean\" name=\"address\" />",
      "<jsp:useBean id=\"address\" class=\"AddressBean\"            type=\"AddressBean\" />",
      "<jsp:useBean id=\"address\" beanName=\"AddressBean\"            class=\"AddressBean\" />",
      "<jsp:useBean id=\"address\" beanName=\"AddressBean\"            type=\"AddressBean\" />"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<jsp:useBean id=\"address\" class=\"AddressBean\"            type=\"AddressBean\" />",
      "<jsp:useBean id=\"address\" beanName=\"AddressBean\"            type=\"AddressBean\" />"
    ]
  },
  {
    "question": "Which of the following are valid uses of the <jsp:useBean> action? ( Select two)",
    "options": [
      "<jsp:useBean id=\"address\" class=\"AddressBean\" name=\"address\" />",
      "<jsp:useBean id=\"address\" class=\"AddressBean\"            type=\"AddressBean\" />",
      "<jsp:useBean id=\"address\" beanName=\"AddressBean\"            class=\"AddressBean\" />",
      "<jsp:useBean id=\"address\" beanName=\"AddressBean\"            type=\"AddressBean\" />"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<jsp:useBean id=\"address\" class=\"AddressBean\"            type=\"AddressBean\" />",
      "<jsp:useBean id=\"address\" beanName=\"AddressBean\"            type=\"AddressBean\" />"
    ]
  },
  {
    "question": "Which of the following web.xml snippets correctly defines the use of a tag library? ( Select one)",
    "options": [
      "<taglib>    <uri>http://www.abc.com/sample.tld</uri>    <location>/WEB-INF/sample.tld</location> </taglib>",
      "tag-lib>   <taglib-uri>http://www.abc.com/sample.tld</taglib-uri>   <taglib-location>/WEB-INF/sample.tld</taglib-location></tag-lib>",
      "<taglib>    <taglib-uri>http://www.abc.com/sample.tld</taglib-uri>   <taglib-location>/WEB-INF/sample.tld</taglib-location> </taglib>",
      "<tag-lib>   <taglib>http://www.abc.com/sample.tld</taglib-uri>   <taglib>/WEB-INF/sample.tld</taglib-location></tag-lib>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<taglib>    <taglib-uri>http://www.abc.com/sample.tld</taglib-uri>   <taglib-location>/WEB-INF/sample.tld</taglib-location> </taglib>"
    ]
  },
  {
    "question": "Which of the following web.xml snippets correctly defines the use of a tag library? ( Select one)",
    "options": [
      "<taglib>    <uri>http://www.abc.com/sample.tld</uri>    <location>/WEB-INF/sample.tld</location> </taglib>",
      "tag-lib>   <taglib-uri>http://www.abc.com/sample.tld</taglib-uri>   <taglib-location>/WEB-INF/sample.tld</taglib-location></tag-lib>",
      "<taglib>    <taglib-uri>http://www.abc.com/sample.tld</taglib-uri>   <taglib-location>/WEB-INF/sample.tld</taglib-location> </taglib>",
      "<tag-lib>   <taglib>http://www.abc.com/sample.tld</taglib-uri>   <taglib>/WEB-INF/sample.tld</taglib-location></tag-lib>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<taglib>    <taglib-uri>http://www.abc.com/sample.tld</taglib-uri>   <taglib-location>/WEB-INF/sample.tld</taglib-location> </taglib>"
    ]
  },
  {
    "question": "Which of the following is a valid taglib directive? ( Select one)",
    "options": [
      "<% taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%@ taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%! taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%@ taglib name=\"/stats\" prefix=\"stats\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ taglib uri=\"/stats\" prefix=\"stats\" %>"
    ]
  },
  {
    "question": "Which of the following is a valid taglib directive? ( Select one)",
    "options": [
      "<% taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%@ taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%! taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%@ taglib name=\"/stats\" prefix=\"stats\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ taglib uri=\"/stats\" prefix=\"stats\" %>"
    ]
  },
  {
    "question": "Which of the following is a valid taglib directive? ( Select one)",
    "options": [
      "<% taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%@ taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%! taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%@ taglib name=\"/stats\" prefix=\"stats\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ taglib uri=\"/stats\" prefix=\"stats\" %>"
    ]
  },
  {
    "question": "Which of the following is a valid taglib directive? ( Select one)",
    "options": [
      "<% taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%@ taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%! taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%@ taglib name=\"/stats\" prefix=\"stats\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ taglib uri=\"/stats\" prefix=\"stats\" %>"
    ]
  },
  {
    "question": "Which followings is the top interface that allows to create a custom tag handler?",
    "options": [
      "Tag",
      "TagSupport",
      "BodyTagSupport",
      "IterationTag",
      "BodyTag"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Tag"
    ]
  },
  {
    "question": "Which followings is the top interface that allows to create a custom tag handler?",
    "options": [
      "Tag",
      "TagSupport",
      "BodyTagSupport",
      "IterationTag",
      "BodyTag"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Tag"
    ]
  },
  {
    "question": "Which followings is the top interface that allows to create a custom tag handler?",
    "options": [
      "Tag",
      "TagSupport",
      "BodyTagSupport",
      "IterationTag",
      "BodyTag"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Tag"
    ]
  },
  {
    "question": "Which followings is the top interface that allows to create a custom tag handler?",
    "options": [
      "Tag",
      "TagSupport",
      "BodyTagSupport",
      "IterationTag",
      "BodyTag"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Tag"
    ]
  },
  {
    "question": "Which implicit object is used in a JSP page to retrieve values associated with  entries in the deployment descriptor?",
    "options": [
      "config",
      "request",
      "session",
      "application"
    ],
    "description": "Choose 1 option",
    "answer": [
      "application"
    ]
  },
  {
    "question": "Which implicit object is used in a JSP page to retrieve values associated with  entries in the deployment descriptor?",
    "options": [
      "config",
      "request",
      "session",
      "application"
    ],
    "description": "Choose 1 option",
    "answer": [
      "application"
    ]
  },
  {
    "question": "You are building a web application that will be used throughout the European Union; therefore, it has significant internationalization requirements. You have been tasked to create a custom tag that generates a message using the java.text.MessageFormat class. The tag will take the resourceKey attribute and a variable number of argument attributes with the format, arg. Here is an example use of this tag and its output:  generates: The disk \"MyDisk\" contains 1247 file( s). Which Simple tag class definition accomplishes this goal of handling a variable number of tag attributes?",
    "options": [
      "public class MessageTag extends SimpleTagSupport\n implements VariableAttributes {\n private Map attributes = new HashMap(  );\n public void setVariableAttribute( String uri,\n String name, Object value) {\n this.attributes.put( name, value);\n }\n // more tag handler methods\n }",
      "public class MessageTag extends SimpleTagSupport\n implements DynamicAttributes {\n private Map attributes = new HashMap(  );\n public void putAttribute( String name, Object value) { this.attributes.put( name, value);\n }\n // more tag handler methods\n }",
      "The Simple tag model does NOT support a variable number of attributes.",
      "public class MessageTag extends SimpleTagSupport\n implements DynamicAttributes {\n private Map attributes = new HashMap(  );\n public void setDynamicAttribute( String uri, String name, Object value) {\n this.attributes.put( name, value);\n }\n // more tag handler methods\n }"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public class MessageTag extends SimpleTagSupport\n implements DynamicAttributes {\n private Map attributes = new HashMap(  );\n public void setDynamicAttribute( String uri, String name, Object value) {\n this.attributes.put( name, value);\n }\n // more tag handler methods\n }"
    ]
  },
  {
    "question": "You are building a web application that will be used throughout the European Union; therefore, it has significant internationalization requirements. You have been tasked to create a custom tag that generates a message using the java.text.MessageFormat class. The tag will take the resourceKey attribute and a variable number of argument attributes with the format, arg. Here is an example use of this tag and its output:  generates: The disk \"MyDisk\" contains 1247 file( s). Which Simple tag class definition accomplishes this goal of handling a variable number of tag attributes?",
    "options": [
      "public class MessageTag extends SimpleTagSupport\n implements VariableAttributes {\n private Map attributes = new HashMap(  );\n public void setVariableAttribute( String uri,\n String name, Object value) {\n this.attributes.put( name, value);\n }\n // more tag handler methods\n }",
      "public class MessageTag extends SimpleTagSupport\n implements DynamicAttributes {\n private Map attributes = new HashMap(  );\n public void putAttribute( String name, Object value) { this.attributes.put( name, value);\n }\n // more tag handler methods\n }",
      "The Simple tag model does NOT support a variable number of attributes.",
      "public class MessageTag extends SimpleTagSupport\n implements DynamicAttributes {\n private Map attributes = new HashMap(  );\n public void setDynamicAttribute( String uri, String name, Object value) {\n this.attributes.put( name, value);\n }\n // more tag handler methods\n }"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public class MessageTag extends SimpleTagSupport\n implements DynamicAttributes {\n private Map attributes = new HashMap(  );\n public void setDynamicAttribute( String uri, String name, Object value) {\n this.attributes.put( name, value);\n }\n // more tag handler methods\n }"
    ]
  },
  {
    "question": "Given the JSP code:<% request.setAttribute( \"foo\", \"bar\"); %>and the Classic tag handler code:5. public int doStartTag(  ) throws JspException {6. // insert code here7. // return int8. }Assume there are no other \"foo\" attributes in the web application. Which invocation on the pageContext object, inserted at line 6, assigns \"bar\" to the variable x?",
    "options": [
      "String x = ( String) pageContext.getAttribute( \"foo\");",
      "It is NOT possible to access the pageContext object from within doStartTag.",
      "String x = ( String) pageContext.getRequest(  ).getAttribute( \"foo\");",
      "MC:PRJ201.08.065"
    ],
    "description": "Choose 1 option",
    "answer": [
      "String x = ( String) pageContext.getRequest(  ).getAttribute( \"foo\");"
    ]
  },
  {
    "question": "Given the JSP code:<% request.setAttribute( \"foo\", \"bar\"); %>and the Classic tag handler code:5. public int doStartTag(  ) throws JspException {6. // insert code here7. // return int8. }Assume there are no other \"foo\" attributes in the web application. Which invocation on the pageContext object, inserted at line 6, assigns \"bar\" to the variable x?",
    "options": [
      "String x = ( String) pageContext.getAttribute( \"foo\");",
      "It is NOT possible to access the pageContext object from within doStartTag.",
      "String x = ( String) pageContext.getRequest(  ).getAttribute( \"foo\");",
      "MC:PRJ201.08.065"
    ],
    "description": "Choose 1 option",
    "answer": [
      "String x = ( String) pageContext.getRequest(  ).getAttribute( \"foo\");"
    ]
  },
  {
    "question": "Given:\n\n 5. public interface MrB1 {\n 6. public interface MrB2 {\n\n A java class is defined as:\n\n 11. @Stateless\n 12. public class MrBean implements MrB1,MrB2 {\n\n Which two statements are correct for making this code work as a stateless session bean, considering that this session bean is NOT defined in a deployment descriptor and the interfaces do NOT have annotations? ( Choose two.)",
    "options": [
      "Only the inteface for remote usage must be annotated.",
      "The interfaces MrB1 and MrB2 can only be used locally without changing the code.",
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ],
    "description": "Choose all that apply",
    "answer": [
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ]
  },
  {
    "question": "Given:\n\n 5. public interface MrB1 {\n 6. public interface MrB2 {\n\n A java class is defined as:\n\n 11. @Stateless\n 12. public class MrBean implements MrB1,MrB2 {\n\n Which two statements are correct for making this code work as a stateless session bean, considering that this session bean is NOT defined in a deployment descriptor and the interfaces do NOT have annotations? ( Choose two.)",
    "options": [
      "Only the inteface for remote usage must be annotated.",
      "The interfaces MrB1 and MrB2 can only be used locally without changing the code.",
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ],
    "description": "Choose all that apply",
    "answer": [
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ]
  },
  {
    "question": "A developer wants to write a stateful session bean using the following interface as local business interface:\n\n 1. package acme;\n 2. public interface Bar {\n 3. public void bar(  );\n 4. }\n\n Assuming there is NOT an ejb-jar.xml file, which code can be inserted into Lines 4-6 below to define the\n bean with the ejb name of BarBean?\n\n 1. package acme;\n 2. import javax.ejb.*;\n 3. import java.io.*;\n 4.\n 5.\n 6.\n 7. }",
    "options": [
      "@Stateful\n public class BarEJB implements Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) {}",
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) throws java.rmi.RemoteException {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}"
    ]
  },
  {
    "question": "A developer wants to write a stateful session bean using the following interface as local business interface:\n\n 1. package acme;\n 2. public interface Bar {\n 3. public void bar(  );\n 4. }\n\n Assuming there is NOT an ejb-jar.xml file, which code can be inserted into Lines 4-6 below to define the\n bean with the ejb name of BarBean?\n\n 1. package acme;\n 2. import javax.ejb.*;\n 3. import java.io.*;\n 4.\n 5.\n 6.\n 7. }",
    "options": [
      "@Stateful\n public class BarEJB implements Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) {}",
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) throws java.rmi.RemoteException {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}"
    ]
  },
  {
    "question": "What are not advantages of multi-tier model?",
    "options": [
      "Scalability",
      "Better re-use",
      "Improved data integrity",
      "Enhanced integration"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Enhanced integration"
    ]
  },
  {
    "question": "What are not advantages of multi-tier model?",
    "options": [
      "Scalability",
      "Better re-use",
      "Improved data integrity",
      "Enhanced integration"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Enhanced integration"
    ]
  },
  {
    "question": "Which of followings are not the goals of EJB?",
    "options": [
      "To be the standard component architecture for building distributed object-oriented business applications",
      "To make it easy to write applications: developers will not have to understand",
      "To follow the \"Write Once, Run Anywhere\" philosophy of the Java programming language",
      "To address the development, deployment, and run-time aspects of an enterprise application's life cycle",
      "To provide interoperability between EJBs and operating systems"
    ],
    "description": "Choose 1 option",
    "answer": [
      "To provide interoperability between EJBs and operating systems"
    ]
  },
  {
    "question": "Which of followings are not the goals of EJB?",
    "options": [
      "To be the standard component architecture for building distributed object-oriented business applications",
      "To make it easy to write applications: developers will not have to understand",
      "To follow the \"Write Once, Run Anywhere\" philosophy of the Java programming language",
      "To address the development, deployment, and run-time aspects of an enterprise application's life cycle",
      "To provide interoperability between EJBs and operating systems"
    ],
    "description": "Choose 1 option",
    "answer": [
      "To provide interoperability between EJBs and operating systems"
    ]
  },
  {
    "question": "BMP stands for:",
    "options": [
      "Bean-managed persistence",
      "Buffer-managed persistence",
      "Binary-managed persistence",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Bean-managed persistence"
    ]
  },
  {
    "question": "BMP stands for:",
    "options": [
      "Bean-managed persistence",
      "Buffer-managed persistence",
      "Binary-managed persistence",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Bean-managed persistence"
    ]
  },
  {
    "question": "Persistence code of _____ can be written manually",
    "options": [
      "BMP",
      "CMP",
      "Session bean",
      "MDB"
    ],
    "description": "Choose 1 option",
    "answer": [
      "BMP"
    ]
  },
  {
    "question": "Persistence code of _____ can be written manually",
    "options": [
      "BMP",
      "CMP",
      "Session bean",
      "MDB"
    ],
    "description": "Choose 1 option",
    "answer": [
      "BMP"
    ]
  },
  {
    "question": "CMP is less adaptable than BMP",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "CMP is less adaptable than BMP",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "Why is Remote view much slower than Local view? ( Choose two)",
    "options": [
      "Network latency",
      "Marshalling/unmarshalling",
      "No need to worry about remote exceptions",
      "Parameters are passed by value"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Network latency",
      "Marshalling/unmarshalling"
    ]
  },
  {
    "question": "Why is Remote view much slower than Local view? ( Choose two)",
    "options": [
      "Network latency",
      "Marshalling/unmarshalling",
      "No need to worry about remote exceptions",
      "Parameters are passed by value"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Network latency",
      "Marshalling/unmarshalling"
    ]
  },
  {
    "question": "Which of followings are False about Local view?",
    "options": [
      "The client and the EJB must reside in the same container",
      "No need to worry about remote exceptions",
      "Provides location independence and flexibility",
      "Much faster than remote view"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Provides location independence and flexibility"
    ]
  },
  {
    "question": "Which of followings are False about Local view?",
    "options": [
      "The client and the EJB must reside in the same container",
      "No need to worry about remote exceptions",
      "Provides location independence and flexibility",
      "Much faster than remote view"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Provides location independence and flexibility"
    ]
  },
  {
    "question": "An instance of entity bean is mapping with _____",
    "options": [
      "Table column",
      "Table",
      "Database",
      "Table Row"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Table Row"
    ]
  },
  {
    "question": "An instance of entity bean is mapping with _____",
    "options": [
      "Table column",
      "Table",
      "Database",
      "Table Row"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Table Row"
    ]
  },
  {
    "question": "______ is a declarative query language",
    "options": [
      "EJB QL",
      "SQL",
      "QL",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "EJB QL"
    ]
  },
  {
    "question": "______ is a declarative query language",
    "options": [
      "EJB QL",
      "SQL",
      "QL",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "EJB QL"
    ]
  },
  {
    "question": "What is the class used to manage a transaction in EJB?",
    "options": [
      "UserTransaction",
      "Transaction",
      "CustomTransaction",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "UserTransaction"
    ]
  },
  {
    "question": "What is the class used to manage a transaction in EJB?",
    "options": [
      "UserTransaction",
      "Transaction",
      "CustomTransaction",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "UserTransaction"
    ]
  },
  {
    "question": "Which following components need to transfer a message from application to another?",
    "options": [
      "MOM",
      "Server",
      "Browser",
      "Container"
    ],
    "description": "Choose 1 option",
    "answer": [
      "MOM"
    ]
  },
  {
    "question": "Which following components need to transfer a message from application to another?",
    "options": [
      "MOM",
      "Server",
      "Browser",
      "Container"
    ],
    "description": "Choose 1 option",
    "answer": [
      "MOM"
    ]
  },
  {
    "question": "What are the benefits of messaging systems? ( Choose two)",
    "options": [
      "Performance",
      "Reliability",
      "Scalability",
      "Portability"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Performance",
      "Reliability"
    ]
  },
  {
    "question": "What are the benefits of messaging systems? ( Choose two)",
    "options": [
      "Performance",
      "Reliability",
      "Scalability",
      "Portability"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Performance",
      "Reliability"
    ]
  },
  {
    "question": "What are the benefits of messaging systems? ( Choose two)",
    "options": [
      "Performance",
      "Reliability",
      "Scalability",
      "Portability"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Performance",
      "Reliability"
    ]
  },
  {
    "question": "What are the benefits of messaging systems? ( Choose two)",
    "options": [
      "Performance",
      "Reliability",
      "Scalability",
      "Portability"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Performance",
      "Reliability"
    ]
  },
  {
    "question": "Messaging domain is the style of messaging which is chosen to send messages",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "Messaging domain is the style of messaging which is chosen to send messages",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "What is the type of messaging domain where has many message producers and consumers?",
    "options": [
      "Publisher/Subscriber",
      "Point-to-Point",
      "Producer/Consumer",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Publisher/Subscriber"
    ]
  },
  {
    "question": "What is the type of messaging domain where has many message producers and consumers?",
    "options": [
      "Publisher/Subscriber",
      "Point-to-Point",
      "Producer/Consumer",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Publisher/Subscriber"
    ]
  },
  {
    "question": "Point-to-point allows that multiple producers can send messages to the queue but each message is delivered to single consumer.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "Point-to-point allows that multiple producers can send messages to the queue but each message is delivered to single consumer.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "Point-to-point allows that multiple producers can send messages to the queue but each message is delivered to single consumer.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "Point-to-point allows that multiple producers can send messages to the queue but each message is delivered to single consumer.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "Publisher/Subscriber allows that multiple producers can send messages to the queue but each message is delivered to single consumer.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "Publisher/Subscriber allows that multiple producers can send messages to the queue but each message is delivered to single consumer.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "MDB is a special web component that can receive JMS messages",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "MDB is a special web component that can receive JMS messages",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "MDB is a special web component that can receive JMS messages",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "MDB is a special web component that can receive JMS messages",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "In point-to-point messaging domain type, messages are sent to ____ from which they are distributed to consumers in FIFO order.",
    "options": [
      "Topic",
      "Queue",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Queue"
    ]
  },
  {
    "question": "In point-to-point messaging domain type, messages are sent to ____ from which they are distributed to consumers in FIFO order.",
    "options": [
      "Topic",
      "Queue",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Queue"
    ]
  },
  {
    "question": "Which of the following is true about Enterprise JavaBeans ( EJB 3.x) objects?",
    "options": [
      "The home interface is no longer required.",
      "The remote interface, or the EJBObject interface, typically provides method signatures for business methods.",
      "The bean class implements the EJBInterface class.",
      "The bean must be defined in the XML deployment descriptor."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The home interface is no longer required."
    ]
  },
  {
    "question": "Which of the following is true about Enterprise JavaBeans ( EJB 3.x) objects?",
    "options": [
      "The home interface is no longer required.",
      "The remote interface, or the EJBObject interface, typically provides method signatures for business methods.",
      "The bean class implements the EJBInterface class.",
      "The bean must be defined in the XML deployment descriptor."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The home interface is no longer required."
    ]
  },
  {
    "question": "Which statement is not true when contrasting the use of entity beans and JDBC for database operations?",
    "options": [
      "Entity beans represent real data in a database.",
      "The bean managed entity bean functionally replaces the JDBC API.",
      "The container-managed entity bean automatically retrieves the data from the persistent storage ( database).",
      "When using JDBC, you must explicitly handle the database transaction and the database connection pooling."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The bean managed entity bean functionally replaces the JDBC API."
    ]
  },
  {
    "question": "Which statement is not true when contrasting the use of entity beans and JDBC for database operations?",
    "options": [
      "Entity beans represent real data in a database.",
      "The bean managed entity bean functionally replaces the JDBC API.",
      "The container-managed entity bean automatically retrieves the data from the persistent storage ( database).",
      "When using JDBC, you must explicitly handle the database transaction and the database connection pooling."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The bean managed entity bean functionally replaces the JDBC API."
    ]
  },
  {
    "question": "Which of the following are advantages of asynchronous messaging architectures?  ( Choose three)",
    "options": [
      "Better use of bandwidth",
      "Supports load balancing",
      "Provides sender with instant response",
      "Scalability"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Better use of bandwidth",
      "Supports load balancing",
      "Scalability"
    ]
  },
  {
    "question": "Which of the following are advantages of asynchronous messaging architectures?  ( Choose three)",
    "options": [
      "Better use of bandwidth",
      "Supports load balancing",
      "Provides sender with instant response",
      "Scalability"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Better use of bandwidth",
      "Supports load balancing",
      "Scalability"
    ]
  },
  {
    "question": "What method must be implemented to receive messages in a message-driven bean ( MDB)?",
    "options": [
      "The receive method",
      "The onMessage method",
      "The readMessage method",
      "The processMessage method"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The onMessage method"
    ]
  },
  {
    "question": "What method must be implemented to receive messages in a message-driven bean ( MDB)?",
    "options": [
      "The receive method",
      "The onMessage method",
      "The readMessage method",
      "The processMessage method"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The onMessage method"
    ]
  },
  {
    "question": "What method must be implemented to receive messages in a message-driven bean ( MDB)?",
    "options": [
      "The receive method",
      "The onMessage method",
      "The readMessage method",
      "The processMessage method"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The onMessage method"
    ]
  },
  {
    "question": "What method must be implemented to receive messages in a message-driven bean ( MDB)?",
    "options": [
      "The receive method",
      "The onMessage method",
      "The readMessage method",
      "The processMessage method"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The onMessage method"
    ]
  },
  {
    "question": "MDB doesn\u2019t have both remote and local interfaces.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "MDB doesn\u2019t have both remote and local interfaces.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "MDB has only remote interfaces.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "MDB has only remote interfaces.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "Identify the incorrect statements about MDB characteristics:",
    "options": [
      "Have one loosely typed business method.",
      "Must return a value that determines the result.",
      "Cannot send exceptions back to the client.",
      "Can be durable or non durable subscribers."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Must return a value that determines the result."
    ]
  },
  {
    "question": "Identify the incorrect statements about MDB characteristics:",
    "options": [
      "Have one loosely typed business method.",
      "Must return a value that determines the result.",
      "Cannot send exceptions back to the client.",
      "Can be durable or non durable subscribers."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Must return a value that determines the result."
    ]
  },
  {
    "question": "Which of followings are five predefined Message types?\n A. StringMessage\n B. StreamMessage\n C. ObjectMessage\n D. ByteMessage\n E. MapMessage\n F. TextMessage",
    "options": [
      "B-C-D-E-F",
      "A-B-C-D-E",
      "A-B-C-E-F",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "B-C-D-E-F"
    ]
  },
  {
    "question": "Which of followings are five predefined Message types?\n A. StringMessage\n B. StreamMessage\n C. ObjectMessage\n D. ByteMessage\n E. MapMessage\n F. TextMessage",
    "options": [
      "B-C-D-E-F",
      "A-B-C-D-E",
      "A-B-C-E-F",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "B-C-D-E-F"
    ]
  },
  {
    "question": "Which followings is used in point-to-point message domain?",
    "options": [
      "Queue",
      "Topic",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Queue"
    ]
  },
  {
    "question": "Which followings is used in point-to-point message domain?",
    "options": [
      "Queue",
      "Topic",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Queue"
    ]
  },
  {
    "question": "Messages are sent to queue from which they are distributed to consumers in _____ order.",
    "options": [
      "FIFO",
      "FILO",
      "FILI",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "FIFO"
    ]
  },
  {
    "question": "Messages are sent to queue from which they are distributed to consumers in _____ order.",
    "options": [
      "FIFO",
      "FILO",
      "FILI",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "FIFO"
    ]
  },
  {
    "question": "_____ is an example of MOM.",
    "options": [
      "Microsoft MSMQ",
      "Netbeans",
      "Eclipse",
      "Microsoft Project"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Microsoft MSMQ"
    ]
  },
  {
    "question": "_____ is an example of MOM.",
    "options": [
      "Microsoft MSMQ",
      "Netbeans",
      "Eclipse",
      "Microsoft Project"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Microsoft MSMQ"
    ]
  },
  {
    "question": "Which of followings is used to create a Session object in JMS?",
    "options": [
      "Connection",
      "ConnectionFactory",
      "MessageConsumer",
      "MessageProducer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Connection"
    ]
  },
  {
    "question": "Which of followings is used to create a Session object in JMS?",
    "options": [
      "Connection",
      "ConnectionFactory",
      "MessageConsumer",
      "MessageProducer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Connection"
    ]
  },
  {
    "question": "Which of followings is used to create a MessageConsumer object in JMS?",
    "options": [
      "Connection",
      "ConnectionFactory",
      "MessageConsumer",
      "MessageProducer",
      "Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session"
    ]
  },
  {
    "question": "Which of followings is used to create a MessageConsumer object in JMS?",
    "options": [
      "Connection",
      "ConnectionFactory",
      "MessageConsumer",
      "MessageProducer",
      "Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session"
    ]
  },
  {
    "question": "Which of followings is used to send a message in JMS?",
    "options": [
      "Connection",
      "ConnectionFactory",
      "MessageConsumer",
      "MessageProducer",
      "Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "MessageProducer"
    ]
  },
  {
    "question": "Which of followings is used to send a message in JMS?",
    "options": [
      "Connection",
      "ConnectionFactory",
      "MessageConsumer",
      "MessageProducer",
      "Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "MessageProducer"
    ]
  },
  {
    "question": "MDB can't expose its methods to the clients",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "MDB can\u2019t expose its methods to the clients",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "MDB can't expose its methods to the clients",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "MDB can\u2019t expose its methods to the clients",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "The ______________ supplies business components, or enterprise beans.",
    "options": [
      "Bean provider",
      "Application assembler",
      "Tools vendor",
      "Deployer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Bean provider"
    ]
  },
  {
    "question": "The ______________ supplies business components, or enterprise beans.",
    "options": [
      "Bean provider",
      "Application assembler",
      "Tools vendor",
      "Deployer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Bean provider"
    ]
  },
  {
    "question": "Component Interfaces in Session Bean may have _______",
    "options": [
      "Both local and remote interfaces",
      "Either local or remote interfaces",
      "Both local home and home objects",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both local and remote interfaces"
    ]
  },
  {
    "question": "Component Interfaces in Session Bean may have _______",
    "options": [
      "Both local and remote interfaces",
      "Either local or remote interfaces",
      "Both local home and home objects",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both local and remote interfaces"
    ]
  },
  {
    "question": "Which of the statements about stateless session beans is true?",
    "options": [
      "They may provide high performance by being available for multiple clients.",
      "They maintain a cached state on behalf of a specific client.",
      "They maintain a conversational state on behalf of several clients.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "They may provide high performance by being available for multiple clients."
    ]
  },
  {
    "question": "Which of the statements about stateless session beans is true?",
    "options": [
      "They may provide high performance by being available for multiple clients.",
      "They maintain a cached state on behalf of a specific client.",
      "They maintain a conversational state on behalf of several clients.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "They may provide high performance by being available for multiple clients."
    ]
  },
  {
    "question": "Which statement about an EJB container's lifecycle management of session beans is true?",
    "options": [
      "The container can passivate a stateful session bean to free limited resources.",
      "The client is responsible for the object identity for session beans.",
      "The client can passivate a session bean after a specified timeout period.",
      "The container can passivate a stateless session bean to free limited resources."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The container can passivate a stateful session bean to free limited resources."
    ]
  },
  {
    "question": "Which statement about an EJB container's lifecycle management of session beans is true?",
    "options": [
      "The container can passivate a stateful session bean to free limited resources.",
      "The client is responsible for the object identity for session beans.",
      "The client can passivate a session bean after a specified timeout period.",
      "The container can passivate a stateless session bean to free limited resources."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The container can passivate a stateful session bean to free limited resources."
    ]
  },
  {
    "question": "Which statement about passivating session beans is true?",
    "options": [
      "The passivated stateful session bean should open the connections in activation that were closed when it was passivated.",
      "The container ensures that the passivated stateless session bean is reassigned to the remote object upon activation.",
      "The passivated stateless session bean should close all connections before being passivated.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The passivated stateful session bean should open the connections in activation that were closed when it was passivated."
    ]
  },
  {
    "question": "Which statement about passivating session beans is true?",
    "options": [
      "The passivated stateful session bean should open the connections in activation that were closed when it was passivated.",
      "The container ensures that the passivated stateless session bean is reassigned to the remote object upon activation.",
      "The passivated stateless session bean should close all connections before being passivated.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The passivated stateful session bean should open the connections in activation that were closed when it was passivated."
    ]
  },
  {
    "question": "What do you need to create a EJB3 session bean? ( Select three)",
    "options": [
      "Declare a business interface and annotate it with @Local or @Remote",
      "Write the session bean class itself that implements the business logic",
      "Annotate the session bean with @Session",
      "Annotate the session bean with @Stateful or @Stateless"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Declare a business interface and annotate it with @Local or @Remote",
      "Write the session bean class itself that implements the business logic",
      "Annotate the session bean with @Stateful or @Stateless"
    ]
  },
  {
    "question": "What do you need to create a EJB3 session bean? ( Select three)",
    "options": [
      "Declare a business interface and annotate it with @Local or @Remote",
      "Write the session bean class itself that implements the business logic",
      "Annotate the session bean with @Session",
      "Annotate the session bean with @Stateful or @Stateless"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Declare a business interface and annotate it with @Local or @Remote",
      "Write the session bean class itself that implements the business logic",
      "Annotate the session bean with @Stateful or @Stateless"
    ]
  },
  {
    "question": "What is the typical order of life cycle stages an average stateful session bean goes through starting from its instantiation till retiring? ( Select two)",
    "options": [
      "Bean instantiated, Dependency injection, PostConstruct , PreDestroy",
      "Bean instantiated, Dependency injection, PostActivate , PrePassivate",
      "Bean fetched from the passive state, Dependency injection, PostActivate , PrePassivate",
      "Bean fetched from the passive state, PostActivate , PrePassivate"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Bean instantiated, Dependency injection, PostConstruct , PreDestroy",
      "Bean fetched from the passive state, PostActivate , PrePassivate"
    ]
  },
  {
    "question": "What is the typical order of life cycle stages an average stateful session bean goes through starting from its instantiation till retiring? ( Select two)",
    "options": [
      "Bean instantiated, Dependency injection, PostConstruct , PreDestroy",
      "Bean instantiated, Dependency injection, PostActivate , PrePassivate",
      "Bean fetched from the passive state, Dependency injection, PostActivate , PrePassivate",
      "Bean fetched from the passive state, PostActivate , PrePassivate"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Bean instantiated, Dependency injection, PostConstruct , PreDestroy",
      "Bean fetched from the passive state, PostActivate , PrePassivate"
    ]
  },
  {
    "question": "What is the typical order of life cycle stages an average stateless session bean goes through starting from its instantiation till retiring? ( Select one)",
    "options": [
      "Instantiation by the EJB container,  PostConstruct call back, Dependency injection, PrePassivate",
      "Instantiation by the EJB container,  PostConstruct call back, Dependency injection, PreDestroy",
      "Instantiation by the client code, Dependency injection, PostConstruct call back, PreDestroy",
      "Instantiation by the EJB container, Dependency injection, PostConstruct call back, PreDestroy"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Instantiation by the EJB container, Dependency injection, PostConstruct call back, PreDestroy"
    ]
  },
  {
    "question": "What is the typical order of life cycle stages an average stateless session bean goes through starting from its instantiation till retiring? ( Select one)",
    "options": [
      "Instantiation by the EJB container,  PostConstruct call back, Dependency injection, PrePassivate",
      "Instantiation by the EJB container,  PostConstruct call back, Dependency injection, PreDestroy",
      "Instantiation by the client code, Dependency injection, PostConstruct call back, PreDestroy",
      "Instantiation by the EJB container, Dependency injection, PostConstruct call back, PreDestroy"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Instantiation by the EJB container, Dependency injection, PostConstruct call back, PreDestroy"
    ]
  },
  {
    "question": "A developer wants to write a stateful session bean using the following interface as local business interface:1. package acme;2. public interface Bar {3. public void bar(  );4. }Assuming there is NOT an ejb-jar.xml file, which code can be inserted into Lines 4-6 below to define thebean with the ejb name of BarBean?1. package acme;2. import javax.ejb.*;3. import java.io.*;4.5.6.7. }",
    "options": [
      "@Statefulpublic class BarEJB implements Bar {public void bar(  ) {}",
      "@Stateful( name=\"Bar\")public class BarBean implements Bar {public void bar(  ) {}",
      "@Statefulpublic class BarBean implements Serializable, Bar {public void bar(  ) {}",
      "@Stateful( name=\"Bar\")public class BarBean implements Bar {public void bar(  ) throws java.rmi.RemoteException {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Statefulpublic class BarBean implements Serializable, Bar {public void bar(  ) {}"
    ]
  },
  {
    "question": "A developer wants to write a stateful session bean using the following interface as local business interface:1. package acme;2. public interface Bar {3. public void bar(  );4. }Assuming there is NOT an ejb-jar.xml file, which code can be inserted into Lines 4-6 below to define thebean with the ejb name of BarBean?1. package acme;2. import javax.ejb.*;3. import java.io.*;4.5.6.7. }",
    "options": [
      "@Statefulpublic class BarEJB implements Bar {public void bar(  ) {}",
      "@Stateful( name=\"Bar\")public class BarBean implements Bar {public void bar(  ) {}",
      "@Statefulpublic class BarBean implements Serializable, Bar {public void bar(  ) {}",
      "@Stateful( name=\"Bar\")public class BarBean implements Bar {public void bar(  ) throws java.rmi.RemoteException {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Statefulpublic class BarBean implements Serializable, Bar {public void bar(  ) {}"
    ]
  },
  {
    "question": "A  session bean  represents a\u00a0.....\u00a0 inside the Application Server.",
    "options": [
      "single client",
      "a group of clients",
      "a group of clients that are concurrently accessing the same resource in server.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "single client"
    ]
  },
  {
    "question": "A  session bean  represents a\u00a0.....\u00a0 inside the Application Server.",
    "options": [
      "single client",
      "a group of clients",
      "a group of clients that are concurrently accessing the same resource in server.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "single client"
    ]
  },
  {
    "question": "What is the typical order of life cycle stages an average stateless session bean goes through starting from its instantiation till retiring? ( Select one)",
    "options": [
      "Instantiation by the EJB container,  PostConstruct call back, Dependency injection, PrePassivate",
      "Instantiation by the EJB container,  PostConstruct call back, Dependency injection, PreDestroy",
      "Instantiation by the client code, Dependency injection, PostConstruct call back, PreDestroy",
      "Instantiation by the EJB container, Dependency injection, PostConstruct call back, PreDestroy"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Instantiation by the EJB container, Dependency injection, PostConstruct call back, PreDestroy"
    ]
  },
  {
    "question": "What is the typical order of life cycle stages an average stateless session bean goes through starting from its instantiation till retiring? ( Select one)",
    "options": [
      "Instantiation by the EJB container,  PostConstruct call back, Dependency injection, PrePassivate",
      "Instantiation by the EJB container,  PostConstruct call back, Dependency injection, PreDestroy",
      "Instantiation by the client code, Dependency injection, PostConstruct call back, PreDestroy",
      "Instantiation by the EJB container, Dependency injection, PostConstruct call back, PreDestroy"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Instantiation by the EJB container, Dependency injection, PostConstruct call back, PreDestroy"
    ]
  },
  {
    "question": "In EJB 2.x, select the correct steps to use an EJB.",
    "options": [
      "1)Look up a home object 2)Use the home object to create an EJB object 3)Call business methods on the EJB object 4)Remove the EJB object",
      "1)Look up a remote object 2)Use the remote object to create an EJB object 3)Call business methods on the EJB object 4)Remove the EJB object",
      "1)Look up a home object 2)Use the home object to create a bean instance 3)Call business methods on the bean instance 4)Remove the bean instance",
      "1)Look up a home objec 2)Call business methods on the EJB object 3)Use the home object to create an EJB object 4)Remove the EJB object"
    ],
    "description": "Choose 1 option",
    "answer": [
      "1)Look up a home object 2)Use the home object to create an EJB object 3)Call business methods on the EJB object 4)Remove the EJB object"
    ]
  },
  {
    "question": "In EJB 2.x, select the correct steps to use an EJB.",
    "options": [
      "1)Look up a home object 2)Use the home object to create an EJB object 3)Call business methods on the EJB object 4)Remove the EJB object",
      "1)Look up a remote object 2)Use the remote object to create an EJB object 3)Call business methods on the EJB object 4)Remove the EJB object",
      "1)Look up a home object 2)Use the home object to create a bean instance 3)Call business methods on the bean instance 4)Remove the bean instance",
      "1)Look up a home objec 2)Call business methods on the EJB object 3)Use the home object to create an EJB object 4)Remove the EJB object"
    ],
    "description": "Choose 1 option",
    "answer": [
      "1)Look up a home object 2)Use the home object to create an EJB object 3)Call business methods on the EJB object 4)Remove the EJB object"
    ]
  },
  {
    "question": "What are different between bean managed persistent ( BMP) and container managed persistence ( CMP)?",
    "options": [
      "BMP offers a lot more flexibility than CMP",
      "BMP offers a lower performance than CMP",
      "BMP maintain easier than CMP",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "BMP offers a lot more flexibility than CMP"
    ]
  },
  {
    "question": "What are different between bean managed persistent ( BMP) and container managed persistence ( CMP)?",
    "options": [
      "BMP offers a lot more flexibility than CMP",
      "BMP offers a lower performance than CMP",
      "BMP maintain easier than CMP",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "BMP offers a lot more flexibility than CMP"
    ]
  },
  {
    "question": "The following statement is true about which type of EJB?\"All bean instances are equivalent when they are not involved in serving a client-invoked method\u201d",
    "options": [
      "Stateful session bean.",
      "Stateless session bean",
      "Entity bean with bean managed persistence.",
      "Entity bean with container managed persistence."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Stateless session bean"
    ]
  },
  {
    "question": "The following statement is true about which type of EJB?\"All bean instances are equivalent when they are not involved in serving a client-invoked method\u201d",
    "options": [
      "Stateful session bean.",
      "Stateless session bean",
      "Entity bean with bean managed persistence.",
      "Entity bean with container managed persistence."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Stateless session bean"
    ]
  },
  {
    "question": "Two types of primary keys:",
    "options": [
      "Simple",
      "Composite",
      "Unique",
      "Complicate"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Simple",
      "Composite"
    ]
  },
  {
    "question": "Two types of primary keys:",
    "options": [
      "Simple",
      "Composite",
      "Unique",
      "Complicate"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Simple",
      "Composite"
    ]
  },
  {
    "question": "Entity bean is _______",
    "options": [
      "a persistent data component",
      "an application logic component",
      "an object-relational mapping",
      "a database object"
    ],
    "description": "Choose 1 option",
    "answer": [
      "a persistent data component"
    ]
  },
  {
    "question": "Entity bean is _______",
    "options": [
      "a persistent data component",
      "an application logic component",
      "an object-relational mapping",
      "a database object"
    ],
    "description": "Choose 1 option",
    "answer": [
      "a persistent data component"
    ]
  },
  {
    "question": "The ________class makes every entity bean different.",
    "options": [
      "bean key",
      "primary key",
      "key",
      "bean ID"
    ],
    "description": "Choose 1 option",
    "answer": [
      "primary key"
    ]
  },
  {
    "question": "The ________class makes every entity bean different.",
    "options": [
      "bean key",
      "primary key",
      "key",
      "bean ID"
    ],
    "description": "Choose 1 option",
    "answer": [
      "primary key"
    ]
  },
  {
    "question": "Which of following classes is not used in Point-to-Point model in JMS?",
    "options": [
      "Queue",
      "Message",
      "Topic",
      "Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Topic"
    ]
  },
  {
    "question": "Which of following classes is not used in Point-to-Point model in JMS?",
    "options": [
      "Queue",
      "Message",
      "Topic",
      "Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Topic"
    ]
  },
  {
    "question": "The Java Persistence API provides Java developers with an object/relational mapping facility for managing relational data in Java applications",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "The Java Persistence API provides Java developers with an object/relational mapping facility for managing relational data in Java applications",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "An entity represents a table in a relational database, and each entity instance corresponds to a row in that table",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "An entity represents a table in a relational database, and each entity instance corresponds to a row in that table",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "Which of following requirements must an entity class follow? ( Choose three)",
    "options": [
      "The class must be annotated with the javax.persistence.Entity annotation.",
      "The class must have a public or protected, no-argument constructor.",
      "The class must implement the Serializable interface.",
      "The class must be declared final."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The class must be annotated with the javax.persistence.Entity annotation.",
      "The class must have a public or protected, no-argument constructor.",
      "The class must implement the Serializable interface."
    ]
  },
  {
    "question": "Identify the correct statements:A. All instances of a MDBs are equivalentB. Clients do not access message-driven beans through interfaces",
    "options": [
      "Both are true",
      "A is true",
      "B is true",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both are true"
    ]
  },
  {
    "question": "Which of following requirements must an entity class follow? ( Choose three)",
    "options": [
      "The class must be annotated with the javax.persistence.Entity annotation.",
      "The class must have a public or protected, no-argument constructor.",
      "The class must implement the Serializable interface.",
      "The class must be declared final."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The class must be annotated with the javax.persistence.Entity annotation.",
      "The class must have a public or protected, no-argument constructor.",
      "The class must implement the Serializable interface."
    ]
  },
  {
    "question": "Identify the correct statements:A. All instances of a MDBs are equivalentB. Clients do not access message-driven beans through interfaces",
    "options": [
      "Both are true",
      "A is true",
      "B is true",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both are true"
    ]
  },
  {
    "question": "identify the correct statements about the requirements for declaring Entity class: ( Choose two)",
    "options": [
      "Entities may extend both entity and non-entity classes, and non-entity classes may extend entity classes.",
      "Persistent instance variables must be declared private, protected, or package-private and can be accessed directly only by the entity class's methods.",
      "The class must implement the Entity interface.",
      "The class must have a private no-argument constructor."
    ],
    "description": "Choose all that apply",
    "answer": [
      "Entities may extend both entity and non-entity classes, and non-entity classes may extend entity classes.",
      "Persistent instance variables must be declared private, protected, or package-private and can be accessed directly only by the entity class's methods."
    ]
  },
  {
    "question": "identify the correct statements about the requirements for declaring Entity class: ( Choose two)",
    "options": [
      "Entities may extend both entity and non-entity classes, and non-entity classes may extend entity classes.",
      "Persistent instance variables must be declared private, protected, or package-private and can be accessed directly only by the entity class's methods.",
      "The class must implement the Entity interface.",
      "The class must have a private no-argument constructor."
    ],
    "description": "Choose all that apply",
    "answer": [
      "Entities may extend both entity and non-entity classes, and non-entity classes may extend entity classes.",
      "Persistent instance variables must be declared private, protected, or package-private and can be accessed directly only by the entity class's methods."
    ]
  },
  {
    "question": "The persistent state of an entity can be accessed through either the entity's instance variables or properties",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "The persistent state of an entity can be accessed through either the entity's instance variables or properties",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "In Persistence API, an entity manager defines the scope under which particular entity instances are created, persisted, and removed.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "In Persistence API, an entity manager defines the scope under which particular entity instances are created, persisted, and removed.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "Which of following statements is used to obtain an EntityManager instance?",
    "options": [
      "@PersistenceContextEntityManager em;",
      "@ EntityManagerEntityManager em;",
      "@ManagerEntityManager em;",
      "EntityManager em;"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@PersistenceContextEntityManager em;"
    ]
  },
  {
    "question": "Which of following statements is used to obtain an EntityManager instance?",
    "options": [
      "@PersistenceContextEntityManager em;",
      "@ EntityManagerEntityManager em;",
      "@ManagerEntityManager em;",
      "EntityManager em;"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@PersistenceContextEntityManager em;"
    ]
  },
  {
    "question": "Which of following snippets is used to find a Customer entity instance by id?",
    "options": [
      "@PersistenceContextEntityManager em;Customer cust = em.find( Customer.class, custID);",
      "@PersistenceContextEntityManager em;Customer cust = em.find( custID);",
      "@PersistenceContextEntityManager em;Customer cust = em.find( Customer, custID);",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@PersistenceContextEntityManager em;Customer cust = em.find( Customer.class, custID);"
    ]
  },
  {
    "question": "Which of following snippets is used to find a Customer entity instance by id?",
    "options": [
      "@PersistenceContextEntityManager em;Customer cust = em.find( Customer.class, custID);",
      "@PersistenceContextEntityManager em;Customer cust = em.find( custID);",
      "@PersistenceContextEntityManager em;Customer cust = em.find( Customer, custID);",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@PersistenceContextEntityManager em;Customer cust = em.find( Customer.class, custID);"
    ]
  },
  {
    "question": "Identify the correct statements about entities query methods in Java Persistence API:A. The Criteria API is a simple, string-based language similar to SQL used to query entities and their relationships. B. The Criteria API is used to define queries for entities and their persistent state by creating query-defining objects.",
    "options": [
      "A is correct",
      "B is correct",
      "Both are correct"
    ],
    "description": "Choose 1 option",
    "answer": [
      "B is correct"
    ]
  },
  {
    "question": "Identify the correct statements about entities query methods in Java Persistence API:A. The Criteria API is a simple, string-based language similar to SQL used to query entities and their relationships. B. The Criteria API is used to define queries for entities and their persistent state by creating query-defining objects.",
    "options": [
      "A is correct",
      "B is correct",
      "Both are correct"
    ],
    "description": "Choose 1 option",
    "answer": [
      "B is correct"
    ]
  },
  {
    "question": "Which is an EJB system exception?",
    "options": [
      "javax.ejb.EJBException",
      "javax.ejb.CreateException",
      "javax.ejb.DuplicateKeyException",
      "javax.ejb.ObjectNotFoundException"
    ],
    "description": "Choose 1 option",
    "answer": [
      "javax.ejb.EJBException"
    ]
  },
  {
    "question": "Which is an EJB system exception?",
    "options": [
      "javax.ejb.EJBException",
      "javax.ejb.CreateException",
      "javax.ejb.DuplicateKeyException",
      "javax.ejb.ObjectNotFoundException"
    ],
    "description": "Choose 1 option",
    "answer": [
      "javax.ejb.EJBException"
    ]
  },
  {
    "question": "A\u00a0CMP bean must be declared as ...........",
    "options": [
      "a public abstract class.",
      "a concrete class because it associates with a specific table in a specific database.",
      "an inteface.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "a public abstract class."
    ]
  },
  {
    "question": "A\u00a0CMP bean must be declared as ...........",
    "options": [
      "a public abstract class.",
      "a concrete class because it associates with a specific table in a specific database.",
      "an inteface.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "a public abstract class."
    ]
  },
  {
    "question": "What are the requirements of a message-driven bean ( EJB 3.x) class? ( Select three)",
    "options": [
      "It is annotated with @MessageDriven annotation",
      "It implements onMessage(  ) method",
      "It implements receive(  ) method",
      "It implements the MessageListener interfaces"
    ],
    "description": "Choose all that apply",
    "answer": [
      "It is annotated with @MessageDriven annotation",
      "It implements onMessage(  ) method",
      "It implements the MessageListener interfaces"
    ]
  },
  {
    "question": "What are the requirements of a message-driven bean ( EJB 3.x) class? ( Select three)",
    "options": [
      "It is annotated with @MessageDriven annotation",
      "It implements onMessage(  ) method",
      "It implements receive(  ) method",
      "It implements the MessageListener interfaces"
    ],
    "description": "Choose all that apply",
    "answer": [
      "It is annotated with @MessageDriven annotation",
      "It implements onMessage(  ) method",
      "It implements the MessageListener interfaces"
    ]
  },
  {
    "question": "Message Driven Beans ( MDBs) are designed to function as: ( Select one)",
    "options": [
      "Synchronous message publisher",
      "Synchronous message consumer",
      "Asynchronous message publisher",
      "Asynchronous message consumer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Asynchronous message consumer"
    ]
  },
  {
    "question": "Message Driven Beans ( MDBs) are designed to function as: ( Select one)",
    "options": [
      "Synchronous message publisher",
      "Synchronous message consumer",
      "Asynchronous message publisher",
      "Asynchronous message consumer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Asynchronous message consumer"
    ]
  },
  {
    "question": "Message Driven Beans ( MDBs) can be pooled by the EJB container.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "Message Driven Beans ( MDBs) can be pooled by the EJB container.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "What are characteristics of a Message Driven Bean? ( Select one)",
    "options": [
      "They are invoked asynchronously.",
      "They are relatively short-lived.",
      "They are stateless.",
      "All of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the above"
    ]
  },
  {
    "question": "What are characteristics of a Message Driven Bean? ( Select one)",
    "options": [
      "They are invoked asynchronously.",
      "They are relatively short-lived.",
      "They are stateless.",
      "All of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the above"
    ]
  },
  {
    "question": "Which of followings are two types of EJBs?",
    "options": [
      "Session bean",
      "Message driven bean",
      "Entity bean",
      "Enterprise bean"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Session bean",
      "Message driven bean"
    ]
  },
  {
    "question": "Which of followings are two types of EJBs?",
    "options": [
      "Session bean",
      "Message driven bean",
      "Entity bean",
      "Enterprise bean"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Session bean",
      "Message driven bean"
    ]
  },
  {
    "question": "_____ is instantiated once per application and exists for the lifecycle of the application",
    "options": [
      "Stateless session bean",
      "Message driven bean",
      "Singleton bean",
      "Stateful session bean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Singleton bean"
    ]
  },
  {
    "question": "_____ is instantiated once per application and exists for the lifecycle of the application",
    "options": [
      "Stateless session bean",
      "Message driven bean",
      "Singleton bean",
      "Stateful session bean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Singleton bean"
    ]
  },
  {
    "question": "_____ is designed for circumstances in which a single enterprise bean instance is shared across and concurrently accessed by clients.",
    "options": [
      "Stateless session bean",
      "Message driven bean",
      "Singleton bean",
      "Stateful session bean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Singleton bean"
    ]
  },
  {
    "question": "_____ is designed for circumstances in which a single enterprise bean instance is shared across and concurrently accessed by clients.",
    "options": [
      "Stateless session bean",
      "Message driven bean",
      "Singleton bean",
      "Stateful session bean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Singleton bean"
    ]
  },
  {
    "question": "Which of following beans has three stages in the lifecycle?",
    "options": [
      "Stateless session bean",
      "Message driven bean",
      "Singleton bean",
      "Stateful session bean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Stateless session bean"
    ]
  },
  {
    "question": "Which of following beans has three stages in the lifecycle?",
    "options": [
      "Stateless session bean",
      "Message driven bean",
      "Singleton bean",
      "Stateful session bean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Stateless session bean"
    ]
  },
  {
    "question": "______ maintain conversational state between method invocations",
    "options": [
      "Entity beans",
      "Stateful beans",
      "Stateless beans",
      "Singleton beans"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Stateful beans"
    ]
  },
  {
    "question": "______ maintain conversational state between method invocations",
    "options": [
      "Entity beans",
      "Stateful beans",
      "Stateless beans",
      "Singleton beans"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Stateful beans"
    ]
  },
  {
    "question": "A ___________ subscription to a topic means that a JMS subscriber receives all messages, even if the subscriber is inactive.",
    "options": [
      "durable",
      "nondurable",
      "permanent",
      "temporary"
    ],
    "description": "Choose 1 option",
    "answer": [
      "durable"
    ]
  },
  {
    "question": "A ___________ subscription to a topic means that a JMS subscriber receives all messages, even if the subscriber is inactive.",
    "options": [
      "durable",
      "nondurable",
      "permanent",
      "temporary"
    ],
    "description": "Choose 1 option",
    "answer": [
      "durable"
    ]
  },
  {
    "question": "With respect to message-driven bean, when the queue receives a message, the EJB container invokes ...",
    "options": [
      "the message listener method, named as onMessage( ,...)",
      "the method ejbCreate( ...) to create a bean instance.",
      "the method init( ...) to initialize a bean instance.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "the message listener method, named as onMessage( ,...)"
    ]
  },
  {
    "question": "With respect to message-driven bean, when the queue receives a message, the EJB container invokes ...",
    "options": [
      "the message listener method, named as onMessage( ,...)",
      "the method ejbCreate( ...) to create a bean instance.",
      "the method init( ...) to initialize a bean instance.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "the message listener method, named as onMessage( ,...)"
    ]
  },
  {
    "question": "JSTL stands for",
    "options": [
      "JavaServer Pages Standard Tag Library",
      "Servlet Pages Standard Tag Library",
      "JavaBean Standard Tag Library",
      "Enterprise JavaBean Standard Tag Library"
    ],
    "description": "Choose 1 option",
    "answer": [
      "JavaServer Pages Standard Tag Library"
    ]
  },
  {
    "question": "JSTL stands for",
    "options": [
      "JavaServer Pages Standard Tag Library",
      "Servlet Pages Standard Tag Library",
      "JavaBean Standard Tag Library",
      "Enterprise JavaBean Standard Tag Library"
    ],
    "description": "Choose 1 option",
    "answer": [
      "JavaServer Pages Standard Tag Library"
    ]
  },
  {
    "question": "Following is the syntax to include ___________in your JSP<%@ taglib prefix=\"sql\" uri=\"http://java.sun.com/jsp/jstl/sql\" %>",
    "options": [
      "JSTL SQL library",
      "JSTL Formatting library",
      "JSTL Core library",
      "JSTL XML library"
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSTL SQL library"
    ]
  },
  {
    "question": "Following is the syntax to include ___________in your JSP<%@ taglib prefix=\"sql\" uri=\"http://java.sun.com/jsp/jstl/sql\" %>",
    "options": [
      "JSTL SQL library",
      "JSTL Formatting library",
      "JSTL Core library",
      "JSTL XML library"
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSTL SQL library"
    ]
  },
  {
    "question": "Which tag executes the SQL query defined in its body or through the sql attribute?",
    "options": [
      "<sql:query>",
      "<sql:update>",
      "<sql:executeQuery>",
      "<sql:executeUpdate>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<sql:query>"
    ]
  },
  {
    "question": "Which tag executes the SQL query defined in its body or through the sql attribute?",
    "options": [
      "<sql:query>",
      "<sql:update>",
      "<sql:executeQuery>",
      "<sql:executeUpdate>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<sql:query>"
    ]
  },
  {
    "question": "Which JSTL tag likes <%= ... >?",
    "options": [
      "<c:out >",
      "<c:in >",
      "<c:output >",
      "<c:out.print >"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<c:out >"
    ]
  },
  {
    "question": "Which JSTL tag likes <%= ... >?",
    "options": [
      "<c:out >",
      "<c:in >",
      "<c:output >",
      "<c:out.print >"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<c:out >"
    ]
  },
  {
    "question": "Which JSTL tag sets a parameter in an SQL statement to the specified value?",
    "options": [
      "<sql:param>",
      "<sql:parameter>",
      "<sql:setparam>",
      "<sql:setparameter>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<sql:param>"
    ]
  },
  {
    "question": "Which JSTL tag sets a parameter in an SQL statement to the specified value?",
    "options": [
      "<sql:param>",
      "<sql:parameter>",
      "<sql:setparam>",
      "<sql:setparameter>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<sql:param>"
    ]
  },
  {
    "question": "To connect to the database, which JSTL tag do we use?",
    "options": [
      "<sql:setDataSource>",
      "<sql:setDatabase>",
      "<sql:setDataBase>",
      "<sql:setConnection>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<sql:setDataSource>"
    ]
  },
  {
    "question": "To connect to the database, which JSTL tag do we use?",
    "options": [
      "<sql:setDataSource>",
      "<sql:setDatabase>",
      "<sql:setDataBase>",
      "<sql:setConnection>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<sql:setDataSource>"
    ]
  },
  {
    "question": "If ${snapshot} returns a correct connection to the database, the following statement will display:<sql:query dataSource=\"${snapshot}\" var=\"result\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SELECT * FROM Students;</sql:query><c:forEach var=\"row\" items=\"${result.rows}\"> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0<c:out value=\"${row.stuId}\" /></c:forEach",
    "options": [
      "The list of values of stuId in Students table.",
      "An error.",
      "Nothing",
      "None of the other."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The list of values of stuId in Students table."
    ]
  },
  {
    "question": "If ${snapshot} returns a correct connection to the database, the following statement will display:<sql:query dataSource=\"${snapshot}\" var=\"result\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SELECT * FROM Students;</sql:query><c:forEach var=\"row\" items=\"${result.rows}\"> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0<c:out value=\"${row.stuId}\" /></c:forEach",
    "options": [
      "The list of values of stuId in Students table.",
      "An error.",
      "Nothing",
      "None of the other."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The list of values of stuId in Students table."
    ]
  },
  {
    "question": "If ${snapshot} returns a correct connection to the database, the following statement will display:<sql:query dataSource=\"${snapshot}\" var=\"result\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SELECT * FROM Students;</sql:query><c:forEach var=\"row\" items=\"${result.row}\"> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0<c:out value=\"${row.stuId}\" /></c:forEach",
    "options": [
      "The list of values of stuId in Students table.",
      "An error.",
      "Nothing",
      "None of the other."
    ],
    "description": "Choose 1 option",
    "answer": [
      "An error."
    ]
  },
  {
    "question": "If ${snapshot} returns a correct connection to the database, the following statement will display:<sql:query dataSource=\"${snapshot}\" var=\"result\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SELECT * FROM Students;</sql:query><c:forEach var=\"row\" items=\"${result.row}\"> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0<c:out value=\"${row.stuId}\" /></c:forEach",
    "options": [
      "The list of values of stuId in Students table.",
      "An error.",
      "Nothing",
      "None of the other."
    ],
    "description": "Choose 1 option",
    "answer": [
      "An error."
    ]
  },
  {
    "question": "If ${snapshot} returns a correct connection to the database, the following statement will display:<sql:query dataSource=\"${snapshot}\" var=\"result\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SELECT * FROM Students;</sql:query><c:forEach var=\"row\" items=\"${rows}\"> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0<c:out value=\"${row.stuId}\" /></c:forEach",
    "options": [
      "The list of values of stuId in Students table.",
      "An error.",
      "Nothing",
      "None of the other."
    ],
    "description": "Choose 1 option",
    "answer": [
      "An error."
    ]
  },
  {
    "question": "If ${snapshot} returns a correct connection to the database, the following statement will display:<sql:query dataSource=\"${snapshot}\" var=\"result\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SELECT * FROM Students;</sql:query><c:forEach var=\"row\" items=\"${rows}\"> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0<c:out value=\"${row.stuId}\" /></c:forEach",
    "options": [
      "The list of values of stuId in Students table.",
      "An error.",
      "Nothing",
      "None of the other."
    ],
    "description": "Choose 1 option",
    "answer": [
      "An error."
    ]
  },
  {
    "question": "If ${snapshot} returns a correct connection to the database, the following statement will display:<sql:query dataSource=\"${snapshot}\" var=\"result\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SELECT * FROM Students;</sql:query><c:forEach var=\"row123\" items=\"${result.rows}\"> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0<c:out value=\"${row.stuId}\" /></c:forEach",
    "options": [
      "The list of values of stuId in Students table.",
      "An error.",
      "None of the other."
    ],
    "description": "Choose 1 option",
    "answer": [
      "An error."
    ]
  },
  {
    "question": "If ${snapshot} returns a correct connection to the database, the following statement will display:<sql:query dataSource=\"${snapshot}\" var=\"result\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SELECT * FROM Students;</sql:query><c:forEach var=\"row123\" items=\"${result.rows}\"> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0<c:out value=\"${row.stuId}\" /></c:forEach",
    "options": [
      "The list of values of stuId in Students table.",
      "An error.",
      "None of the other."
    ],
    "description": "Choose 1 option",
    "answer": [
      "An error."
    ]
  },
  {
    "question": "Consider the following HTML page code:<html><body><form name=\"data\" action=\"/servlet/DataServlet\" method=\"POST\"><input type=\"text\" name=\"name\"><input type=\"submit\" name=\"submit\"></form></body></html>Identify the TWO methods that can be used to retrieve the value of the name parameter when the form is submitted.",
    "options": [
      "getParameter( \"name\");",
      "getParameterValue( \"name\");",
      "getParameters( \"name\");",
      "getValue( \"name\");"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getParameter( \"name\");"
    ]
  },
  {
    "question": "Consider the following HTML page code:<html><body><form name=\"data\" action=\"/servlet/DataServlet\" method=\"POST\"><input type=\"text\" name=\"name\"><input type=\"submit\" name=\"submit\"></form></body></html>Identify the TWO methods that can be used to retrieve the value of the name parameter when the form is submitted.",
    "options": [
      "getParameter( \"name\");",
      "getParameterValue( \"name\");",
      "getParameters( \"name\");",
      "getValue( \"name\");"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getParameter( \"name\");"
    ]
  },
  {
    "question": "Consider the following code statement: response.sendRedirect( \"/abc/FinalServlet\u201d); Assume that the current context root of application is Final. Which of the following statements about the servlet container translating above code statements to the following URL is true? 1. http://localhost:8080/Final/abc/FinalServlet 2. http://localhost:8080/abc/FinalServlet 3. http://localhost:8080/FinalServlet/abc 4. http://localhost:8080/FinalServlet/abc/Final",
    "options": [
      "2",
      "1",
      "1, 4",
      "2, 3"
    ],
    "description": "Choose 1 option",
    "answer": [
      "2"
    ]
  },
  {
    "question": "Consider the following code statement: response.sendRedirect( \"/abc/FinalServlet\u201d); Assume that the current context root of application is Final. Which of the following statements about the servlet container translating above code statements to the following URL is true? 1. http://localhost:8080/Final/abc/FinalServlet 2. http://localhost:8080/abc/FinalServlet 3. http://localhost:8080/FinalServlet/abc 4. http://localhost:8080/FinalServlet/abc/Final",
    "options": [
      "2",
      "1",
      "1, 4",
      "2, 3"
    ],
    "description": "Choose 1 option",
    "answer": [
      "2"
    ]
  },
  {
    "question": "Which of the following statements about Request and Response message structure are false?",
    "options": [
      "Request line returns the User-Agent along with the Accept header",
      "Request message structure consists of request line and header information",
      "Header information in response message contains information such as server, last modified date, content-length and content type"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Request line returns the User-Agent along with the Accept header"
    ]
  },
  {
    "question": "Which of the following statements about Request and Response message structure are false?",
    "options": [
      "Request line returns the User-Agent along with the Accept header",
      "Request message structure consists of request line and header information",
      "Header information in response message contains information such as server, last modified date, content-length and content type"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Request line returns the User-Agent along with the Accept header"
    ]
  },
  {
    "question": "Which of the following methods of HTTP will send data from clients to servers using security format in the body of the request?",
    "options": [
      "POST",
      "GET",
      "GET and POST",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "POST"
    ]
  },
  {
    "question": "Which of the following methods of HTTP will send data from clients to servers using security format in the body of the request?",
    "options": [
      "POST",
      "GET",
      "GET and POST",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "POST"
    ]
  },
  {
    "question": "Which of the following error code indicates that the HTTP server is temporarily overloaded, and unable to handle the request?",
    "options": [
      "404",
      "503",
      "504",
      "403"
    ],
    "description": "Choose 1 option",
    "answer": [
      "503"
    ]
  },
  {
    "question": "Which of the following error code indicates that the HTTP server is temporarily overloaded, and unable to handle the request?",
    "options": [
      "404",
      "503",
      "504",
      "403"
    ],
    "description": "Choose 1 option",
    "answer": [
      "503"
    ]
  },
  {
    "question": "Which request headers identifies the MIME types that the browser prefers?",
    "options": [
      "Accept",
      "Accept-Charset",
      "Host",
      "Referer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Accept"
    ]
  },
  {
    "question": "Which request headers identifies the MIME types that the browser prefers?",
    "options": [
      "Accept",
      "Accept-Charset",
      "Host",
      "Referer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Accept"
    ]
  },
  {
    "question": "You need to send a GIF file to the browser. Which of the following lines should be \n called after ( or before) a call to response.getOutputStream(  )? ( Select one)",
    "options": [
      "response.setContentType( \"image/gif\"); Before",
      "response.setContentType( \"image/gif\"); After",
      "response.setDataType( \"image/gif\"); Before",
      "response.setDataType( \"image/gif\"); After"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response.setContentType( \"image/gif\"); Before"
    ]
  },
  {
    "question": "You need to send a GIF file to the browser. Which of the following lines should be \n called after ( or before) a call to response.getOutputStream(  )? ( Select one)",
    "options": [
      "response.setContentType( \"image/gif\"); Before",
      "response.setContentType( \"image/gif\"); After",
      "response.setDataType( \"image/gif\"); Before",
      "response.setDataType( \"image/gif\"); After"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response.setContentType( \"image/gif\"); Before"
    ]
  },
  {
    "question": "What would be the best directory in which to store a supporting JAR file for a web application? Note that in the list below, all directories begin from the context root.",
    "options": [
      "/WEB-INF",
      "/WEB-INF/classes",
      "/jars",
      "/WEB-INF/ lib"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF/ lib"
    ]
  },
  {
    "question": "What would be the best directory in which to store a supporting JAR file for a web application? Note that in the list below, all directories begin from the context root.",
    "options": [
      "/WEB-INF",
      "/WEB-INF/classes",
      "/jars",
      "/WEB-INF/ lib"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF/ lib"
    ]
  },
  {
    "question": "The ________ method returns a reference to the ServletContext Object",
    "options": [
      "getServletContext(  )",
      "getInitParameter(  )",
      "service(  )",
      "init(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getServletContext(  )"
    ]
  },
  {
    "question": "The ________ method returns a reference to the ServletContext Object",
    "options": [
      "getServletContext(  )",
      "getInitParameter(  )",
      "service(  )",
      "init(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getServletContext(  )"
    ]
  },
  {
    "question": "Which two actions protect a resource file from direct HTTP access within a web application? ( Choose two)",
    "options": [
      "placing it in the /secure directory",
      "placing it in the /WEB-INF directory",
      "placing it in the /META-INF/secure directory",
      "creating a  element within the deployment descriptor",
      "creating a  element within the deployment descriptor"
    ],
    "description": "Choose all that apply",
    "answer": [
      "placing it in the /WEB-INF directory",
      "placing it in the /META-INF/secure directory"
    ]
  },
  {
    "question": "Which two actions protect a resource file from direct HTTP access within a web application? ( Choose two)",
    "options": [
      "placing it in the /secure directory",
      "placing it in the /WEB-INF directory",
      "placing it in the /META-INF/secure directory",
      "creating a  element within the deployment descriptor",
      "creating a  element within the deployment descriptor"
    ],
    "description": "Choose all that apply",
    "answer": [
      "placing it in the /WEB-INF directory",
      "placing it in the /META-INF/secure directory"
    ]
  },
  {
    "question": "Given that session is a valid HttpSession object: int max = session.getAttribute( \"MyReallyLongName\");  \n Which is true?",
    "options": [
      "Primitives CANNOT be stored in the HttpSession.",
      "The getAttribute method takes two arguments.",
      "The HttpSession attribute name must NOT exceed eight characters.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Primitives CANNOT be stored in the HttpSession."
    ]
  },
  {
    "question": "Given that session is a valid HttpSession object: int max = session.getAttribute( \"MyReallyLongName\");  \n Which is true?",
    "options": [
      "Primitives CANNOT be stored in the HttpSession.",
      "The getAttribute method takes two arguments.",
      "The HttpSession attribute name must NOT exceed eight characters.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Primitives CANNOT be stored in the HttpSession."
    ]
  },
  {
    "question": "Study the following statements:1) A session object\u00a0can be\u00a0accessed by\u00a0all web applications\u00a0in the same server.2) Session object exists longer than the application object.3) The request object lives longer than the session object.The statement ( 1) is ...., ( 2) is .... and ( 3) is .......",
    "options": [
      "None of the others",
      "false, false, true",
      "true, false, false",
      "true, false, true",
      "true, true, true"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "Study the following statements:1) A session object\u00a0can be\u00a0accessed by\u00a0all web applications\u00a0in the same server.2) Session object exists longer than the application object.3) The request object lives longer than the session object.The statement ( 1) is ...., ( 2) is .... and ( 3) is .......",
    "options": [
      "None of the others",
      "false, false, true",
      "true, false, false",
      "true, false, true",
      "true, true, true"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "The ________ method returns an array containing all the Cookie objects the client sent along with the request",
    "options": [
      "getCookies(  )",
      "getHeader(  )",
      "getHeaders(  )",
      "getCookie(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getCookies(  )"
    ]
  },
  {
    "question": "The ________ method returns an array containing all the Cookie objects the client sent along with the request",
    "options": [
      "getCookies(  )",
      "getHeader(  )",
      "getHeaders(  )",
      "getCookie(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getCookies(  )"
    ]
  },
  {
    "question": "Study the statements: 1)URL rewriting may be used when a browser is disabled.  \n 2)In URL encoding the session id is included as part of the URL.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true."
    ]
  },
  {
    "question": "Study the statements: 1)URL rewriting may be used when a browser is disabled.  \n 2)In URL encoding the session id is included as part of the URL.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true."
    ]
  },
  {
    "question": "________ is the process of ensuring that an authenticated party gains access only to the resources it is entitled to.",
    "options": [
      "Authorization",
      "Authentication",
      "Data integrity",
      "Confidentiality"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authorization"
    ]
  },
  {
    "question": "________ is the process of ensuring that an authenticated party gains access only to the resources it is entitled to.",
    "options": [
      "Authorization",
      "Authentication",
      "Data integrity",
      "Confidentiality"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authorization"
    ]
  },
  {
    "question": "Digest authentiction is based on ______",
    "options": [
      "A hash function and encryption",
      "A plaintext and SSL",
      "A decoded password and encrypted username",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A hash function and encryption"
    ]
  },
  {
    "question": "Digest authentiction is based on ______",
    "options": [
      "A hash function and encryption",
      "A plaintext and SSL",
      "A decoded password and encrypted username",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A hash function and encryption"
    ]
  },
  {
    "question": "When using form-based authentication, which action must be used in the login form?",
    "options": [
      "j_securitycheck",
      "jsecurity_check",
      "j_security_check",
      "jsecuritycheck"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_security_check"
    ]
  },
  {
    "question": "When using form-based authentication, which action must be used in the login form?",
    "options": [
      "j_securitycheck",
      "jsecurity_check",
      "j_security_check",
      "jsecuritycheck"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_security_check"
    ]
  },
  {
    "question": "Which of the followings correctly declares that the current page is an error page and also enables it to take part in a session?",
    "options": [
      "<%@ page pageType=\"errorPage\" session=\"required\" %>",
      "<%@ page isErrorPage=\"true\" session=\"mandatory\" %>",
      "<%@ page errorPage=\"true\" session=\"true\" %>",
      "<%@ page isErrorPage=\"true\" session=\"true\" %>",
      "<%@ page errorPage=\"true\" session=\"mandatory\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page isErrorPage=\"true\" session=\"true\" %>"
    ]
  },
  {
    "question": "Which of the followings correctly declares that the current page is an error page and also enables it to take part in a session?",
    "options": [
      "<%@ page pageType=\"errorPage\" session=\"required\" %>",
      "<%@ page isErrorPage=\"true\" session=\"mandatory\" %>",
      "<%@ page errorPage=\"true\" session=\"true\" %>",
      "<%@ page isErrorPage=\"true\" session=\"true\" %>",
      "<%@ page errorPage=\"true\" session=\"mandatory\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page isErrorPage=\"true\" session=\"true\" %>"
    ]
  },
  {
    "question": "Use a _________ to place code in the generated servlet outside of the _jspService(  ) method",
    "options": [
      "scriptlet",
      "comment",
      "declaration",
      "expression"
    ],
    "description": "Choose 1 option",
    "answer": [
      "declaration"
    ]
  },
  {
    "question": "Use a _________ to place code in the generated servlet outside of the _jspService(  ) method",
    "options": [
      "scriptlet",
      "comment",
      "declaration",
      "expression"
    ],
    "description": "Choose 1 option",
    "answer": [
      "declaration"
    ]
  },
  {
    "question": "Which of the following statements about JSP declaration is true?",
    "options": [
      "The users are allowed to define methods in a JSP file",
      "A single declaration tag can be used to define unique variable.",
      "The JSP declarations allows the variable using in application scopes.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The users are allowed to define methods in a JSP file"
    ]
  },
  {
    "question": "Which of the following statements about JSP declaration is true?",
    "options": [
      "The users are allowed to define methods in a JSP file",
      "A single declaration tag can be used to define unique variable.",
      "The JSP declarations allows the variable using in application scopes.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The users are allowed to define methods in a JSP file"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Declarations?",
    "options": [
      "<%! code %>",
      "<% code %>",
      "<%= code %>",
      "None of these"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%! code %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Declarations?",
    "options": [
      "<%! code %>",
      "<% code %>",
      "<%= code %>",
      "None of these"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%! code %>"
    ]
  },
  {
    "question": "A web application allows the HTML title banner to be set using a servlet context initialization parameter called titleStr. Which two properly set the title in this scenario? ( Select two)",
    "options": [
      "<title>${titleStr}</title>",
      "<title>${initParam.titleStr}</title>",
      "<title>${params[0].titleStr}</title>",
      "<title>${paramValues.titleStr}</title>",
      "<title>${initParam['titleStr']}</title>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<title>${initParam.titleStr}</title>",
      "<title>${initParam['titleStr']}</title>"
    ]
  },
  {
    "question": "A web application allows the HTML title banner to be set using a servlet context initialization parameter called titleStr. Which two properly set the title in this scenario? ( Select two)",
    "options": [
      "<title>${titleStr}</title>",
      "<title>${initParam.titleStr}</title>",
      "<title>${params[0].titleStr}</title>",
      "<title>${paramValues.titleStr}</title>",
      "<title>${initParam['titleStr']}</title>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<title>${initParam.titleStr}</title>",
      "<title>${initParam['titleStr']}</title>"
    ]
  },
  {
    "question": "Which of the following statements about the standard actions is false?",
    "options": [
      "JSP standard actions are performed when a browser requests for a JSP page",
      "In standard action, the values in the attributes must be enclosed in double quotes",
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Standard actions take the form of an XML tag with a name suffixed jsp"
    ]
  },
  {
    "question": "Which of the following statements about the standard actions is false?",
    "options": [
      "JSP standard actions are performed when a browser requests for a JSP page",
      "In standard action, the values in the attributes must be enclosed in double quotes",
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Standard actions take the form of an XML tag with a name suffixed jsp"
    ]
  },
  {
    "question": "In JSP, the prefix of a tag .......",
    "options": [
      "is used for distinguishing tags for a library",
      "is used for the symmetric syntax",
      "is used for making easiness in detecting the body of the tag.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "is used for distinguishing tags for a library"
    ]
  },
  {
    "question": "In JSP, the prefix of a tag .......",
    "options": [
      "is used for distinguishing tags for a library",
      "is used for the symmetric syntax",
      "is used for making easiness in detecting the body of the tag.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "is used for distinguishing tags for a library"
    ]
  },
  {
    "question": "Servlet A receives a request that it forwards to servlet B within another web application in the same web container. Servlet A needs to share data with servlet B and that data must not be visible to other servlets in A's web application. In which object can the data that A shares with B be stored?",
    "options": [
      "HttpSession",
      "HttpServletRequest",
      "HttpServletResponse",
      "ServletConfig"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "Servlet A receives a request that it forwards to servlet B within another web application in the same web container. Servlet A needs to share data with servlet B and that data must not be visible to other servlets in A's web application. In which object can the data that A shares with B be stored?",
    "options": [
      "HttpSession",
      "HttpServletRequest",
      "HttpServletResponse",
      "ServletConfig"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "What is true about Java EE authentication mechanisms?",
    "options": [
      "If your deployment descriptor correctly declares an authentication type of CLIENT_CERT, your users must have a certificate from an official source before they can use your application.",
      "If your deployment descriptor correctly declares an authentication type of BASIC, the container automatically requests a user name and password whenever a user starts a new session.",
      "If you want your web application to support the widest possible array of browsers, and you want to perform authentication, the best choice of Java EE authentication mechanisms is DIGEST.",
      "To use Java EE FORM authentication, you must declare two HTML files in your deployment descriptor, and you must use a predefined action in the HTML file that handles your user's login."
    ],
    "description": "Choose 1 option",
    "answer": [
      "To use Java EE FORM authentication, you must declare two HTML files in your deployment descriptor, and you must use a predefined action in the HTML file that handles your user's login."
    ]
  },
  {
    "question": "What is true about Java EE authentication mechanisms?",
    "options": [
      "If your deployment descriptor correctly declares an authentication type of CLIENT_CERT, your users must have a certificate from an official source before they can use your application.",
      "If your deployment descriptor correctly declares an authentication type of BASIC, the container automatically requests a user name and password whenever a user starts a new session.",
      "If you want your web application to support the widest possible array of browsers, and you want to perform authentication, the best choice of Java EE authentication mechanisms is DIGEST.",
      "To use Java EE FORM authentication, you must declare two HTML files in your deployment descriptor, and you must use a predefined action in the HTML file that handles your user's login."
    ],
    "description": "Choose 1 option",
    "answer": [
      "To use Java EE FORM authentication, you must declare two HTML files in your deployment descriptor, and you must use a predefined action in the HTML file that handles your user's login."
    ]
  },
  {
    "question": "Given a header in an HTTP request:\n X-Retries: 4\n Which two retrieve the value of the header from a given HttpServletRequest request? ( Choose two.)",
    "options": [
      "Request.getHeader( \"X-Retries\")",
      "Request.getIntHeader( \"X-Retries\")",
      "Request.getRequestHeader( \"X-Retries\")",
      "Request.getHeaders( \"X-Retries\").get( 0)",
      "Request.getRequestHeaders( \"X-Retries\").get( 0)"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Request.getHeader( \"X-Retries\")",
      "Request.getIntHeader( \"X-Retries\")"
    ]
  },
  {
    "question": "Given a header in an HTTP request:\n X-Retries: 4\n Which two retrieve the value of the header from a given HttpServletRequest request? ( Choose two.)",
    "options": [
      "Request.getHeader( \"X-Retries\")",
      "Request.getIntHeader( \"X-Retries\")",
      "Request.getRequestHeader( \"X-Retries\")",
      "Request.getHeaders( \"X-Retries\").get( 0)",
      "Request.getRequestHeaders( \"X-Retries\").get( 0)"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Request.getHeader( \"X-Retries\")",
      "Request.getIntHeader( \"X-Retries\")"
    ]
  },
  {
    "question": "For debugging purposes, you need to record how many times a given JSP is invoked before the user's session has been created. The JSP's destroy method stores this information to a database. Which JSP code snippet keeps track of this count for the lifetime of the JSP page?",
    "options": [
      "<%! int count = 0; %>\n <% if (  request.getSession( false) == null ) count++; %>",
      "<%@ int count = 0; %>\n <% if (  request.getSession( false) == null ) count++; %>",
      "<% int count = 0;\n if (  request.getSession( false) == null ) count++; %>",
      "<%@ int count = 0;\n if (  request.getSession( false) == null ) count++; %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%! int count = 0; %>\n <% if (  request.getSession( false) == null ) count++; %>"
    ]
  },
  {
    "question": "For debugging purposes, you need to record how many times a given JSP is invoked before the user's session has been created. The JSP's destroy method stores this information to a database. Which JSP code snippet keeps track of this count for the lifetime of the JSP page?",
    "options": [
      "<%! int count = 0; %>\n <% if (  request.getSession( false) == null ) count++; %>",
      "<%@ int count = 0; %>\n <% if (  request.getSession( false) == null ) count++; %>",
      "<% int count = 0;\n if (  request.getSession( false) == null ) count++; %>",
      "<%@ int count = 0;\n if (  request.getSession( false) == null ) count++; %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%! int count = 0; %>\n <% if (  request.getSession( false) == null ) count++; %>"
    ]
  },
  {
    "question": "You have created a servlet that generates weather maps. The data for these maps is calculated by a remote host. The IP address of this host is usually stable, but occasionally does have to change as the corporate network grows and changes. This IP address used to be hard coded, but after the fifth change to the IP address in two years, you have decided that this value should be declared in the deployment descriptor so you do NOT have the recompile the web application every time the IP address changes. \n\n Which deployment descriptor snippet accomplishes this goal?",
    "options": [
      "<serlvet-param>\n <name>WeatherServlet.hostIP</name>\n <value>127.0.4.20</value>\n </servlet-param>",
      "<init-param>\n <name>WeatherServlet.hostIP</name>\n <value>127.0.4.20</value>\n </init-param>",
      "<servlet>\n <!-- servlet definition here -->\n <param-name>WeatherServlet.hostIP</param-name>\n <param-value>127.0.4.20</param-value>\n </servlet>",
      "<init-param>\n <param-name>WeatherServlet.hostIP</param-name>\n <param-value>127.0.4.20</param-value>\n </init-param>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<init-param>\n <param-name>WeatherServlet.hostIP</param-name>\n <param-value>127.0.4.20</param-value>\n </init-param>"
    ]
  },
  {
    "question": "You have created a servlet that generates weather maps. The data for these maps is calculated by a remote host. The IP address of this host is usually stable, but occasionally does have to change as the corporate network grows and changes. This IP address used to be hard coded, but after the fifth change to the IP address in two years, you have decided that this value should be declared in the deployment descriptor so you do NOT have the recompile the web application every time the IP address changes. \n\n Which deployment descriptor snippet accomplishes this goal?",
    "options": [
      "<serlvet-param>\n <name>WeatherServlet.hostIP</name>\n <value>127.0.4.20</value>\n </servlet-param>",
      "<init-param>\n <name>WeatherServlet.hostIP</name>\n <value>127.0.4.20</value>\n </init-param>",
      "<servlet>\n <!-- servlet definition here -->\n <param-name>WeatherServlet.hostIP</param-name>\n <param-value>127.0.4.20</param-value>\n </servlet>",
      "<init-param>\n <param-name>WeatherServlet.hostIP</param-name>\n <param-value>127.0.4.20</param-value>\n </init-param>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<init-param>\n <param-name>WeatherServlet.hostIP</param-name>\n <param-value>127.0.4.20</param-value>\n </init-param>"
    ]
  },
  {
    "question": "Given an HttpServletRequest request and an HttpServletResponse response:\n 41. HttpSession session = null;\n 42. // insert code here\n 43. if( session == null) {\n 44. // do something if session does not exist\n 45. } else {\n 46. // do something if session exists\n 47. }\n To implement the design intent, which statement must be inserted at line 42?",
    "options": [
      "session = response.getSession(  );",
      "session = request.getSession(  );",
      "session = request.getSession( true);",
      "session = request.getSession( false);",
      "session = request.getSession( \"jsessionid\");"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session = request.getSession( false);"
    ]
  },
  {
    "question": "Given an HttpServletRequest request and an HttpServletResponse response:\n 41. HttpSession session = null;\n 42. // insert code here\n 43. if( session == null) {\n 44. // do something if session does not exist\n 45. } else {\n 46. // do something if session exists\n 47. }\n To implement the design intent, which statement must be inserted at line 42?",
    "options": [
      "session = response.getSession(  );",
      "session = request.getSession(  );",
      "session = request.getSession( true);",
      "session = request.getSession( false);",
      "session = request.getSession( \"jsessionid\");"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session = request.getSession( false);"
    ]
  },
  {
    "question": "The JSP developer wants a comment to be visible in the final output to the browser. Which comment style needs to be used in a JSP page?",
    "options": [
      "<!-- this is a comment -->",
      "<% // this is a comment %>",
      "<%-- this is a comment --%>",
      "<% /** this is a comment **/ %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<!-- this is a comment -->"
    ]
  },
  {
    "question": "The JSP developer wants a comment to be visible in the final output to the browser. Which comment style needs to be used in a JSP page?",
    "options": [
      "<!-- this is a comment -->",
      "<% // this is a comment %>",
      "<%-- this is a comment --%>",
      "<% /** this is a comment **/ %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<!-- this is a comment -->"
    ]
  },
  {
    "question": "Which two statements about tag files are true? ( Choose two.)",
    "options": [
      "Classic tag handlers and tag files CANNOT reside in the same tag library.",
      "A file named foo.tag, located in /WEB-INF/tags/bar, is recognized as a tag file by the container.",
      "If files foo1.tag and foo2.tag both reside in /WEB-INF/tags/bar, the container will consider them part of the same tag library.",
      "A file named foo.tag, located in a web application's root directory, is recognized as a tag file by the container."
    ],
    "description": "Choose all that apply",
    "answer": [
      "A file named foo.tag, located in /WEB-INF/tags/bar, is recognized as a tag file by the container.",
      "If files foo1.tag and foo2.tag both reside in /WEB-INF/tags/bar, the container will consider them part of the same tag library."
    ]
  },
  {
    "question": "Which two statements about tag files are true? ( Choose two.)",
    "options": [
      "Classic tag handlers and tag files CANNOT reside in the same tag library.",
      "A file named foo.tag, located in /WEB-INF/tags/bar, is recognized as a tag file by the container.",
      "If files foo1.tag and foo2.tag both reside in /WEB-INF/tags/bar, the container will consider them part of the same tag library.",
      "A file named foo.tag, located in a web application's root directory, is recognized as a tag file by the container."
    ],
    "description": "Choose all that apply",
    "answer": [
      "A file named foo.tag, located in /WEB-INF/tags/bar, is recognized as a tag file by the container.",
      "If files foo1.tag and foo2.tag both reside in /WEB-INF/tags/bar, the container will consider them part of the same tag library."
    ]
  },
  {
    "question": "Which followings is the top interface that allows to create a custom tag handler?",
    "options": [
      "Tag",
      "TagSupport",
      "BodyTagSupport",
      "IterationTag",
      "BodyTag"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Tag"
    ]
  },
  {
    "question": "Which followings is the top interface that allows to create a custom tag handler?",
    "options": [
      "Tag",
      "TagSupport",
      "BodyTagSupport",
      "IterationTag",
      "BodyTag"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Tag"
    ]
  },
  {
    "question": "A developer wants to create a Java Persistence query that returns valid U.S.\n\n phone numbers ( formatted as \"123-456-7890\" or \"800-RUN-EJB3\") from a collection of differently formatted international phone numbers. The developer needs only those numbers that begin with 303.\n\n Which WHERE clause is correct?",
    "options": [
      "WHERE addr.phone LIKE '303_'",
      "WHERE addr.phone LIKE '303%'",
      "WHERE addr.phone LIKE '303-___-____'",
      "WHERE addr.phone LIKE '303-%%%-%%%%'"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WHERE addr.phone LIKE '303-___-____'"
    ]
  },
  {
    "question": "A developer wants to create a Java Persistence query that returns valid U.S.\n\n phone numbers ( formatted as \"123-456-7890\" or \"800-RUN-EJB3\") from a collection of differently formatted international phone numbers. The developer needs only those numbers that begin with 303.\n\n Which WHERE clause is correct?",
    "options": [
      "WHERE addr.phone LIKE '303_'",
      "WHERE addr.phone LIKE '303%'",
      "WHERE addr.phone LIKE '303-___-____'",
      "WHERE addr.phone LIKE '303-%%%-%%%%'"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WHERE addr.phone LIKE '303-___-____'"
    ]
  },
  {
    "question": "Given the following statements about an EJB deployment descriptor for which the metadata-complete attribute is not specified:\n\n I. The EJB deployment descriptor can provide additional metadata to bean class annotations.\n\n II. The EJB deployment descriptor can partially override bean class annotations.\n\n III. The EJB deployment descriptor can entirely override bean class annotations.\n\n Which is true?",
    "options": [
      "Only statement I is correct.",
      "Only statement II is correct.",
      "Only statement III is correct.",
      "Both statements I and II are correct.",
      "Both statements I and III are correct."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both statements I and II are correct."
    ]
  },
  {
    "question": "Given the following statements about an EJB deployment descriptor for which the metadata-complete attribute is not specified:\n\n I. The EJB deployment descriptor can provide additional metadata to bean class annotations.\n\n II. The EJB deployment descriptor can partially override bean class annotations.\n\n III. The EJB deployment descriptor can entirely override bean class annotations.\n\n Which is true?",
    "options": [
      "Only statement I is correct.",
      "Only statement II is correct.",
      "Only statement III is correct.",
      "Both statements I and II are correct.",
      "Both statements I and III are correct."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both statements I and II are correct."
    ]
  },
  {
    "question": "A developer wants to write a stateful session bean using the following interface as local business interface:\n\n 1. package acme;\n 2. public interface Bar {\n 3. public void bar(  );\n 4. }\n\n Assuming there is NOT an ejb-jar.xml file, which code can be inserted into Lines 4-6 below to define the\n bean with the ejb name of BarBean?\n\n 1. package acme;\n 2. import javax.ejb.*;\n 3. import java.io.*;\n 4.\n 5.\n 6.\n 7. }",
    "options": [
      "@Stateful\n public class BarEJB implements Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) {}",
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) throws java.rmi.RemoteException {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}"
    ]
  },
  {
    "question": "A developer wants to write a stateful session bean using the following interface as local business interface:\n\n 1. package acme;\n 2. public interface Bar {\n 3. public void bar(  );\n 4. }\n\n Assuming there is NOT an ejb-jar.xml file, which code can be inserted into Lines 4-6 below to define the\n bean with the ejb name of BarBean?\n\n 1. package acme;\n 2. import javax.ejb.*;\n 3. import java.io.*;\n 4.\n 5.\n 6.\n 7. }",
    "options": [
      "@Stateful\n public class BarEJB implements Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) {}",
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) throws java.rmi.RemoteException {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}"
    ]
  },
  {
    "question": "What executes EJB components ?",
    "options": [
      "A web server.",
      "An EJB container.",
      "An application server.",
      "A Database Server."
    ],
    "description": "Choose 1 option",
    "answer": [
      "An EJB container."
    ]
  },
  {
    "question": "What executes EJB components ?",
    "options": [
      "A web server.",
      "An EJB container.",
      "An application server.",
      "A Database Server."
    ],
    "description": "Choose 1 option",
    "answer": [
      "An EJB container."
    ]
  },
  {
    "question": "What is a benefit of bean pooling in an EJB container?",
    "options": [
      "It reduces the memory allocation and garbage-collection cycles.",
      "It increases the memory allocation and garbage-collection cycles.",
      "It does not need supporting from server",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It reduces the memory allocation and garbage-collection cycles."
    ]
  },
  {
    "question": "What is a benefit of bean pooling in an EJB container?",
    "options": [
      "It reduces the memory allocation and garbage-collection cycles.",
      "It increases the memory allocation and garbage-collection cycles.",
      "It does not need supporting from server",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It reduces the memory allocation and garbage-collection cycles."
    ]
  },
  {
    "question": "When\u00a0are Enterprise Beans used?",
    "options": [
      "The application must be scalable.",
      "Transactions must ensure data integrity.",
      "The application will have a variety of clients.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "When\u00a0are Enterprise Beans used?",
    "options": [
      "The application must be scalable.",
      "Transactions must ensure data integrity.",
      "The application will have a variety of clients.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "The ______________ supplies business components, or enterprise beans.",
    "options": [
      "Bean provider",
      "Application assembler",
      "Tools vendor",
      "Deployer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Bean provider"
    ]
  },
  {
    "question": "The ______________ supplies business components, or enterprise beans.",
    "options": [
      "Bean provider",
      "Application assembler",
      "Tools vendor",
      "Deployer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Bean provider"
    ]
  },
  {
    "question": "Which statement about an EJB container's lifecycle management of session beans is true?",
    "options": [
      "The container can passivate a stateful session bean to free limited resources.",
      "The client is responsible for the object identity for session beans.",
      "The client can passivate a session bean after a specified timeout period.",
      "The container can passivate a stateless session bean to free limited resources."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The container can passivate a stateful session bean to free limited resources."
    ]
  },
  {
    "question": "Which statement about an EJB container's lifecycle management of session beans is true?",
    "options": [
      "The container can passivate a stateful session bean to free limited resources.",
      "The client is responsible for the object identity for session beans.",
      "The client can passivate a session bean after a specified timeout period.",
      "The container can passivate a stateless session bean to free limited resources."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The container can passivate a stateful session bean to free limited resources."
    ]
  },
  {
    "question": "In EJB 2.0, which\u00a0is the legal callback method in the bean class of a stateless session bean?",
    "options": [
      "public void ejbCreate(  ) {}",
      "public void ejbCreate ( int sessionId) {}",
      "public boolean ejbRemove (  ) {return true;}",
      "public void ejbFinalize(  ) {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void ejbCreate(  ) {}"
    ]
  },
  {
    "question": "In EJB 2.0, which\u00a0is the legal callback method in the bean class of a stateless session bean?",
    "options": [
      "public void ejbCreate(  ) {}",
      "public void ejbCreate ( int sessionId) {}",
      "public boolean ejbRemove (  ) {return true;}",
      "public void ejbFinalize(  ) {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void ejbCreate(  ) {}"
    ]
  },
  {
    "question": "Which statement about passivating session beans is true?",
    "options": [
      "The passivated stateful session bean should open the connections in activation that were closed when it was passivated.",
      "The container ensures that the passivated stateless session bean is reassigned to the remote object upon activation.",
      "The passivated stateless session bean should close all connections before being passivated.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The passivated stateful session bean should open the connections in activation that were closed when it was passivated."
    ]
  },
  {
    "question": "Which statement about passivating session beans is true?",
    "options": [
      "The passivated stateful session bean should open the connections in activation that were closed when it was passivated.",
      "The container ensures that the passivated stateless session bean is reassigned to the remote object upon activation.",
      "The passivated stateless session bean should close all connections before being passivated.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The passivated stateful session bean should open the connections in activation that were closed when it was passivated."
    ]
  },
  {
    "question": "In EJB 2.0, From which method can a Bean Provider legally invoke after the ejbCreate method is invoked in successfully?",
    "options": [
      "ejbPostCreate",
      "ejbRemove",
      "ejbCreate",
      "unsetEntityContext"
    ],
    "description": "Choose 1 option",
    "answer": [
      "ejbPostCreate"
    ]
  },
  {
    "question": "In EJB 2.0, From which method can a Bean Provider legally invoke after the ejbCreate method is invoked in successfully?",
    "options": [
      "ejbPostCreate",
      "ejbRemove",
      "ejbCreate",
      "unsetEntityContext"
    ],
    "description": "Choose 1 option",
    "answer": [
      "ejbPostCreate"
    ]
  },
  {
    "question": "Which of these statements about data modeling are NOT true?",
    "options": [
      "A primary key is an optional attribute of an entity",
      "An attribute expresses the state of an entity instance",
      "Each instance of an entity is uniquely identifiable from all other instances of that type of entity",
      "Foreign keys help in forming relationships between entities"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A primary key is an optional attribute of an entity"
    ]
  },
  {
    "question": "Which of these statements about data modeling are NOT true?",
    "options": [
      "A primary key is an optional attribute of an entity",
      "An attribute expresses the state of an entity instance",
      "Each instance of an entity is uniquely identifiable from all other instances of that type of entity",
      "Foreign keys help in forming relationships between entities"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A primary key is an optional attribute of an entity"
    ]
  },
  {
    "question": "What are characteristics of a Message Driven Bean? ( Select one)",
    "options": [
      "They are invoked asynchronously.",
      "They are relatively short-lived.",
      "They are stateless.",
      "All of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the above"
    ]
  },
  {
    "question": "What are characteristics of a Message Driven Bean? ( Select one)",
    "options": [
      "They are invoked asynchronously.",
      "They are relatively short-lived.",
      "They are stateless.",
      "All of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the above"
    ]
  },
  {
    "question": "A ___________ subscription to a topic means that a JMS subscriber receives all messages, even if the subscriber is inactive.",
    "options": [
      "durable",
      "nondurable",
      "permanent",
      "temporary"
    ],
    "description": "Choose 1 option",
    "answer": [
      "durable"
    ]
  },
  {
    "question": "A ___________ subscription to a topic means that a JMS subscriber receives all messages, even if the subscriber is inactive.",
    "options": [
      "durable",
      "nondurable",
      "permanent",
      "temporary"
    ],
    "description": "Choose 1 option",
    "answer": [
      "durable"
    ]
  },
  {
    "question": "What are the possible values of the <destination-type> element for a message driven bean?",
    "options": [
      "javax.jms.Queue",
      "java.jms.Queue",
      "javax.jms.Topic",
      "Both javax.jms.Queue and javax.jms.Topic"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both javax.jms.Queue and javax.jms.Topic"
    ]
  },
  {
    "question": "What are the possible values of the <destination-type> element for a message driven bean?",
    "options": [
      "javax.jms.Queue",
      "java.jms.Queue",
      "javax.jms.Topic",
      "Both javax.jms.Queue and javax.jms.Topic"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both javax.jms.Queue and javax.jms.Topic"
    ]
  },
  {
    "question": "In JMS - Topics are used for implementing the ____________ model.",
    "options": [
      "Publish/Subscribe",
      "Peer to peer",
      "Point to point",
      "Client/server"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Publish/Subscribe"
    ]
  },
  {
    "question": "In JMS - Topics are used for implementing the ____________ model.",
    "options": [
      "Publish/Subscribe",
      "Peer to peer",
      "Point to point",
      "Client/server"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Publish/Subscribe"
    ]
  },
  {
    "question": "With respect to message-driven bean, when the queue receives a message, the EJB container invokes ...",
    "options": [
      "the message listener method, named as onMessage( ,...)",
      "the method ejbCreate( ...) to create a bean instance.",
      "the method init( ...) to initialize a bean instance.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "the message listener method, named as onMessage( ,...)"
    ]
  },
  {
    "question": "With respect to message-driven bean, when the queue receives a message, the EJB container invokes ...",
    "options": [
      "the message listener method, named as onMessage( ,...)",
      "the method ejbCreate( ...) to create a bean instance.",
      "the method init( ...) to initialize a bean instance.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "the message listener method, named as onMessage( ,...)"
    ]
  },
  {
    "question": "You are creating a web form with this HTML:\n 11. <form action=\"sendOrder.jsp\">\n 12. <input type=\"text\" name=\"creditCard\">\n 13. <input type=\"text\" name=\"expirationDate\">\n 14. <input type=\"submit\">\n 15. </form>\n Which HTTP method is used when sending this request from the browser?",
    "options": [
      "GET",
      "PUT",
      "POST",
      "SEND",
      "FORM"
    ],
    "description": "Choose 1 option",
    "answer": [
      "GET"
    ]
  },
  {
    "question": "You are creating a web form with this HTML:\n 11. <form action=\"sendOrder.jsp\">\n 12. <input type=\"text\" name=\"creditCard\">\n 13. <input type=\"text\" name=\"expirationDate\">\n 14. <input type=\"submit\">\n 15. </form>\n Which HTTP method is used when sending this request from the browser?",
    "options": [
      "GET",
      "PUT",
      "POST",
      "SEND",
      "FORM"
    ],
    "description": "Choose 1 option",
    "answer": [
      "GET"
    ]
  },
  {
    "question": "The HttpServletResponse lets you:",
    "options": [
      "specify outgoing information such as HTTP status codes ( 200, 404, etc.)",
      "specify response headers ( Content-Type, Set-Cookie, etc.)",
      "obtain a PrintWriter used to send the document content back to the client.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "The HttpServletResponse lets you:",
    "options": [
      "specify outgoing information such as HTTP status codes ( 200, 404, etc.)",
      "specify response headers ( Content-Type, Set-Cookie, etc.)",
      "obtain a PrintWriter used to send the document content back to the client.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Consider the following declarations: 1. GET http://cms.fpt.edu.vn/index.jsp HTTP/1.1 Accept: image/*, application/vnd.txt Accept-Language: en-cd User-Agent: Mozilla/4.0 ( compatible; MSIE 6.0; Windows NT 4.0) Host: www.fpt.edu.vn 2. HTTP/1.0 404 File Not Found Connection: Close Date: Sat, 07 Aug 2010 08:30:30 GMT Content-Type: text/html Server: J2EE/ 2.0 Which of the following statements is true?",
    "options": [
      "The first fragment text describes the HTTP Response",
      "The second fragment text describes the HTTP Request",
      "The first fragment text describes the HTTP Request",
      "None of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The first fragment text describes the HTTP Request"
    ]
  },
  {
    "question": "Consider the following declarations: 1. GET http://cms.fpt.edu.vn/index.jsp HTTP/1.1 Accept: image/*, application/vnd.txt Accept-Language: en-cd User-Agent: Mozilla/4.0 ( compatible; MSIE 6.0; Windows NT 4.0) Host: www.fpt.edu.vn 2. HTTP/1.0 404 File Not Found Connection: Close Date: Sat, 07 Aug 2010 08:30:30 GMT Content-Type: text/html Server: J2EE/ 2.0 Which of the following statements is true?",
    "options": [
      "The first fragment text describes the HTTP Response",
      "The second fragment text describes the HTTP Request",
      "The first fragment text describes the HTTP Request",
      "None of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The first fragment text describes the HTTP Request"
    ]
  },
  {
    "question": "The ________ method returns the actual length of the request sent by the client",
    "options": [
      "getContentLength(  )",
      "getParameter(  )",
      "getAttribute(  )",
      "getServerName(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getContentLength(  )"
    ]
  },
  {
    "question": "The ________ method returns the actual length of the request sent by the client",
    "options": [
      "getContentLength(  )",
      "getParameter(  )",
      "getAttribute(  )",
      "getServerName(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getContentLength(  )"
    ]
  },
  {
    "question": "Which of the following error code indicates an error inside the HTTP server which prevented it from fulfilling the request?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "500"
    ]
  },
  {
    "question": "Which of the following error code indicates an error inside the HTTP server which prevented it from fulfilling the request?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "500"
    ]
  },
  {
    "question": "Which of the following lines would initialize the out variable for sending a \n Microsoft Word file to the browser? ( Select one)",
    "options": [
      "PrintWriter out = response.getServletOutput(  );",
      "PrintWriter out = response.getPrintWriter(  );",
      "OutputStream out = response.getWriter(  );",
      "OutputStream out = response.getOuputStream(  );"
    ],
    "description": "Choose 1 option",
    "answer": [
      "OutputStream out = response.getOuputStream(  );"
    ]
  },
  {
    "question": "Which of the following lines would initialize the out variable for sending a \n Microsoft Word file to the browser? ( Select one)",
    "options": [
      "PrintWriter out = response.getServletOutput(  );",
      "PrintWriter out = response.getPrintWriter(  );",
      "OutputStream out = response.getWriter(  );",
      "OutputStream out = response.getOuputStream(  );"
    ],
    "description": "Choose 1 option",
    "answer": [
      "OutputStream out = response.getOuputStream(  );"
    ]
  },
  {
    "question": "Your servlet class depends on a utility class named com.abc.TaxUtil. Where would you keep the TaxUtil.class file?",
    "options": [
      "WEB-INF",
      "WEB-INF/classes",
      "WEB-INF/lib",
      "WEB-INF/jars",
      "WEB-INF/classes/com/abc"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF/classes/com/abc"
    ]
  },
  {
    "question": "Your servlet class depends on a utility class named com.abc.TaxUtil. Where would you keep the TaxUtil.class file?",
    "options": [
      "WEB-INF",
      "WEB-INF/classes",
      "WEB-INF/lib",
      "WEB-INF/jars",
      "WEB-INF/classes/com/abc"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF/classes/com/abc"
    ]
  },
  {
    "question": "Study the statements:1)Every web application within a web container has a unique context path. \n 2)The context path and any directories you choose to create within it contain resources that are accessible through HTTP.",
    "options": [
      "Only statement 1 is true",
      "Only statement 2 is true",
      "Both 1 and 2 are true",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true"
    ]
  },
  {
    "question": "Study the statements:1)Every web application within a web container has a unique context path. \n 2)The context path and any directories you choose to create within it contain resources that are accessible through HTTP.",
    "options": [
      "Only statement 1 is true",
      "Only statement 2 is true",
      "Both 1 and 2 are true",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true"
    ]
  },
  {
    "question": "A servlet can contain instance variables but the developer can not\u00a0create the servlet based on its constructors and parameters. A way to assign parameters to\u00a0these variables is ......",
    "options": [
      "getting parameters from the deployment descriptor file.",
      "getting parameters from the request's query string.",
      "getting parameters from the cookies attached in the request.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "A servlet can contain instance variables but the developer can not\u00a0create the servlet based on its constructors and parameters. A way to assign parameters to\u00a0these variables is ......",
    "options": [
      "getting parameters from the deployment descriptor file.",
      "getting parameters from the request's query string.",
      "getting parameters from the cookies attached in the request.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Which of the following methods will erase a session object?",
    "options": [
      "session.invalidate(  );",
      "session.erase(  );",
      "session.destroy(  );",
      "session.end(  );",
      "session.close(  );"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.invalidate(  );"
    ]
  },
  {
    "question": "Which of the following methods will erase a session object?",
    "options": [
      "session.invalidate(  );",
      "session.erase(  );",
      "session.destroy(  );",
      "session.end(  );",
      "session.close(  );"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.invalidate(  );"
    ]
  },
  {
    "question": "A session is begun when servlet code invokes __________",
    "options": [
      "HttpServletRequest.getSession(  ) method",
      "HttpSession.getSession(  ) method",
      "HttpServletResponse.getSession(  ) method",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest.getSession(  ) method"
    ]
  },
  {
    "question": "A session is begun when servlet code invokes __________",
    "options": [
      "HttpServletRequest.getSession(  ) method",
      "HttpSession.getSession(  ) method",
      "HttpServletResponse.getSession(  ) method",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest.getSession(  ) method"
    ]
  },
  {
    "question": "Which of the following statements relating to URL rewriting is incorrect?",
    "options": [
      "URL rewriting technique adds some extrea data at the end of the URL to identify the session",
      "Generally, the extra information appended in the URL rewriting is the unique session ID and tracking can be done by retrieving this session ID",
      "None of the others",
      "Only information after ? is sent to the next page and information before ? is detached"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only information after ? is sent to the next page and information before ? is detached"
    ]
  },
  {
    "question": "Which of the following statements relating to URL rewriting is incorrect?",
    "options": [
      "URL rewriting technique adds some extrea data at the end of the URL to identify the session",
      "Generally, the extra information appended in the URL rewriting is the unique session ID and tracking can be done by retrieving this session ID",
      "None of the others",
      "Only information after ? is sent to the next page and information before ? is detached"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only information after ? is sent to the next page and information before ? is detached"
    ]
  },
  {
    "question": "Which statement is true about web container session management?",
    "options": [
      "Access to session-scoped attributes is guaranteed to be thread-safe by the web container",
      "To activate URL rewriting, the developer must used the HttpServletResponse.setURLRewriting method",
      "If the web application uses HTTPS, then the web container may used the data on the HTTPS request stream to identify the client",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "If the web application uses HTTPS, then the web container may used the data on the HTTPS request stream to identify the client"
    ]
  },
  {
    "question": "Which statement is true about web container session management?",
    "options": [
      "Access to session-scoped attributes is guaranteed to be thread-safe by the web container",
      "To activate URL rewriting, the developer must used the HttpServletResponse.setURLRewriting method",
      "If the web application uses HTTPS, then the web container may used the data on the HTTPS request stream to identify the client",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "If the web application uses HTTPS, then the web container may used the data on the HTTPS request stream to identify the client"
    ]
  },
  {
    "question": "Identify TWO authentication mechanisms that are built into the HTTP specification.",
    "options": [
      "Basic",
      "Digest",
      "Client-Cert",
      "FORM",
      "Client-Digest"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Basic",
      "Digest"
    ]
  },
  {
    "question": "Identify TWO authentication mechanisms that are built into the HTTP specification.",
    "options": [
      "Basic",
      "Digest",
      "Client-Cert",
      "FORM",
      "Client-Digest"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Basic",
      "Digest"
    ]
  },
  {
    "question": "The custom web page for logging in using FORM-based authentication must contain an html Form. The form must contain ________",
    "options": [
      "action attribute must equal j_security_check",
      "method attribute must equal GET",
      "action attribute must equal j_security_check and method attribute must equal POST",
      "None of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "action attribute must equal j_security_check and method attribute must equal POST"
    ]
  },
  {
    "question": "The custom web page for logging in using FORM-based authentication must contain an html Form. The form must contain ________",
    "options": [
      "action attribute must equal j_security_check",
      "method attribute must equal GET",
      "action attribute must equal j_security_check and method attribute must equal POST",
      "None of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "action attribute must equal j_security_check and method attribute must equal POST"
    ]
  },
  {
    "question": "When adding a <login-config> element to a web application deployment descriptor, the inclusion of which sub-element requires the definition of an error page?",
    "options": [
      "<form-login-config>",
      "<realm-name>",
      "<user-data-constaint>",
      "<auth-method>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<form-login-config>"
    ]
  },
  {
    "question": "When adding a <login-config> element to a web application deployment descriptor, the inclusion of which sub-element requires the definition of an error page?",
    "options": [
      "<form-login-config>",
      "<realm-name>",
      "<user-data-constaint>",
      "<auth-method>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<form-login-config>"
    ]
  },
  {
    "question": "Which of the following statements regarding authentication mechanisms are correct? ( Select two)",
    "options": [
      "The HTTP Basic mechanism transmits the username/password \u201cin the open.\u201d",
      "The HTTP Basic mechanism uses HTML FORMs to collect usernames/passwords.",
      "The transmission method in the Basic and FORM mechanisms is the same.",
      "The method of capturing the usernames/passwords in the Basic and FORM mechanisms is the same."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The HTTP Basic mechanism transmits the username/password \u201cin the open.\u201d",
      "The transmission method in the Basic and FORM mechanisms is the same."
    ]
  },
  {
    "question": "Which of the following statements regarding authentication mechanisms are correct? ( Select two)",
    "options": [
      "The HTTP Basic mechanism transmits the username/password \u201cin the open.\u201d",
      "The HTTP Basic mechanism uses HTML FORMs to collect usernames/passwords.",
      "The transmission method in the Basic and FORM mechanisms is the same.",
      "The method of capturing the usernames/passwords in the Basic and FORM mechanisms is the same."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The HTTP Basic mechanism transmits the username/password \u201cin the open.\u201d",
      "The transmission method in the Basic and FORM mechanisms is the same."
    ]
  },
  {
    "question": "Which of the following methods is defined by the JSP engine?",
    "options": [
      "jspInit(  )",
      "_jspService(  )",
      "_jspService( ServletRequest, ServletResponse)",
      "_jspService( HttpServletRequest, HttpServletResponse)",
      "jspDestroy(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "_jspService( HttpServletRequest, HttpServletResponse)"
    ]
  },
  {
    "question": "Which of the following methods is defined by the JSP engine?",
    "options": [
      "jspInit(  )",
      "_jspService(  )",
      "_jspService( ServletRequest, ServletResponse)",
      "_jspService( HttpServletRequest, HttpServletResponse)",
      "jspDestroy(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "_jspService( HttpServletRequest, HttpServletResponse)"
    ]
  },
  {
    "question": "The Java code in scriplet in JSP is inserted into the _____ method of the servlet.",
    "options": [
      "_jspService(  )",
      "service(  )",
      "doGet(  )",
      "doPost(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "_jspService(  )"
    ]
  },
  {
    "question": "The Java code in scriplet in JSP is inserted into the _____ method of the servlet.",
    "options": [
      "_jspService(  )",
      "service(  )",
      "doGet(  )",
      "doPost(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "_jspService(  )"
    ]
  },
  {
    "question": "A JSP page needs to generate an XML file. Which attribute of page directive may be used to specify that the JSP page is generating an XML file.",
    "options": [
      "<%@page contentType =\u201dtext/xml\u201d>",
      "<%@page contentType =\u201dxml\u201d>",
      "<%@page contentType =\u201dtext/html\u201d>",
      "<%@page contentType =\u201dhtml/xml\u201d>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@page contentType =\u201dtext/xml\u201d>"
    ]
  },
  {
    "question": "A JSP page needs to generate an XML file. Which attribute of page directive may be used to specify that the JSP page is generating an XML file.",
    "options": [
      "<%@page contentType =\u201dtext/xml\u201d>",
      "<%@page contentType =\u201dxml\u201d>",
      "<%@page contentType =\u201dtext/html\u201d>",
      "<%@page contentType =\u201dhtml/xml\u201d>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@page contentType =\u201dtext/xml\u201d>"
    ]
  },
  {
    "question": "Which of the following correctly declares that the current page is an error page \n and also enables it to take part in a session? ( Select one)",
    "options": [
      "<%@ page pageType=\"errorPage\" session=\"required\"  %>",
      "<%@ page isErrorPage=\"true\"   session=\"mandatory\" %>",
      "<%@ page errorPage=\"true\"     session=\"true\"      %>",
      "<%@ page isErrorPage=\"true\"   session=\"true\"      %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page isErrorPage=\"true\"   session=\"true\"      %>"
    ]
  },
  {
    "question": "Which of the following correctly declares that the current page is an error page \n and also enables it to take part in a session? ( Select one)",
    "options": [
      "<%@ page pageType=\"errorPage\" session=\"required\"  %>",
      "<%@ page isErrorPage=\"true\"   session=\"mandatory\" %>",
      "<%@ page errorPage=\"true\"     session=\"true\"      %>",
      "<%@ page isErrorPage=\"true\"   session=\"true\"      %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page isErrorPage=\"true\"   session=\"true\"      %>"
    ]
  },
  {
    "question": "Which of the followings is a correct way to pass a parameter equivalent to the query string user=mary at request time to an included component?",
    "options": [
      "<jsp:include page=\"other.jsp\"><jsp:param paramName=\"user\" paramValue=\"mary\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param name=\"mary\" value=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param param=\"user\" value=\"mary\"/></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param user=\"mary\" /></jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>"
    ]
  },
  {
    "question": "Which of the followings is a correct way to pass a parameter equivalent to the query string user=mary at request time to an included component?",
    "options": [
      "<jsp:include page=\"other.jsp\"><jsp:param paramName=\"user\" paramValue=\"mary\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param name=\"mary\" value=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param param=\"user\" value=\"mary\"/></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param user=\"mary\" /></jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>"
    ]
  },
  {
    "question": "Which of the following statements about the JavaBean is true?",
    "options": [
      "The public methods give access to the properties of the bean.",
      "JavaBean component property must only be write-only format.",
      "It is impossible initialise the JavaBeans with arguments using jsp:useBean.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The public methods give access to the properties of the bean."
    ]
  },
  {
    "question": "Which of the following statements about the JavaBean is true?",
    "options": [
      "The public methods give access to the properties of the bean.",
      "JavaBean component property must only be write-only format.",
      "It is impossible initialise the JavaBeans with arguments using jsp:useBean.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The public methods give access to the properties of the bean."
    ]
  },
  {
    "question": "Which of the followings is not a valid setting for the scope attribute of <jsp:useBean> tag?",
    "options": [
      "request",
      "local",
      "session",
      "application"
    ],
    "description": "Choose 1 option",
    "answer": [
      "local"
    ]
  },
  {
    "question": "Which of the followings is not a valid setting for the scope attribute of <jsp:useBean> tag?",
    "options": [
      "request",
      "local",
      "session",
      "application"
    ],
    "description": "Choose 1 option",
    "answer": [
      "local"
    ]
  },
  {
    "question": "What will be the output of the code snippet ${\u201c2\u201d + \u201c2\u201d}?",
    "options": [
      "22",
      "2+2",
      "4",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "4"
    ]
  },
  {
    "question": "What will be the output of the code snippet ${\u201c2\u201d + \u201c2\u201d}?",
    "options": [
      "22",
      "2+2",
      "4",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "4"
    ]
  },
  {
    "question": "The JSP element <%!.....%> will be replaced by the tag .... in the JSP document.",
    "options": [
      "<jsp:declaration> ... </jsp:declaration>",
      "<jsp:variable> ... </jsp:variable>",
      "<jsp:method>></jsp:method>",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:declaration> ... </jsp:declaration>"
    ]
  },
  {
    "question": "The JSP element <%!.....%> will be replaced by the tag .... in the JSP document.",
    "options": [
      "<jsp:declaration> ... </jsp:declaration>",
      "<jsp:variable> ... </jsp:variable>",
      "<jsp:method>></jsp:method>",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:declaration> ... </jsp:declaration>"
    ]
  },
  {
    "question": "A developer for the company web site has been told that users may turn off cookie support in their browsers. What must the developer do to ensure that these customers can still use the web application?",
    "options": [
      "The developer must ensure that every URL is properly encoded using the appropriate URL rewriting APIs.",
      "The developer must provide an alternate mechanism for managing sessions and abandon the HttpSession mechanism entirely.",
      "The developer can ignore this issue. Web containers are required to support automatic URL rewriting when cookies are not supported.",
      "The developer must add the string id= to the end of every URL to ensure that the conversation with the browser can continue."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The developer must ensure that every URL is properly encoded using the appropriate URL rewriting APIs."
    ]
  },
  {
    "question": "A developer for the company web site has been told that users may turn off cookie support in their browsers. What must the developer do to ensure that these customers can still use the web application?",
    "options": [
      "The developer must ensure that every URL is properly encoded using the appropriate URL rewriting APIs.",
      "The developer must provide an alternate mechanism for managing sessions and abandon the HttpSession mechanism entirely.",
      "The developer can ignore this issue. Web containers are required to support automatic URL rewriting when cookies are not supported.",
      "The developer must add the string id= to the end of every URL to ensure that the conversation with the browser can continue."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The developer must ensure that every URL is properly encoded using the appropriate URL rewriting APIs."
    ]
  },
  {
    "question": "Given that www.example.com/SCWCDtestApp is a validly deployed Java EE web application and that all of the JSP files specified in the requests below exist in the locations specified. Which two requests, issued from a browser, will return an HTTP 404 error? ( Choose two.)",
    "options": [
      "www.example.com/SCWCDtestApp/test.jsp",
      "www.example.com/SCWCDtestApp/WEB-INF/test.jsp",
      "www.example.com/SCWCDtestApp/WEB-WAR/test.jsp",
      "www.example.com/SCWCDtestApp/META-INF/test.jsp"
    ],
    "description": "Choose all that apply",
    "answer": [
      "www.example.com/SCWCDtestApp/WEB-INF/test.jsp",
      "www.example.com/SCWCDtestApp/META-INF/test.jsp"
    ]
  },
  {
    "question": "Given that www.example.com/SCWCDtestApp is a validly deployed Java EE web application and that all of the JSP files specified in the requests below exist in the locations specified. Which two requests, issued from a browser, will return an HTTP 404 error? ( Choose two.)",
    "options": [
      "www.example.com/SCWCDtestApp/test.jsp",
      "www.example.com/SCWCDtestApp/WEB-INF/test.jsp",
      "www.example.com/SCWCDtestApp/WEB-WAR/test.jsp",
      "www.example.com/SCWCDtestApp/META-INF/test.jsp"
    ],
    "description": "Choose all that apply",
    "answer": [
      "www.example.com/SCWCDtestApp/WEB-INF/test.jsp",
      "www.example.com/SCWCDtestApp/META-INF/test.jsp"
    ]
  },
  {
    "question": "Which JSP standard action can be used to import content from a resource called foo.jsp?",
    "options": [
      "<jsp:import file='foo.jsp' />",
      "<jsp:include page='foo.jsp' />",
      "<jsp:include file='foo.jsp' />",
      "<jsp:import>foo.jsp</jsp:import>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page='foo.jsp' />"
    ]
  },
  {
    "question": "Which JSP standard action can be used to import content from a resource called foo.jsp?",
    "options": [
      "<jsp:import file='foo.jsp' />",
      "<jsp:include page='foo.jsp' />",
      "<jsp:include file='foo.jsp' />",
      "<jsp:import>foo.jsp</jsp:import>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page='foo.jsp' />"
    ]
  },
  {
    "question": "A session-scoped attribute, product, is stored by a servlet. That servlet then forwards to a JSP page. This attribute holds an instance of the com.example.Product class with a name property of \"The Matrix\" and price property of 39.95. Given the JSP page code snippet:\n 1. <jsp:useBean id='product' class='com.example.Product'>\n 2. <jsp:setProperty name='product' property='price' value='49.95'/>\n 3. </jsp:useBean>\n 4. <%= product.getName(  ) %> costs <%= product.getPrice(  ) %> \n\n What is the response output of this JSP page code snippet?",
    "options": [
      "Default costs 0.0",
      "Default costs 49.95",
      "Default costs 39.95",
      "The Matrix costs 0.0"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Default costs 49.95"
    ]
  },
  {
    "question": "A session-scoped attribute, product, is stored by a servlet. That servlet then forwards to a JSP page. This attribute holds an instance of the com.example.Product class with a name property of \"The Matrix\" and price property of 39.95. Given the JSP page code snippet:\n 1. <jsp:useBean id='product' class='com.example.Product'>\n 2. <jsp:setProperty name='product' property='price' value='49.95'/>\n 3. </jsp:useBean>\n 4. <%= product.getName(  ) %> costs <%= product.getPrice(  ) %> \n\n What is the response output of this JSP page code snippet?",
    "options": [
      "Default costs 0.0",
      "Default costs 49.95",
      "Default costs 39.95",
      "The Matrix costs 0.0"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Default costs 49.95"
    ]
  },
  {
    "question": "Which defines the welcome files in a web application deployment descriptor?",
    "options": [
      "<welcome>\n <welcome-file>/welcome.jsp</welcome-file>\n </welcome>\n <welcome>\n . <welcome-file>/index.html</welcome-file>\n . </welcome>",
      "<welcome-file-list>\n <welcome-file>welcome.jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>",
      "<welcome>\n <welcome-file>welcome.jsp</welcome-file>\n </welcome>\n <welcome>\n <welcome-file>index.html</welcome-file>\n </welcome>",
      "<welcome-file-list>\n <welcome-file>/welcome.jsp</welcome-file>\n <welcome-file>/index.html</welcome-file>\n </welcome-file-list>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<welcome-file-list>\n <welcome-file>welcome.jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>"
    ]
  },
  {
    "question": "Which defines the welcome files in a web application deployment descriptor?",
    "options": [
      "<welcome>\n <welcome-file>/welcome.jsp</welcome-file>\n </welcome>\n <welcome>\n . <welcome-file>/index.html</welcome-file>\n . </welcome>",
      "<welcome-file-list>\n <welcome-file>welcome.jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>",
      "<welcome>\n <welcome-file>welcome.jsp</welcome-file>\n </welcome>\n <welcome>\n <welcome-file>index.html</welcome-file>\n </welcome>",
      "<welcome-file-list>\n <welcome-file>/welcome.jsp</welcome-file>\n <welcome-file>/index.html</welcome-file>\n </welcome-file-list>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<welcome-file-list>\n <welcome-file>welcome.jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>"
    ]
  },
  {
    "question": "Given the JSP code:\n <% request.setAttribute( \"foo\", \"bar\"); %> \n and the Classic tag handler code:\n 5. public int doStartTag(  ) throws JspException {\n 6. // insert code here\n 7. // return int\n 8. }\n Assume there are no other \"foo\" attributes in the web application. Which invocation on the pageContext object, inserted at line 6, assigns \"bar\" to the variable x?",
    "options": [
      "String x = ( String) pageContext.getAttribute( \"foo\");",
      "It is NOT possible to access the pageContext object from within doStartTag.",
      "String x = ( String) pageContext.getRequest(  ).getAttribute( \"foo\");",
      "String x = ( String) pageContext.getAttribute( \"foo\", PageContext.ANY_SCOPE);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "String x = ( String) pageContext.getRequest(  ).getAttribute( \"foo\");"
    ]
  },
  {
    "question": "Given the JSP code:\n <% request.setAttribute( \"foo\", \"bar\"); %> \n and the Classic tag handler code:\n 5. public int doStartTag(  ) throws JspException {\n 6. // insert code here\n 7. // return int\n 8. }\n Assume there are no other \"foo\" attributes in the web application. Which invocation on the pageContext object, inserted at line 6, assigns \"bar\" to the variable x?",
    "options": [
      "String x = ( String) pageContext.getAttribute( \"foo\");",
      "It is NOT possible to access the pageContext object from within doStartTag.",
      "String x = ( String) pageContext.getRequest(  ).getAttribute( \"foo\");",
      "String x = ( String) pageContext.getAttribute( \"foo\", PageContext.ANY_SCOPE);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "String x = ( String) pageContext.getRequest(  ).getAttribute( \"foo\");"
    ]
  },
  {
    "question": "Which implicit object is used in a JSP page to retrieve values associated with  entries in the deployment descriptor?",
    "options": [
      "Config",
      "Request",
      "Session",
      "Application"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Application"
    ]
  },
  {
    "question": "Which implicit object is used in a JSP page to retrieve values associated with  entries in the deployment descriptor?",
    "options": [
      "Config",
      "Request",
      "Session",
      "Application"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Application"
    ]
  },
  {
    "question": "Which two options can be used to predefine Java Persistence queries for easy use? ( Choose two.)",
    "options": [
      "@NamedQuery annotation",
      "@NamedNativeQuery annotation",
      "using the named-query element in the XML descriptor",
      "using the named-native-query element in the XML descriptor"
    ],
    "description": "Choose all that apply",
    "answer": [
      "@NamedQuery annotation",
      "using the named-query element in the XML descriptor"
    ]
  },
  {
    "question": "Which two options can be used to predefine Java Persistence queries for easy use? ( Choose two.)",
    "options": [
      "@NamedQuery annotation",
      "@NamedNativeQuery annotation",
      "using the named-query element in the XML descriptor",
      "using the named-native-query element in the XML descriptor"
    ],
    "description": "Choose all that apply",
    "answer": [
      "@NamedQuery annotation",
      "using the named-query element in the XML descriptor"
    ]
  },
  {
    "question": "A developer is working on a project that includes both EJB 2.1 and EJB 3.0 session beans. A lot of business logic has been implemented and tested in these EJB 2.1 session beans.\n\n Some EJB 3.0 session beans need to access this business logic.\n\n Which design approach can achieve this requirement?",
    "options": [
      "Add adapted home interfaces to EJB 3.0 session beans to make EJB 3.0 and EJB 2.1 session beans interoperable.",
      "Add EJB 3.0 business interfaces to existing EJB 2.1 session beans and inject references to these business interfaces into EJB 3.0 session beans.",
      "No need to modify existing EJB 2.1 session beans. Use the @EJB annotation to inject a reference to the EJB\n 2.1 home interface into the EJB 3.0 bean class.",
      "No need to modify existing EJB 2.1 session beans. Use the @EJB annotation to inject a reference to the EJB\n 2.1 component interface into the EJB 3.0 bean class."
    ],
    "description": "Choose 1 option",
    "answer": [
      "No need to modify existing EJB 2.1 session beans. Use the @EJB annotation to inject a reference to the EJB\n 2.1 home interface into the EJB 3.0 bean class."
    ]
  },
  {
    "question": "A developer is working on a project that includes both EJB 2.1 and EJB 3.0 session beans. A lot of business logic has been implemented and tested in these EJB 2.1 session beans.\n\n Some EJB 3.0 session beans need to access this business logic.\n\n Which design approach can achieve this requirement?",
    "options": [
      "Add adapted home interfaces to EJB 3.0 session beans to make EJB 3.0 and EJB 2.1 session beans interoperable.",
      "Add EJB 3.0 business interfaces to existing EJB 2.1 session beans and inject references to these business interfaces into EJB 3.0 session beans.",
      "No need to modify existing EJB 2.1 session beans. Use the @EJB annotation to inject a reference to the EJB\n 2.1 home interface into the EJB 3.0 bean class.",
      "No need to modify existing EJB 2.1 session beans. Use the @EJB annotation to inject a reference to the EJB\n 2.1 component interface into the EJB 3.0 bean class."
    ],
    "description": "Choose 1 option",
    "answer": [
      "No need to modify existing EJB 2.1 session beans. Use the @EJB annotation to inject a reference to the EJB\n 2.1 home interface into the EJB 3.0 bean class."
    ]
  },
  {
    "question": "Given:\n\n 5. public interface MrB1 {\n 6. public interface MrB2 {\n\n A java class is defined as:\n\n 11. @Stateless\n 12. public class MrBean implements MrB1,MrB2 {\n\n Which two statements are correct for making this code work as a stateless session bean, considering that this session bean is NOT defined in a deployment descriptor and the interfaces do NOT have annotations? ( Choose two.)",
    "options": [
      "Only the inteface for remote usage must be annotated.",
      "The interfaces MrB1 and MrB2 can only be used locally without changing the code.",
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ],
    "description": "Choose all that apply",
    "answer": [
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ]
  },
  {
    "question": "Given:\n\n 5. public interface MrB1 {\n 6. public interface MrB2 {\n\n A java class is defined as:\n\n 11. @Stateless\n 12. public class MrBean implements MrB1,MrB2 {\n\n Which two statements are correct for making this code work as a stateless session bean, considering that this session bean is NOT defined in a deployment descriptor and the interfaces do NOT have annotations? ( Choose two.)",
    "options": [
      "Only the inteface for remote usage must be annotated.",
      "The interfaces MrB1 and MrB2 can only be used locally without changing the code.",
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ],
    "description": "Choose all that apply",
    "answer": [
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ]
  },
  {
    "question": "The ejb-jar file format is a contract between which two EJB role pairs? ( Choose two.)",
    "options": [
      "Deployer and System Administrator",
      "Application Assembler and Deployer",
      "Bean Provider and Application Assembler",
      "Bean Provider and EJB Container Provider",
      "EJB Server Provider and EJB Container Provider"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Application Assembler and Deployer",
      "Bean Provider and Application Assembler"
    ]
  },
  {
    "question": "The ejb-jar file format is a contract between which two EJB role pairs? ( Choose two.)",
    "options": [
      "Deployer and System Administrator",
      "Application Assembler and Deployer",
      "Bean Provider and Application Assembler",
      "Bean Provider and EJB Container Provider",
      "EJB Server Provider and EJB Container Provider"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Application Assembler and Deployer",
      "Bean Provider and Application Assembler"
    ]
  },
  {
    "question": "Choose the statement that best describes how to connect JSP pages and Enterprise JavaBeans ( EJBs).",
    "options": [
      "Lookup the EJBs from within a JSP, but use the EJBs from within a basic JavaBean.",
      "Lookup and use the EJBs from a separate business delegate. The JavaBeans that work with JSP pages are clients to these business.",
      "Lookup the EJBs from within a servlet, delegating usage to specific JSP pages.",
      "Lookup and use the EJBs from within a JSP page, but only as remote references."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Lookup the EJBs from within a servlet, delegating usage to specific JSP pages."
    ]
  },
  {
    "question": "Choose the statement that best describes how to connect JSP pages and Enterprise JavaBeans ( EJBs).",
    "options": [
      "Lookup the EJBs from within a JSP, but use the EJBs from within a basic JavaBean.",
      "Lookup and use the EJBs from a separate business delegate. The JavaBeans that work with JSP pages are clients to these business.",
      "Lookup the EJBs from within a servlet, delegating usage to specific JSP pages.",
      "Lookup and use the EJBs from within a JSP page, but only as remote references."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Lookup the EJBs from within a servlet, delegating usage to specific JSP pages."
    ]
  },
  {
    "question": "The ________interface is a Java interface that enumerates the business methods exposes by the enterprise bean class.",
    "options": [
      "remote",
      "home",
      "local home",
      "bean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "remote"
    ]
  },
  {
    "question": "The ________interface is a Java interface that enumerates the business methods exposes by the enterprise bean class.",
    "options": [
      "remote",
      "home",
      "local home",
      "bean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "remote"
    ]
  },
  {
    "question": "An  enterprise bean  is a\u00a0... component that encapsulates the\u00a0.... of an application.",
    "options": [
      "server-side, business logic",
      "client-side, business logic",
      "server-side, presentation",
      "client-side, presentation"
    ],
    "description": "Choose 1 option",
    "answer": [
      "server-side, business logic"
    ]
  },
  {
    "question": "An  enterprise bean  is a\u00a0... component that encapsulates the\u00a0.... of an application.",
    "options": [
      "server-side, business logic",
      "client-side, business logic",
      "server-side, presentation",
      "client-side, presentation"
    ],
    "description": "Choose 1 option",
    "answer": [
      "server-side, business logic"
    ]
  },
  {
    "question": "Which is NOT the players in the EJB Ecosystem?",
    "options": [
      "Bean Provider",
      "EJB Deployer",
      "System Administrator",
      "Application Assembler",
      "End User"
    ],
    "description": "Choose 1 option",
    "answer": [
      "End User"
    ]
  },
  {
    "question": "Which is NOT the players in the EJB Ecosystem?",
    "options": [
      "Bean Provider",
      "EJB Deployer",
      "System Administrator",
      "Application Assembler",
      "End User"
    ],
    "description": "Choose 1 option",
    "answer": [
      "End User"
    ]
  },
  {
    "question": "_______ is the process that will\u00a0create a copy of an object suitable for passing to another object.",
    "options": [
      "Reflection",
      "Passivation",
      "Activation",
      "Serialization"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Serialization"
    ]
  },
  {
    "question": "_______ is the process that will\u00a0create a copy of an object suitable for passing to another object.",
    "options": [
      "Reflection",
      "Passivation",
      "Activation",
      "Serialization"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Serialization"
    ]
  },
  {
    "question": "If the bean needs to hold information about the client across method invocations then .... should be used. ( select the best option)",
    "options": [
      "stateful session bean",
      "stateless session bean",
      "session bean",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "stateful session bean"
    ]
  },
  {
    "question": "If the bean needs to hold information about the client across method invocations then .... should be used. ( select the best option)",
    "options": [
      "stateful session bean",
      "stateless session bean",
      "session bean",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "stateful session bean"
    ]
  },
  {
    "question": "Which statement about primary keys and object identity is false?",
    "options": [
      "The Bean Provider can retrieve the primary key by using the findByPrimaryKey method",
      "Multiple entity beans can use the same primary key class.",
      "If two entity objects have the same home and the same primary key, they are considered identical.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The Bean Provider can retrieve the primary key by using the findByPrimaryKey method"
    ]
  },
  {
    "question": "Which statement about primary keys and object identity is false?",
    "options": [
      "The Bean Provider can retrieve the primary key by using the findByPrimaryKey method",
      "Multiple entity beans can use the same primary key class.",
      "If two entity objects have the same home and the same primary key, they are considered identical.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The Bean Provider can retrieve the primary key by using the findByPrimaryKey method"
    ]
  },
  {
    "question": "The ________class makes every entity bean different.",
    "options": [
      "bean key",
      "primary key",
      "key",
      "bean ID"
    ],
    "description": "Choose 1 option",
    "answer": [
      "primary key"
    ]
  },
  {
    "question": "The ________class makes every entity bean different.",
    "options": [
      "bean key",
      "primary key",
      "key",
      "bean ID"
    ],
    "description": "Choose 1 option",
    "answer": [
      "primary key"
    ]
  },
  {
    "question": "What is NOT true about Entity beans? ( Select one)",
    "options": [
      "Entity beans can survive a system crash",
      "Entity beans are not pooled",
      "Entity beans cannot be stateless",
      "Entity beans are transactional"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Entity beans are not pooled"
    ]
  },
  {
    "question": "What is NOT true about Entity beans? ( Select one)",
    "options": [
      "Entity beans can survive a system crash",
      "Entity beans are not pooled",
      "Entity beans cannot be stateless",
      "Entity beans are transactional"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Entity beans are not pooled"
    ]
  },
  {
    "question": "Message Driven Beans ( MDBs) can be directly accessed by internal or external clients.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "Message Driven Beans ( MDBs) can be directly accessed by internal or external clients.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "For sending messages between two or more clients, the Java Message Service( JMS) APIs use a Java's __________",
    "options": [
      "Message Open Middleware( MOM)",
      "Multimedia Oriented Middleware( MOM)",
      "Message Oriented Middleware( MOM)",
      "Message Oriented Software( MOS)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Message Oriented Middleware( MOM)"
    ]
  },
  {
    "question": "For sending messages between two or more clients, the Java Message Service( JMS) APIs use a Java's __________",
    "options": [
      "Message Open Middleware( MOM)",
      "Multimedia Oriented Middleware( MOM)",
      "Message Oriented Middleware( MOM)",
      "Message Oriented Software( MOS)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Message Oriented Middleware( MOM)"
    ]
  },
  {
    "question": "Which statements about JMS are true?",
    "options": [
      "JMS enhances access to email services.",
      "JMS uses JMX to create a connectionFactory.",
      "JMS uses JNDI to find the destination.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "JMS uses JNDI to find the destination."
    ]
  },
  {
    "question": "Which statements about JMS are true?",
    "options": [
      "JMS enhances access to email services.",
      "JMS uses JMX to create a connectionFactory.",
      "JMS uses JNDI to find the destination.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "JMS uses JNDI to find the destination."
    ]
  },
  {
    "question": "With respect to\u00a0a message-driven beans, study the following statement.( 1) They do not represent directly shared data in the database, but they can access and update this data.( 2) They can be transaction-aware and they are stateless.The statement ( 1) is ....\u00a0 and ( 2) is ........",
    "options": [
      "true, true",
      "true, false",
      "false, true",
      "false, false"
    ],
    "description": "Choose 1 option",
    "answer": [
      "true, true"
    ]
  },
  {
    "question": "With respect to\u00a0a message-driven beans, study the following statement.( 1) They do not represent directly shared data in the database, but they can access and update this data.( 2) They can be transaction-aware and they are stateless.The statement ( 1) is ....\u00a0 and ( 2) is ........",
    "options": [
      "true, true",
      "true, false",
      "false, true",
      "false, false"
    ],
    "description": "Choose 1 option",
    "answer": [
      "true, true"
    ]
  },
  {
    "question": "Consider the following declarations: 1. GET http://cms.fpt.edu.vn/index.jsp HTTP/1.1 Accept: image/*, application/vnd.txt Accept-Language: en-cd User-Agent: Mozilla/4.0 ( compatible; MSIE 6.0; Windows NT 4.0) Host: www.fpt.edu.vn 2. HTTP/1.0 404 File Not Found Connection: Close Date: Sat, 07 Aug 2010 08:30:30 GMT Content-Type: text/html Server: J2EE/ 2.0 Which of the following statements is true?",
    "options": [
      "The first fragment text describes the HTTP Response",
      "The second fragment text describes the HTTP Request",
      "The first fragment text describes the HTTP Request",
      "None of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The first fragment text describes the HTTP Request"
    ]
  },
  {
    "question": "Consider the following declarations: 1. GET http://cms.fpt.edu.vn/index.jsp HTTP/1.1 Accept: image/*, application/vnd.txt Accept-Language: en-cd User-Agent: Mozilla/4.0 ( compatible; MSIE 6.0; Windows NT 4.0) Host: www.fpt.edu.vn 2. HTTP/1.0 404 File Not Found Connection: Close Date: Sat, 07 Aug 2010 08:30:30 GMT Content-Type: text/html Server: J2EE/ 2.0 Which of the following statements is true?",
    "options": [
      "The first fragment text describes the HTTP Response",
      "The second fragment text describes the HTTP Request",
      "The first fragment text describes the HTTP Request",
      "None of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The first fragment text describes the HTTP Request"
    ]
  },
  {
    "question": "The ________ method returns the actual length of the request sent by the client",
    "options": [
      "getContentLength(  )",
      "getParameter(  )",
      "getAttribute(  )",
      "getServerName(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getContentLength(  )"
    ]
  },
  {
    "question": "The ________ method returns the actual length of the request sent by the client",
    "options": [
      "getContentLength(  )",
      "getParameter(  )",
      "getAttribute(  )",
      "getServerName(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getContentLength(  )"
    ]
  },
  {
    "question": "Which of the following error code indicates an error inside the HTTP server which prevented it from fulfilling the request?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "500"
    ]
  },
  {
    "question": "Which of the following error code indicates an error inside the HTTP server which prevented it from fulfilling the request?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "500"
    ]
  },
  {
    "question": "When a Web server responds to a request from a browser or other Web client, the response typically consists of: ( choose one)",
    "options": [
      "a status line, some response headers, a blank line, and the document.",
      "a status line, a blank line, and the document.",
      "a blank line, a status line, some response headers and the document.",
      "a status line, some response headers,  and the document."
    ],
    "description": "Choose 1 option",
    "answer": [
      "a status line, some response headers, a blank line, and the document."
    ]
  },
  {
    "question": "When a Web server responds to a request from a browser or other Web client, the response typically consists of: ( choose one)",
    "options": [
      "a status line, some response headers, a blank line, and the document.",
      "a status line, a blank line, and the document.",
      "a blank line, a status line, some response headers and the document.",
      "a status line, some response headers,  and the document."
    ],
    "description": "Choose 1 option",
    "answer": [
      "a status line, some response headers, a blank line, and the document."
    ]
  },
  {
    "question": "Consider the following HTML page code:\n   <html><body>\n   <a href=\"/servlet/HelloServlet\">POST</a>\n   </body></html>\n Which method of HelloServlet will be invoked when the hyperlink displayed\n by the above page is clicked? ( Select one)",
    "options": [
      "doGet",
      "doPost",
      "doForm",
      "doHref"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doGet"
    ]
  },
  {
    "question": "Consider the following HTML page code:\n   <html><body>\n   <a href=\"/servlet/HelloServlet\">POST</a>\n   </body></html>\n Which method of HelloServlet will be invoked when the hyperlink displayed\n by the above page is clicked? ( Select one)",
    "options": [
      "doGet",
      "doPost",
      "doForm",
      "doHref"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doGet"
    ]
  },
  {
    "question": "Your servlet class depends on a utility class named com.abc.TaxUtil. Where would you keep the TaxUtil.class file?",
    "options": [
      "WEB-INF",
      "WEB-INF/classes",
      "WEB-INF/lib",
      "WEB-INF/jars",
      "WEB-INF/classes/com/abc"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF/classes/com/abc"
    ]
  },
  {
    "question": "Your servlet class depends on a utility class named com.abc.TaxUtil. Where would you keep the TaxUtil.class file?",
    "options": [
      "WEB-INF",
      "WEB-INF/classes",
      "WEB-INF/lib",
      "WEB-INF/jars",
      "WEB-INF/classes/com/abc"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF/classes/com/abc"
    ]
  },
  {
    "question": "Which of the following directories are legal locations for the deployment descriptor file? Note that all paths are shown as from the root of the machine or drive.",
    "options": [
      "/WEB-INF/xml",
      "/WEB-INF",
      "/WEB-INF/classes",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF"
    ]
  },
  {
    "question": "Which of the following directories are legal locations for the deployment descriptor file? Note that all paths are shown as from the root of the machine or drive.",
    "options": [
      "/WEB-INF/xml",
      "/WEB-INF",
      "/WEB-INF/classes",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF"
    ]
  },
  {
    "question": "In request dispatcher, both ______ and _______ methods are used for servlet communication",
    "options": [
      "include/ forward",
      "forward/ sendRedirect",
      "include/ sendRedirect",
      "forward/ response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "include/ forward"
    ]
  },
  {
    "question": "In request dispatcher, both ______ and _______ methods are used for servlet communication",
    "options": [
      "include/ forward",
      "forward/ sendRedirect",
      "include/ sendRedirect",
      "forward/ response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "include/ forward"
    ]
  },
  {
    "question": "A ________has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number.",
    "options": [
      "cookie",
      "session",
      "request",
      "response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "cookie"
    ]
  },
  {
    "question": "A ________has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number.",
    "options": [
      "cookie",
      "session",
      "request",
      "response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "cookie"
    ]
  },
  {
    "question": "Which defines the welcome files in a web application deployment descriptor?",
    "options": [
      "<we1come-file-list>\n <welcome-file> welcome .jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>",
      "<welcome>\n <welcome- file >/ welcome - jsp</welcome-file>\n </welcome>\n <welcome>\n <welcome-file>/index-html</welcome-file>\n </welcome>",
      "<we1come-file-list>\n <welcome-file> welcome .jsp</welcome-file>\n <welcome-file>/index.html</welcome-file>\n </welcome-file-list>",
      "<welcome>\n <welcome-file>welcome.jsp</welcome </we1come >\n </welcome >\n <welcome-file>index.html<//welcome-file>\n </we1come >"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<we1come-file-list>\n <welcome-file> welcome .jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>"
    ]
  },
  {
    "question": "Which defines the welcome files in a web application deployment descriptor?",
    "options": [
      "<we1come-file-list>\n <welcome-file> welcome .jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>",
      "<welcome>\n <welcome- file >/ welcome - jsp</welcome-file>\n </welcome>\n <welcome>\n <welcome-file>/index-html</welcome-file>\n </welcome>",
      "<we1come-file-list>\n <welcome-file> welcome .jsp</welcome-file>\n <welcome-file>/index.html</welcome-file>\n </welcome-file-list>",
      "<welcome>\n <welcome-file>welcome.jsp</welcome </we1come >\n </welcome >\n <welcome-file>index.html<//welcome-file>\n </we1come >"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<we1come-file-list>\n <welcome-file> welcome .jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>"
    ]
  },
  {
    "question": "Which of the following code snippets, when inserted in the doGet(  ) method, \n will correctly count the number of GET requests made by a user? ( Select one)",
    "options": [
      "HttpSession session = request.getSession(  );\n int count = session.getAttribute( \"count\");\n session.setAttribute( \"count\", count++);",
      "HttpSession session = request.getSession(  );\n int count = ( int) session.getAttribute( \"count\");\n session.setAttribute( \"count\", count++)",
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", count++);",
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", new Integer( count++));"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", new Integer( count++));"
    ]
  },
  {
    "question": "Which of the following code snippets, when inserted in the doGet(  ) method, \n will correctly count the number of GET requests made by a user? ( Select one)",
    "options": [
      "HttpSession session = request.getSession(  );\n int count = session.getAttribute( \"count\");\n session.setAttribute( \"count\", count++);",
      "HttpSession session = request.getSession(  );\n int count = ( int) session.getAttribute( \"count\");\n session.setAttribute( \"count\", count++)",
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", count++);",
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", new Integer( count++));"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", new Integer( count++));"
    ]
  },
  {
    "question": "Study the following statements:1) A session object\u00a0can be\u00a0accessed by\u00a0all web applications\u00a0in the same server.2) Session object exists longer than the application object.3) The request object lives longer than the session object.The statement ( 1) is ...., ( 2) is .... and ( 3) is .......",
    "options": [
      "None of the others",
      "false, false, true",
      "true, false, false",
      "true, false, true",
      "true, true, true"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "Study the following statements:1) A session object\u00a0can be\u00a0accessed by\u00a0all web applications\u00a0in the same server.2) Session object exists longer than the application object.3) The request object lives longer than the session object.The statement ( 1) is ...., ( 2) is .... and ( 3) is .......",
    "options": [
      "None of the others",
      "false, false, true",
      "true, false, false",
      "true, false, true",
      "true, true, true"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "Which of the following statements relating to URL rewriting is incorrect?",
    "options": [
      "URL rewriting technique adds some extrea data at the end of the URL to identify the session",
      "Generally, the extra information appended in the URL rewriting is the unique session ID and tracking can be done by retrieving this session ID",
      "None of the others",
      "Only information after ? is sent to the next page and information before ? is detached"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only information after ? is sent to the next page and information before ? is detached"
    ]
  },
  {
    "question": "Which of the following statements relating to URL rewriting is incorrect?",
    "options": [
      "URL rewriting technique adds some extrea data at the end of the URL to identify the session",
      "Generally, the extra information appended in the URL rewriting is the unique session ID and tracking can be done by retrieving this session ID",
      "None of the others",
      "Only information after ? is sent to the next page and information before ? is detached"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only information after ? is sent to the next page and information before ? is detached"
    ]
  },
  {
    "question": "Which of the following statements about the ServletContext is true ?",
    "options": [
      "All of the others",
      "The ServletContext API is used to set the information common to all servlets in an application",
      "Servlets running in the same server sometimes share resources",
      "The attributes of ServletContext class can be used to share information among a group of servlets"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which of the following statements about the ServletContext is true ?",
    "options": [
      "All of the others",
      "The ServletContext API is used to set the information common to all servlets in an application",
      "Servlets running in the same server sometimes share resources",
      "The attributes of ServletContext class can be used to share information among a group of servlets"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Study the statements: 1)URL rewriting may be used when a browser is disabled.  \n 2)In URL encoding the session id is included as part of the URL.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true."
    ]
  },
  {
    "question": "Study the statements: 1)URL rewriting may be used when a browser is disabled.  \n 2)In URL encoding the session id is included as part of the URL.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true."
    ]
  },
  {
    "question": "________ is the process of ensuring that an authenticated party gains access only to the resources it is entitled to.",
    "options": [
      "Authorization",
      "Authentication",
      "Data integrity",
      "Confidentiality"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authorization"
    ]
  },
  {
    "question": "________ is the process of ensuring that an authenticated party gains access only to the resources it is entitled to.",
    "options": [
      "Authorization",
      "Authentication",
      "Data integrity",
      "Confidentiality"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authorization"
    ]
  },
  {
    "question": "When using form-based authentication, which action must be used in the login form?",
    "options": [
      "j_securitycheck",
      "jsecurity_check",
      "j_security_check",
      "jsecuritycheck"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_security_check"
    ]
  },
  {
    "question": "When using form-based authentication, which action must be used in the login form?",
    "options": [
      "j_securitycheck",
      "jsecurity_check",
      "j_security_check",
      "jsecuritycheck"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_security_check"
    ]
  },
  {
    "question": "Which of the following tags can you use to print the value of an expression to the \n output stream? ( Select two)",
    "options": [
      "<%@    %>",
      "<%!    %>",
      "<%     %>",
      "<%=    %>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<%     %>",
      "<%=    %>"
    ]
  },
  {
    "question": "Which of the following tags can you use to print the value of an expression to the \n output stream? ( Select two)",
    "options": [
      "<%@    %>",
      "<%!    %>",
      "<%     %>",
      "<%=    %>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<%     %>",
      "<%=    %>"
    ]
  },
  {
    "question": "Consider the following code and select the correct statement about it from the \n options below. \n   <html><body> \n      <%! int aNum=5 %> \n      The value of aNum is <%= aNum %> \n   </body></html>",
    "options": [
      "It will print \"The value of aNum is 5\" to the output.",
      "It will flag a compile-time error because of an incorrect declaration.",
      "It will throw a runtime exception while executing the expression.",
      "It will not flag any compile time or runtime errors and will not print anything to the\n output."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It will flag a compile-time error because of an incorrect declaration."
    ]
  },
  {
    "question": "Consider the following code and select the correct statement about it from the \n options below. \n   <html><body> \n      <%! int aNum=5 %> \n      The value of aNum is <%= aNum %> \n   </body></html>",
    "options": [
      "It will print \"The value of aNum is 5\" to the output.",
      "It will flag a compile-time error because of an incorrect declaration.",
      "It will throw a runtime exception while executing the expression.",
      "It will not flag any compile time or runtime errors and will not print anything to the\n output."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It will flag a compile-time error because of an incorrect declaration."
    ]
  },
  {
    "question": "A JSP page needs to generate an XML file. Which attribute of page directive may be used to specify that the JSP page is generating an XML file.",
    "options": [
      "<%@page contentType =\u201dtext/xml\u201d>",
      "<%@page contentType =\u201dxml\u201d>",
      "<%@page contentType =\u201dtext/html\u201d>",
      "<%@page contentType =\u201dhtml/xml\u201d>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@page contentType =\u201dtext/xml\u201d>"
    ]
  },
  {
    "question": "A JSP page needs to generate an XML file. Which attribute of page directive may be used to specify that the JSP page is generating an XML file.",
    "options": [
      "<%@page contentType =\u201dtext/xml\u201d>",
      "<%@page contentType =\u201dxml\u201d>",
      "<%@page contentType =\u201dtext/html\u201d>",
      "<%@page contentType =\u201dhtml/xml\u201d>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@page contentType =\u201dtext/xml\u201d>"
    ]
  },
  {
    "question": "JSP __________ let you insert arbitrary code into the servlet\u2019s _jspService method ( which is called by service).",
    "options": [
      "scriptlets",
      "declarations",
      "expressions",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "scriptlets"
    ]
  },
  {
    "question": "JSP __________ let you insert arbitrary code into the servlet\u2019s _jspService method ( which is called by service).",
    "options": [
      "scriptlets",
      "declarations",
      "expressions",
      "All of others",
      "None of others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "scriptlets"
    ]
  },
  {
    "question": "Which of the following constitute valid ways of importing Java classes into JSP page source?",
    "options": [
      "<%! import java.util.*; %>",
      "<%@ import java.util.* %>",
      "<%@ page import=\"java.util.*\" %>",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page import=\"java.util.*\" %>"
    ]
  },
  {
    "question": "Which of the following constitute valid ways of importing Java classes into JSP page source?",
    "options": [
      "<%! import java.util.*; %>",
      "<%@ import java.util.* %>",
      "<%@ page import=\"java.util.*\" %>",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page import=\"java.util.*\" %>"
    ]
  },
  {
    "question": "The empty operator in EL language returns true value for ______",
    "options": [
      "null, empty Strings, empty arrays, and empty collections",
      "Only null value",
      "Only empty Strings because the null value in EL is converted to empty String",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "null, empty Strings, empty arrays, and empty collections"
    ]
  },
  {
    "question": "The empty operator in EL language returns true value for ______",
    "options": [
      "null, empty Strings, empty arrays, and empty collections",
      "Only null value",
      "Only empty Strings because the null value in EL is converted to empty String",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "null, empty Strings, empty arrays, and empty collections"
    ]
  },
  {
    "question": "Which of the following statements about the standard actions is false?",
    "options": [
      "JSP standard actions are performed when a browser requests for a JSP page",
      "In standard action, the values in the attributes must be enclosed in double quotes",
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Standard actions take the form of an XML tag with a name suffixed jsp"
    ]
  },
  {
    "question": "Which of the following statements about the standard actions is false?",
    "options": [
      "JSP standard actions are performed when a browser requests for a JSP page",
      "In standard action, the values in the attributes must be enclosed in double quotes",
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Standard actions take the form of an XML tag with a name suffixed jsp"
    ]
  },
  {
    "question": "What will be the output of the code snippet ${\u201c2\u201d + \u201c2\u201d}?",
    "options": [
      "None of the others",
      "4",
      "22",
      "2+2"
    ],
    "description": "Choose 1 option",
    "answer": [
      "4"
    ]
  },
  {
    "question": "What will be the output of the code snippet ${\u201c2\u201d + \u201c2\u201d}?",
    "options": [
      "None of the others",
      "4",
      "22",
      "2+2"
    ],
    "description": "Choose 1 option",
    "answer": [
      "4"
    ]
  },
  {
    "question": "Consider the contents of three JSP files:\n File 1: one.jsp \n     <html><body><pre> \n        <jsp:include page=\"two.jsp\" > \n           <jsp:param name=\"color\" value=\"red\" /> \n        </jsp:include> \n     </pre></body></html> \n File 2: two.jsp \n     <jsp:include page=\"three.jsp\" > \n        <jsp:param name=\"color\" value=\"green\" /> \n     </jsp:include> \n File 3: three.jsp \n    <%= request.getParameter( \"color\")  %> \n What will be the output of accessing the one.jsp file via the following URL? \n\n http://localhost:8080/chapter12/one.jsp?color=blue",
    "options": [
      "red",
      "green",
      "blue",
      "The answer cannot be determined."
    ],
    "description": "Choose 1 option",
    "answer": [
      "green"
    ]
  },
  {
    "question": "Consider the contents of three JSP files:\n File 1: one.jsp \n     <html><body><pre> \n        <jsp:include page=\"two.jsp\" > \n           <jsp:param name=\"color\" value=\"red\" /> \n        </jsp:include> \n     </pre></body></html> \n File 2: two.jsp \n     <jsp:include page=\"three.jsp\" > \n        <jsp:param name=\"color\" value=\"green\" /> \n     </jsp:include> \n File 3: three.jsp \n    <%= request.getParameter( \"color\")  %> \n What will be the output of accessing the one.jsp file via the following URL? \n\n http://localhost:8080/chapter12/one.jsp?color=blue",
    "options": [
      "red",
      "green",
      "blue",
      "The answer cannot be determined."
    ],
    "description": "Choose 1 option",
    "answer": [
      "green"
    ]
  },
  {
    "question": "Which three are true about TLD files? ( Choose three.)",
    "options": [
      "The web container recognizes TLD files placed in any subdirectory of WEB-INF.",
      "When deployed inside a JAR file, TLD files must be in the META-INF directory, or a subdirectory of it.",
      "A tag handler's attribute must be included in the TLD file only if the attribute can accept request-time expressions.",
      "The web container can automatically extend the tag library map described in a web.xml file by including entries extracted from the web application's TLD files."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The web container recognizes TLD files placed in any subdirectory of WEB-INF.",
      "When deployed inside a JAR file, TLD files must be in the META-INF directory, or a subdirectory of it.",
      "The web container can automatically extend the tag library map described in a web.xml file by including entries extracted from the web application's TLD files."
    ]
  },
  {
    "question": "Which three are true about TLD files? ( Choose three.)",
    "options": [
      "The web container recognizes TLD files placed in any subdirectory of WEB-INF.",
      "When deployed inside a JAR file, TLD files must be in the META-INF directory, or a subdirectory of it.",
      "A tag handler's attribute must be included in the TLD file only if the attribute can accept request-time expressions.",
      "The web container can automatically extend the tag library map described in a web.xml file by including entries extracted from the web application's TLD files."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The web container recognizes TLD files placed in any subdirectory of WEB-INF.",
      "When deployed inside a JAR file, TLD files must be in the META-INF directory, or a subdirectory of it.",
      "The web container can automatically extend the tag library map described in a web.xml file by including entries extracted from the web application's TLD files."
    ]
  },
  {
    "question": "You need to retrieve the username cookie from an HTTP request. If this cookie does NOT exist, then the c variable will be null. Which code snippet must be used to retrieve this cookie object?",
    "options": [
      "10. Cookie c = request.getCookie( \"username\");",
      "10. Cookie c = null;\n 11. for (  Iterator i = request.getCookies(  );\n 12. i.hasNext(  ); ) {\n 13. Cookie o = ( Cookie) i.next(  );\n 14. if (  o.getName(  ).equals( \"username\") ) {\n 15. c = o;\n 16. break;\n 17. }\n 18. }",
      "10. Cookie c = null;\n 11. for (  Enumeration e = request.getCookies(  );\n 12. e.hasMoreElements(  ); ) {\n 13. Cookie o = ( Cookie) e.nextElement(  );\n 14. if (  o.getName(  ).equals( \"username\") ) {\n 15. c = o;\n 16. break;\n 17. }\n 18. }",
      "10. Cookie c = null;\n 11. Cookie[] cookies = request.getCookies(  );\n 12. for (  int i = 0; i < cookies.length; i++ ) {\n 13. if (  cookies[i].getName(  ).equals( \"username\") ) {\n 14. c = cookies[i];\n 15. break;\n 16. }\n 17. }"
    ],
    "description": "Choose 1 option",
    "answer": [
      "10. Cookie c = null;\n 11. Cookie[] cookies = request.getCookies(  );\n 12. for (  int i = 0; i < cookies.length; i++ ) {\n 13. if (  cookies[i].getName(  ).equals( \"username\") ) {\n 14. c = cookies[i];\n 15. break;\n 16. }\n 17. }"
    ]
  },
  {
    "question": "You need to retrieve the username cookie from an HTTP request. If this cookie does NOT exist, then the c variable will be null. Which code snippet must be used to retrieve this cookie object?",
    "options": [
      "10. Cookie c = request.getCookie( \"username\");",
      "10. Cookie c = null;\n 11. for (  Iterator i = request.getCookies(  );\n 12. i.hasNext(  ); ) {\n 13. Cookie o = ( Cookie) i.next(  );\n 14. if (  o.getName(  ).equals( \"username\") ) {\n 15. c = o;\n 16. break;\n 17. }\n 18. }",
      "10. Cookie c = null;\n 11. for (  Enumeration e = request.getCookies(  );\n 12. e.hasMoreElements(  ); ) {\n 13. Cookie o = ( Cookie) e.nextElement(  );\n 14. if (  o.getName(  ).equals( \"username\") ) {\n 15. c = o;\n 16. break;\n 17. }\n 18. }",
      "10. Cookie c = null;\n 11. Cookie[] cookies = request.getCookies(  );\n 12. for (  int i = 0; i < cookies.length; i++ ) {\n 13. if (  cookies[i].getName(  ).equals( \"username\") ) {\n 14. c = cookies[i];\n 15. break;\n 16. }\n 17. }"
    ],
    "description": "Choose 1 option",
    "answer": [
      "10. Cookie c = null;\n 11. Cookie[] cookies = request.getCookies(  );\n 12. for (  int i = 0; i < cookies.length; i++ ) {\n 13. if (  cookies[i].getName(  ).equals( \"username\") ) {\n 14. c = cookies[i];\n 15. break;\n 16. }\n 17. }"
    ]
  },
  {
    "question": "Given:\n 6. <myTag:foo bar='42'>\n 7. <%=\"processing\" %>\n 8. </myTag:foo> and a custom tag handler for foo which extends TagSupport. Which two are true about the tag handler referenced by foo? ( Choose two.)",
    "options": [
      "The doStartTag method is called once.",
      "The doAfterBody method is NOT called.",
      "The EVAL_PAGE constant is a valid return value for the doEndTag method.",
      "The SKIP_PAGE constant is a valid return value for the doStartTag method.",
      "The EVAL_BODY_BUFFERED constant is a valid return value for the doStartTag method."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The doStartTag method is called once.",
      "The EVAL_PAGE constant is a valid return value for the doEndTag method."
    ]
  },
  {
    "question": "Given:\n 6. <myTag:foo bar='42'>\n 7. <%=\"processing\" %>\n 8. </myTag:foo> and a custom tag handler for foo which extends TagSupport. Which two are true about the tag handler referenced by foo? ( Choose two.)",
    "options": [
      "The doStartTag method is called once.",
      "The doAfterBody method is NOT called.",
      "The EVAL_PAGE constant is a valid return value for the doEndTag method.",
      "The SKIP_PAGE constant is a valid return value for the doStartTag method.",
      "The EVAL_BODY_BUFFERED constant is a valid return value for the doStartTag method."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The doStartTag method is called once.",
      "The EVAL_PAGE constant is a valid return value for the doEndTag method."
    ]
  },
  {
    "question": "Which implicit object is used in a JSP page to retrieve values associated with  entries in the deployment descriptor?",
    "options": [
      "Config",
      "Request",
      "Session",
      "Application"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Application"
    ]
  },
  {
    "question": "Which implicit object is used in a JSP page to retrieve values associated with  entries in the deployment descriptor?",
    "options": [
      "Config",
      "Request",
      "Session",
      "Application"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Application"
    ]
  },
  {
    "question": "Which followings is the top interface that allows to create a custom tag handler?",
    "options": [
      "Tag",
      "TagSupport",
      "BodyTagSupport",
      "IterationTag",
      "BodyTag"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Tag"
    ]
  },
  {
    "question": "Which followings is the top interface that allows to create a custom tag handler?",
    "options": [
      "Tag",
      "TagSupport",
      "BodyTagSupport",
      "IterationTag",
      "BodyTag"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Tag"
    ]
  },
  {
    "question": "Which of the following cases are better suited to synchronous messaging? ( choose two)",
    "options": [
      "Electronic mail",
      "Credit card authorization",
      "Electronic processing of tax returns",
      "Validation of data entered"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Credit card authorization",
      "Validation of data entered"
    ]
  },
  {
    "question": "Which of the following cases are better suited to synchronous messaging? ( choose two)",
    "options": [
      "Electronic mail",
      "Credit card authorization",
      "Electronic processing of tax returns",
      "Validation of data entered"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Credit card authorization",
      "Validation of data entered"
    ]
  },
  {
    "question": "Which of the following would not be used in a client application performing point-to-point messaging?",
    "options": [
      "Topic",
      "InitialContext",
      "Queue",
      "Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Topic"
    ]
  },
  {
    "question": "Which of the following would not be used in a client application performing point-to-point messaging?",
    "options": [
      "Topic",
      "InitialContext",
      "Queue",
      "Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Topic"
    ]
  },
  {
    "question": "Which statement is not true when contrasting the use of entity beans and JDBC for database operations?",
    "options": [
      "Entity beans represent real data in a database.",
      "The bean managed entity bean functionally replaces the JDBC API.",
      "The container-managed entity bean automatically retrieves the data from the persistent storage ( database).",
      "When using JDBC, you must explicitly handle the database transaction and the database connection pooling."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The bean managed entity bean functionally replaces the JDBC API."
    ]
  },
  {
    "question": "Which statement is not true when contrasting the use of entity beans and JDBC for database operations?",
    "options": [
      "Entity beans represent real data in a database.",
      "The bean managed entity bean functionally replaces the JDBC API.",
      "The container-managed entity bean automatically retrieves the data from the persistent storage ( database).",
      "When using JDBC, you must explicitly handle the database transaction and the database connection pooling."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The bean managed entity bean functionally replaces the JDBC API."
    ]
  },
  {
    "question": "Which of the following is not true about Enterprise JavaBeans ( prior to EJB 3.0) objects?",
    "options": [
      "The home interface is responsible for locating or creating instances of the desired bean and returning remote references.",
      "The remote interface, or the EJBObject interface, typically provides method signatures for business methods.",
      "The bean implements either the EntityBean interface or the SessionBean interface but need not implement all the methods defined in the remote interface.",
      "The bean must implement one ejbCreate(  ) method for each create(  ) method in the home interface."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The bean implements either the EntityBean interface or the SessionBean interface but need not implement all the methods defined in the remote interface."
    ]
  },
  {
    "question": "Which of the following is not true about Enterprise JavaBeans ( prior to EJB 3.0) objects?",
    "options": [
      "The home interface is responsible for locating or creating instances of the desired bean and returning remote references.",
      "The remote interface, or the EJBObject interface, typically provides method signatures for business methods.",
      "The bean implements either the EntityBean interface or the SessionBean interface but need not implement all the methods defined in the remote interface.",
      "The bean must implement one ejbCreate(  ) method for each create(  ) method in the home interface."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The bean implements either the EntityBean interface or the SessionBean interface but need not implement all the methods defined in the remote interface."
    ]
  },
  {
    "question": "A developer is working on a project that includes both EJB 2.1 and EJB 3.0 session beans. A lot of business logic has been implemented and tested in these EJB 2.1 session beans.\n\n Some EJB 3.0 session beans need to access this business logic.\n\n Which design approach can achieve this requirement?",
    "options": [
      "Add adapted home interfaces to EJB 3.0 session beans to make EJB 3.0 and EJB 2.1 session beans interoperable.",
      "Add EJB 3.0 business interfaces to existing EJB 2.1 session beans and inject references to these business interfaces into EJB 3.0 session beans.",
      "No need to modify existing EJB 2.1 session beans. Use the @EJB annotation to inject a reference to the EJB\n 2.1 home interface into the EJB 3.0 bean class.",
      "No need to modify existing EJB 2.1 session beans. Use the @EJB annotation to inject a reference to the EJB\n 2.1 component interface into the EJB 3.0 bean class."
    ],
    "description": "Choose 1 option",
    "answer": [
      "No need to modify existing EJB 2.1 session beans. Use the @EJB annotation to inject a reference to the EJB\n 2.1 home interface into the EJB 3.0 bean class."
    ]
  },
  {
    "question": "A developer is working on a project that includes both EJB 2.1 and EJB 3.0 session beans. A lot of business logic has been implemented and tested in these EJB 2.1 session beans.\n\n Some EJB 3.0 session beans need to access this business logic.\n\n Which design approach can achieve this requirement?",
    "options": [
      "Add adapted home interfaces to EJB 3.0 session beans to make EJB 3.0 and EJB 2.1 session beans interoperable.",
      "Add EJB 3.0 business interfaces to existing EJB 2.1 session beans and inject references to these business interfaces into EJB 3.0 session beans.",
      "No need to modify existing EJB 2.1 session beans. Use the @EJB annotation to inject a reference to the EJB\n 2.1 home interface into the EJB 3.0 bean class.",
      "No need to modify existing EJB 2.1 session beans. Use the @EJB annotation to inject a reference to the EJB\n 2.1 component interface into the EJB 3.0 bean class."
    ],
    "description": "Choose 1 option",
    "answer": [
      "No need to modify existing EJB 2.1 session beans. Use the @EJB annotation to inject a reference to the EJB\n 2.1 home interface into the EJB 3.0 bean class."
    ]
  },
  {
    "question": "Which is NOT the players in the EJB Ecosystem?",
    "options": [
      "Bean Provider",
      "EJB Deployer",
      "System Administrator",
      "Application Assembler",
      "End User"
    ],
    "description": "Choose 1 option",
    "answer": [
      "End User"
    ]
  },
  {
    "question": "Which is NOT the players in the EJB Ecosystem?",
    "options": [
      "Bean Provider",
      "EJB Deployer",
      "System Administrator",
      "Application Assembler",
      "End User"
    ],
    "description": "Choose 1 option",
    "answer": [
      "End User"
    ]
  },
  {
    "question": "The ______________ supplies business components, or enterprise beans.",
    "options": [
      "Bean provider",
      "Application assembler",
      "Tools vendor",
      "Deployer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Bean provider"
    ]
  },
  {
    "question": "The ______________ supplies business components, or enterprise beans.",
    "options": [
      "Bean provider",
      "Application assembler",
      "Tools vendor",
      "Deployer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Bean provider"
    ]
  },
  {
    "question": "Which statement about passivating session beans is true?",
    "options": [
      "The passivated stateful session bean should open the connections in activation that were closed when it was passivated.",
      "The container ensures that the passivated stateless session bean is reassigned to the remote object upon activation.",
      "The passivated stateless session bean should close all connections before being passivated.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The passivated stateful session bean should open the connections in activation that were closed when it was passivated."
    ]
  },
  {
    "question": "Which statement about passivating session beans is true?",
    "options": [
      "The passivated stateful session bean should open the connections in activation that were closed when it was passivated.",
      "The container ensures that the passivated stateless session bean is reassigned to the remote object upon activation.",
      "The passivated stateless session bean should close all connections before being passivated.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The passivated stateful session bean should open the connections in activation that were closed when it was passivated."
    ]
  },
  {
    "question": "In EJB 2.0, ejb-jar.xml deployment descriptor file must be placed in ___________ folder.",
    "options": [
      "META-INF",
      "WEB-INF",
      "meta-inf",
      "web-inf"
    ],
    "description": "Choose 1 option",
    "answer": [
      "META-INF"
    ]
  },
  {
    "question": "In EJB 2.0, ejb-jar.xml deployment descriptor file must be placed in ___________ folder.",
    "options": [
      "META-INF",
      "WEB-INF",
      "meta-inf",
      "web-inf"
    ],
    "description": "Choose 1 option",
    "answer": [
      "META-INF"
    ]
  },
  {
    "question": "What do you need to create a EJB3 session bean? ( Select three)",
    "options": [
      "Declare a business interface and annotate it with @Local or @Remote",
      "Write the session bean class itself that implements the business logic",
      "Annotate the session bean with @Session",
      "Annotate the session bean with @Stateful or @Stateless"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Declare a business interface and annotate it with @Local or @Remote",
      "Write the session bean class itself that implements the business logic",
      "Annotate the session bean with @Stateful or @Stateless"
    ]
  },
  {
    "question": "What do you need to create a EJB3 session bean? ( Select three)",
    "options": [
      "Declare a business interface and annotate it with @Local or @Remote",
      "Write the session bean class itself that implements the business logic",
      "Annotate the session bean with @Session",
      "Annotate the session bean with @Stateful or @Stateless"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Declare a business interface and annotate it with @Local or @Remote",
      "Write the session bean class itself that implements the business logic",
      "Annotate the session bean with @Stateful or @Stateless"
    ]
  },
  {
    "question": "A developer wants to write a stateful session bean using the following interface as local business interface:\n\n 1. package acme;\n 2. public interface Bar {\n 3. public void bar(  );\n 4. }\n\n Assuming there is NOT an ejb-jar.xml file, which code can be inserted into Lines 4-6 below to define the\n bean with the ejb name of BarBean?\n\n 1. package acme;\n 2. import javax.ejb.*;\n 3. import java.io.*;\n 4.\n 5.\n 6.\n 7. }",
    "options": [
      "@Stateful\n public class BarEJB implements Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) {}",
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) throws java.rmi.RemoteException {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}"
    ]
  },
  {
    "question": "A developer wants to write a stateful session bean using the following interface as local business interface:\n\n 1. package acme;\n 2. public interface Bar {\n 3. public void bar(  );\n 4. }\n\n Assuming there is NOT an ejb-jar.xml file, which code can be inserted into Lines 4-6 below to define the\n bean with the ejb name of BarBean?\n\n 1. package acme;\n 2. import javax.ejb.*;\n 3. import java.io.*;\n 4.\n 5.\n 6.\n 7. }",
    "options": [
      "@Stateful\n public class BarEJB implements Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) {}",
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) throws java.rmi.RemoteException {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}"
    ]
  },
  {
    "question": "Your client has a severe performance problem in a heavily loaded EJB application as a consequence the system doesn't scale up properly in the peak traffic period during the Xmas shopping rush days. So he hired you to hunt for the possible performance bottle nicks and come up with possible solutions. The application is deployed as one EAR in one JVM and the data base is running on a separate machine. The session beans are only accessed by the web application deployed in the same EAR file. ( Select one)",
    "options": [
      "Change all local session beans to remote session beans",
      "Change all remote session beans to local session beans.",
      "Use JMS to transfer user request between the web layer and the session beans",
      "Use web services to transfer user request between the web layer and the session beans"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Change all remote session beans to local session beans."
    ]
  },
  {
    "question": "Your client has a severe performance problem in a heavily loaded EJB application as a consequence the system doesn't scale up properly in the peak traffic period during the Xmas shopping rush days. So he hired you to hunt for the possible performance bottle nicks and come up with possible solutions. The application is deployed as one EAR in one JVM and the data base is running on a separate machine. The session beans are only accessed by the web application deployed in the same EAR file. ( Select one)",
    "options": [
      "Change all local session beans to remote session beans",
      "Change all remote session beans to local session beans.",
      "Use JMS to transfer user request between the web layer and the session beans",
      "Use web services to transfer user request between the web layer and the session beans"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Change all remote session beans to local session beans."
    ]
  },
  {
    "question": "Which statement is true about pooling entity beans?",
    "options": [
      "Pooling entity beans can increase reliability.",
      "Pooling entity beans can increase scalability.",
      "Pooling entity beans can increase extensibility.",
      "Pooling entity beans have no effect on scalability or reliability."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Pooling entity beans can increase scalability."
    ]
  },
  {
    "question": "Which statement is true about pooling entity beans?",
    "options": [
      "Pooling entity beans can increase reliability.",
      "Pooling entity beans can increase scalability.",
      "Pooling entity beans can increase extensibility.",
      "Pooling entity beans have no effect on scalability or reliability."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Pooling entity beans can increase scalability."
    ]
  },
  {
    "question": "Which statement about primary keys and object identity is false?",
    "options": [
      "The Bean Provider can retrieve the primary key by using the findByPrimaryKey method",
      "Multiple entity beans can use the same primary key class.",
      "If two entity objects have the same home and the same primary key, they are considered identical.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The Bean Provider can retrieve the primary key by using the findByPrimaryKey method"
    ]
  },
  {
    "question": "Which statement about primary keys and object identity is false?",
    "options": [
      "The Bean Provider can retrieve the primary key by using the findByPrimaryKey method",
      "Multiple entity beans can use the same primary key class.",
      "If two entity objects have the same home and the same primary key, they are considered identical.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The Bean Provider can retrieve the primary key by using the findByPrimaryKey method"
    ]
  },
  {
    "question": "Select the correct statements about EJB query language.",
    "options": [
      "The EJB-QL operator for the logical \u201cAND\u201d is AND",
      "The EJB-QL operator for the logical \u201cOR\u201d is ||",
      "The SELECT, FROM, and WHERE clauses can be written in any order",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The EJB-QL operator for the logical \u201cAND\u201d is AND"
    ]
  },
  {
    "question": "Select the correct statements about EJB query language.",
    "options": [
      "The EJB-QL operator for the logical \u201cAND\u201d is AND",
      "The EJB-QL operator for the logical \u201cOR\u201d is ||",
      "The SELECT, FROM, and WHERE clauses can be written in any order",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The EJB-QL operator for the logical \u201cAND\u201d is AND"
    ]
  },
  {
    "question": "For sending messages between two or more clients, the Java Message Service( JMS) APIs use a Java's __________",
    "options": [
      "Message Open Middleware( MOM)",
      "Multimedia Oriented Middleware( MOM)",
      "Message Oriented Middleware( MOM)",
      "Message Oriented Software( MOS)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Message Oriented Middleware( MOM)"
    ]
  },
  {
    "question": "For sending messages between two or more clients, the Java Message Service( JMS) APIs use a Java's __________",
    "options": [
      "Message Open Middleware( MOM)",
      "Multimedia Oriented Middleware( MOM)",
      "Message Oriented Middleware( MOM)",
      "Message Oriented Software( MOS)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Message Oriented Middleware( MOM)"
    ]
  },
  {
    "question": "Which of the following statements about the JavaBean is true?",
    "options": [
      "The public methods give access to the properties of the bean.",
      "JavaBean component property must only be write-only format.",
      "It is impossible initialise the JavaBeans with arguments using jsp:useBean.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The public methods give access to the properties of the bean."
    ]
  },
  {
    "question": "Which of the following statements about the JavaBean is true?",
    "options": [
      "The public methods give access to the properties of the bean.",
      "JavaBean component property must only be write-only format.",
      "It is impossible initialise the JavaBeans with arguments using jsp:useBean.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The public methods give access to the properties of the bean."
    ]
  },
  {
    "question": "Which of the following statements about the standard actions is true?",
    "options": [
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "JSP uses standard actions for calling the JavaBean methods.",
      "The attributes in standard action can not distinguish between uppercase and lowercase.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSP uses standard actions for calling the JavaBean methods."
    ]
  },
  {
    "question": "Which of the following statements about the standard actions is true?",
    "options": [
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "JSP uses standard actions for calling the JavaBean methods.",
      "The attributes in standard action can not distinguish between uppercase and lowercase.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSP uses standard actions for calling the JavaBean methods."
    ]
  },
  {
    "question": "Which two about WAR files are true? ( Choose two.)",
    "options": [
      "WAR files must be located in the web application library directory.",
      "WAR files must contain the web application deployment descriptor.",
      "WAR files must be created by using archive tools designed specifically for that purpose.",
      "The web container must allow access to resources in JARs in the web application library directory.",
      "The web container must serve the content of any META-INF directory located in a WAR file."
    ],
    "description": "Choose all that apply",
    "answer": [
      "WAR files must contain the web application deployment descriptor.",
      "The web container must allow access to resources in JARs in the web application library directory."
    ]
  },
  {
    "question": "Which two about WAR files are true? ( Choose two.)",
    "options": [
      "WAR files must be located in the web application library directory.",
      "WAR files must contain the web application deployment descriptor.",
      "WAR files must be created by using archive tools designed specifically for that purpose.",
      "The web container must allow access to resources in JARs in the web application library directory.",
      "The web container must serve the content of any META-INF directory located in a WAR file."
    ],
    "description": "Choose all that apply",
    "answer": [
      "WAR files must contain the web application deployment descriptor.",
      "The web container must allow access to resources in JARs in the web application library directory."
    ]
  },
  {
    "question": "Which method in the HttpServlet class services the HTTP POST request?",
    "options": [
      "doPost( HttpServletRequest, HttpServletResponse)",
      "doPOST( HttpServletRequest, HttpServletResponse)",
      "doPost( ServletRequest, ServletResponse)",
      "doPOST( ServletRequest, ServletResponse)",
      "servicePost( HttpServletRequest, HttpServletResponse)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doPost( HttpServletRequest, HttpServletResponse)"
    ]
  },
  {
    "question": "Which method in the HttpServlet class services the HTTP POST request?",
    "options": [
      "doPost( HttpServletRequest, HttpServletResponse)",
      "doPOST( HttpServletRequest, HttpServletResponse)",
      "doPost( ServletRequest, ServletResponse)",
      "doPOST( ServletRequest, ServletResponse)",
      "servicePost( HttpServletRequest, HttpServletResponse)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doPost( HttpServletRequest, HttpServletResponse)"
    ]
  },
  {
    "question": "The HttpServletRequest has methods by which you can find out about incoming information such as:",
    "options": [
      "Form data",
      "HTTP request headers",
      "The client\u2019s hostname",
      "Cookies",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "The HttpServletRequest has methods by which you can find out about incoming information such as:",
    "options": [
      "Form data",
      "HTTP request headers",
      "The client\u2019s hostname",
      "Cookies",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Consider the following code statement: response.sendRedirect( \u201c/abc/FinalServlet\u201d); Assume that the current context root of application is Final. Which of the following statements about the servlet container translating above code statements to the following URL is true? 1. http://localhost:8080/Final/abc/FinalServlet 2. http://localhost:8080/abc/FinalServlet 3. http://localhost:8080/FinalServlet/abc 4. http://localhost:8080/FinalServlet/abc/Final",
    "options": [
      "2",
      "1",
      "1, 4",
      "2, 3"
    ],
    "description": "Choose 1 option",
    "answer": [
      "2"
    ]
  },
  {
    "question": "Consider the following code statement: response.sendRedirect( \u201c/abc/FinalServlet\u201d); Assume that the current context root of application is Final. Which of the following statements about the servlet container translating above code statements to the following URL is true? 1. http://localhost:8080/Final/abc/FinalServlet 2. http://localhost:8080/abc/FinalServlet 3. http://localhost:8080/FinalServlet/abc 4. http://localhost:8080/FinalServlet/abc/Final",
    "options": [
      "2",
      "1",
      "1, 4",
      "2, 3"
    ],
    "description": "Choose 1 option",
    "answer": [
      "2"
    ]
  },
  {
    "question": "Which HTTP method represents a request for information about the supported methods on an HTTP server?",
    "options": [
      "HEAD",
      "GET",
      "OPTIONS",
      "TRACE"
    ],
    "description": "Choose 1 option",
    "answer": [
      "OPTIONS"
    ]
  },
  {
    "question": "Which HTTP method represents a request for information about the supported methods on an HTTP server?",
    "options": [
      "HEAD",
      "GET",
      "OPTIONS",
      "TRACE"
    ],
    "description": "Choose 1 option",
    "answer": [
      "OPTIONS"
    ]
  },
  {
    "question": "Which followings is a folder that contains jar files in web application?",
    "options": [
      "/lib",
      "/WEB-INF/lib",
      "/WEB-INF/jar",
      "/WEB-INF/classes",
      "/META-INF/lib"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF/lib"
    ]
  },
  {
    "question": "Which followings is a folder that contains jar files in web application?",
    "options": [
      "/lib",
      "/WEB-INF/lib",
      "/WEB-INF/jar",
      "/WEB-INF/classes",
      "/META-INF/lib"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF/lib"
    ]
  },
  {
    "question": "The ________ method returns a string containing the value of the named initialization parameter",
    "options": [
      "getInitParameter(  )",
      "init(  )",
      "jspInit",
      "getServletConfig(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getInitParameter(  )"
    ]
  },
  {
    "question": "The ________ method returns a string containing the value of the named initialization parameter",
    "options": [
      "getInitParameter(  )",
      "init(  )",
      "jspInit",
      "getServletConfig(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getInitParameter(  )"
    ]
  },
  {
    "question": "Given an HttpServletRequestrequest and HttpResponseresponse, which sets a cookie \"username\" with the value \"joe\" in a servlet?",
    "options": [
      "response.addCookie( new Cookie( \"username\", \"joe\"))",
      "response.addHeader( new Cookie( \"username\", \"joe\"))",
      "request.addHeader( new Cookie( \"username\", \"joe\"))",
      "response.addCookie( \"username\", \"joe\")"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response.addCookie( new Cookie( \"username\", \"joe\"))"
    ]
  },
  {
    "question": "Given an HttpServletRequestrequest and HttpResponseresponse, which sets a cookie \"username\" with the value \"joe\" in a servlet?",
    "options": [
      "response.addCookie( new Cookie( \"username\", \"joe\"))",
      "response.addHeader( new Cookie( \"username\", \"joe\"))",
      "request.addHeader( new Cookie( \"username\", \"joe\"))",
      "response.addCookie( \"username\", \"joe\")"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response.addCookie( new Cookie( \"username\", \"joe\"))"
    ]
  },
  {
    "question": "Which of these is true about deployment descriptors ( web.xml)? Select the one correct answer.",
    "options": [
      "The elements of deployment descriptor are case sensitive.",
      "The servlet-mapping element, if defined, must be included within the servlet element.",
      "The web-app element must include the servlet element.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The elements of deployment descriptor are case sensitive."
    ]
  },
  {
    "question": "Which of these is true about deployment descriptors ( web.xml)? Select the one correct answer.",
    "options": [
      "The elements of deployment descriptor are case sensitive.",
      "The servlet-mapping element, if defined, must be included within the servlet element.",
      "The web-app element must include the servlet element.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The elements of deployment descriptor are case sensitive."
    ]
  },
  {
    "question": "Consider the following code:\n    public void doGet( HttpServletRequest req,\n                      HttpServletResponse res)\n                      throws IOException\n    {\n      if( req.getParameter( \"switch\") == null)\n       {\n         //1\n       }\n       else\n       {\n       //other code\n       }\n    }\n Which of the following lines can be inserted at //1 so that the request is redi-\n rected to the collectinfo.html page? ( Select one)",
    "options": [
      "req.sendRedirect( \"collectinfo.html\");",
      "req.redirect( \"collectinfo.html\");",
      "res.direct( \"collectinfo.html\");",
      "res.sendRedirect( \"collectinfo.html\");"
    ],
    "description": "Choose 1 option",
    "answer": [
      "res.sendRedirect( \"collectinfo.html\");"
    ]
  },
  {
    "question": "Consider the following code:\n    public void doGet( HttpServletRequest req,\n                      HttpServletResponse res)\n                      throws IOException\n    {\n      if( req.getParameter( \"switch\") == null)\n       {\n         //1\n       }\n       else\n       {\n       //other code\n       }\n    }\n Which of the following lines can be inserted at //1 so that the request is redi-\n rected to the collectinfo.html page? ( Select one)",
    "options": [
      "req.sendRedirect( \"collectinfo.html\");",
      "req.redirect( \"collectinfo.html\");",
      "res.direct( \"collectinfo.html\");",
      "res.sendRedirect( \"collectinfo.html\");"
    ],
    "description": "Choose 1 option",
    "answer": [
      "res.sendRedirect( \"collectinfo.html\");"
    ]
  },
  {
    "question": "Which of the following methods will\u00a0expire a session object? ( Select one)",
    "options": [
      "session.invalidate(  );",
      "session.expunge(  );",
      "session.destroy(  );",
      "session.end(  );"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.invalidate(  );"
    ]
  },
  {
    "question": "Which of the following methods will\u00a0expire a session object? ( Select one)",
    "options": [
      "session.invalidate(  );",
      "session.expunge(  );",
      "session.destroy(  );",
      "session.end(  );"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.invalidate(  );"
    ]
  },
  {
    "question": "Which classes or interfaces provide a getSession method?",
    "options": [
      "javax.servlet.http.HttpServletRequest",
      "javax.servlet.http.HttpSessionContext",
      "javax.servlet.http.HttpServletResponse",
      "javax.servlet.http.HttpSessionAttributeEvent"
    ],
    "description": "Choose 1 option",
    "answer": [
      "javax.servlet.http.HttpServletRequest"
    ]
  },
  {
    "question": "Which classes or interfaces provide a getSession method?",
    "options": [
      "javax.servlet.http.HttpServletRequest",
      "javax.servlet.http.HttpSessionContext",
      "javax.servlet.http.HttpServletResponse",
      "javax.servlet.http.HttpSessionAttributeEvent"
    ],
    "description": "Choose 1 option",
    "answer": [
      "javax.servlet.http.HttpServletRequest"
    ]
  },
  {
    "question": "Which method is required for using the URL rewriting mechanism of implementing session support?",
    "options": [
      "HttpServletRequest.encodeURL(  )",
      "HttpServletRequest.rewriteURL(  )",
      "HttpServletResponse.encodeURL(  )",
      "HttpServletResponse.rewriteURL(  )",
      "HttpServletResponse.decodeURL(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.encodeURL(  )"
    ]
  },
  {
    "question": "Which method is required for using the URL rewriting mechanism of implementing session support?",
    "options": [
      "HttpServletRequest.encodeURL(  )",
      "HttpServletRequest.rewriteURL(  )",
      "HttpServletResponse.encodeURL(  )",
      "HttpServletResponse.rewriteURL(  )",
      "HttpServletResponse.decodeURL(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.encodeURL(  )"
    ]
  },
  {
    "question": "Identify TWO authentication mechanisms that are built into the HTTP specification.",
    "options": [
      "Basic",
      "Digest",
      "Client-Cert",
      "FORM",
      "Client-Digest"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Basic",
      "Digest"
    ]
  },
  {
    "question": "Identify TWO authentication mechanisms that are built into the HTTP specification.",
    "options": [
      "Basic",
      "Digest",
      "Client-Cert",
      "FORM",
      "Client-Digest"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Basic",
      "Digest"
    ]
  },
  {
    "question": "The custom web page for logging in using FORM-based authentication must contain an html Form. The form must contain ________",
    "options": [
      "action attribute must equal j_security_check",
      "method attribute must equal GET",
      "action attribute must equal j_security_check and method attribute must equal POST",
      "None of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "action attribute must equal j_security_check and method attribute must equal POST"
    ]
  },
  {
    "question": "The custom web page for logging in using FORM-based authentication must contain an html Form. The form must contain ________",
    "options": [
      "action attribute must equal j_security_check",
      "method attribute must equal GET",
      "action attribute must equal j_security_check and method attribute must equal POST",
      "None of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "action attribute must equal j_security_check and method attribute must equal POST"
    ]
  },
  {
    "question": "Digest authentiction is based on ______",
    "options": [
      "A hash function and encryption",
      "A plaintext and SSL",
      "A decoded password and encrypted username",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A hash function and encryption"
    ]
  },
  {
    "question": "Digest authentiction is based on ______",
    "options": [
      "A hash function and encryption",
      "A plaintext and SSL",
      "A decoded password and encrypted username",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A hash function and encryption"
    ]
  },
  {
    "question": "Which of the following deployment descriptor elements is used for specifying the \n authentication mechanism for a web application?",
    "options": [
      "security-constraint",
      "auth-constraint",
      "login-config",
      "web-resource-collection"
    ],
    "description": "Choose 1 option",
    "answer": [
      "login-config"
    ]
  },
  {
    "question": "Which of the following deployment descriptor elements is used for specifying the \n authentication mechanism for a web application?",
    "options": [
      "security-constraint",
      "auth-constraint",
      "login-config",
      "web-resource-collection"
    ],
    "description": "Choose 1 option",
    "answer": [
      "login-config"
    ]
  },
  {
    "question": "Which of the following methods is defined by the JSP engine?",
    "options": [
      "Init(  )",
      "_jspService(  )",
      "_jspService( ServletRequest, ServletResponse)",
      "_jspService( HttpServletRequest, HttpServletResponse)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "_jspService( HttpServletRequest, HttpServletResponse)"
    ]
  },
  {
    "question": "Which of the following methods is defined by the JSP engine?",
    "options": [
      "Init(  )",
      "_jspService(  )",
      "_jspService( ServletRequest, ServletResponse)",
      "_jspService( HttpServletRequest, HttpServletResponse)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "_jspService( HttpServletRequest, HttpServletResponse)"
    ]
  },
  {
    "question": "Which is a benefit of precompiling a JSP page?",
    "options": [
      "It provides better performance on the first request for the JSP page.",
      "It provides the ability to debug runtime errors in the application.",
      "It avoids initialization on the first request.",
      "It avoids execution of the _jspService method on the first request."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It provides better performance on the first request for the JSP page."
    ]
  },
  {
    "question": "Which is a benefit of precompiling a JSP page?",
    "options": [
      "It provides better performance on the first request for the JSP page.",
      "It provides the ability to debug runtime errors in the application.",
      "It avoids initialization on the first request.",
      "It avoids execution of the _jspService method on the first request."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It provides better performance on the first request for the JSP page."
    ]
  },
  {
    "question": "Which ensures that a JSP response is of type \"text/plain\"?",
    "options": [
      "<%@ page contentType=\"text/plain\" %>",
      "<%@ page pageEncoding=\"text/plain\" %>",
      "<%@ page mimeType=\"text/plain\" %>",
      "<%@ page contentEncoding=\"text/plain\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page contentType=\"text/plain\" %>"
    ]
  },
  {
    "question": "Which ensures that a JSP response is of type \"text/plain\"?",
    "options": [
      "<%@ page contentType=\"text/plain\" %>",
      "<%@ page pageEncoding=\"text/plain\" %>",
      "<%@ page mimeType=\"text/plain\" %>",
      "<%@ page contentEncoding=\"text/plain\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page contentType=\"text/plain\" %>"
    ]
  },
  {
    "question": "The JSP developer wants a comment to be visible in the final output to the browser. Which comment style needs to be used in a JSP page?",
    "options": [
      "<!-- this is a comment -->",
      "<% // this is a comment %>",
      "<%-- this is a comment --%>",
      "<% /** this is a comment **/ %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<!-- this is a comment -->"
    ]
  },
  {
    "question": "The JSP developer wants a comment to be visible in the final output to the browser. Which comment style needs to be used in a JSP page?",
    "options": [
      "<!-- this is a comment -->",
      "<% // this is a comment %>",
      "<%-- this is a comment --%>",
      "<% /** this is a comment **/ %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<!-- this is a comment -->"
    ]
  },
  {
    "question": "A web application allows the HTML title banner to be set using a servlet context initialization parameter called titleStr. Which two properly set the title in this scenario? ( Select two)",
    "options": [
      "<title>${titleStr}</title>",
      "<title>${initParam.titleStr}</title>",
      "<title>${params[0].titleStr}</title>",
      "<title>${paramValues.titleStr}</title>",
      "<title>${initParam['titleStr']}</title>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<title>${initParam.titleStr}</title>",
      "<title>${initParam['titleStr']}</title>"
    ]
  },
  {
    "question": "A web application allows the HTML title banner to be set using a servlet context initialization parameter called titleStr. Which two properly set the title in this scenario? ( Select two)",
    "options": [
      "<title>${titleStr}</title>",
      "<title>${initParam.titleStr}</title>",
      "<title>${params[0].titleStr}</title>",
      "<title>${paramValues.titleStr}</title>",
      "<title>${initParam['titleStr']}</title>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<title>${initParam.titleStr}</title>",
      "<title>${initParam['titleStr']}</title>"
    ]
  },
  {
    "question": "The _______ element allows passing one or more name-value pairs as parameters.",
    "options": [
      "jsp:param",
      "jsp:forward",
      "jsp:include",
      "jsp:useBean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "jsp:param"
    ]
  },
  {
    "question": "The _______ element allows passing one or more name-value pairs as parameters.",
    "options": [
      "jsp:param",
      "jsp:forward",
      "jsp:include",
      "jsp:useBean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "jsp:param"
    ]
  },
  {
    "question": "Which of the following statements about the jsp:useBean tag is ( are) true?",
    "options": [
      "The jsp:useBean is used to locate or instantiate a JavaBean component",
      "The jsp:useBean first tries to locate an instance of the bean, otherwise it instantiates the Bean from a class",
      "To locate and instantiate the Bean, the jsp:useBean attempts to locate a Bean within the scope",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which of the following statements about the jsp:useBean tag is ( are) true?",
    "options": [
      "The jsp:useBean is used to locate or instantiate a JavaBean component",
      "The jsp:useBean first tries to locate an instance of the bean, otherwise it instantiates the Bean from a class",
      "To locate and instantiate the Bean, the jsp:useBean attempts to locate a Bean within the scope",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Consider the contents of two JSP files:\n File 1: this.jsp \n   <html><body><pre> \n      <jsp:include page=\"that.jsp\" > \n         <jsp:param name=\"color\" value=\"red\" /> \n         <jsp:param name=\"color\" value=\"green\" /> \n      </jsp:include> \n   </pre></body></html> \n File 2: that.jsp \n   <% \n      String colors[] = request.getParameterValues( \"color\"); \n      for ( int i=0; i<colors.length; i++) \n      { \n    out.print( colors[i] + \" \"); \n      } \n   %> \n What will be the output of accessing the this.jsp file via the following URL? \n ( Select one)\n   http://localhost:8080/chapter12/this.jsp?color=blue",
    "options": [
      "blue",
      "red green",
      "red green blue",
      "blue red green"
    ],
    "description": "Choose 1 option",
    "answer": [
      "red green blue"
    ]
  },
  {
    "question": "Consider the contents of two JSP files:\n File 1: this.jsp \n   <html><body><pre> \n      <jsp:include page=\"that.jsp\" > \n         <jsp:param name=\"color\" value=\"red\" /> \n         <jsp:param name=\"color\" value=\"green\" /> \n      </jsp:include> \n   </pre></body></html> \n File 2: that.jsp \n   <% \n      String colors[] = request.getParameterValues( \"color\"); \n      for ( int i=0; i<colors.length; i++) \n      { \n    out.print( colors[i] + \" \"); \n      } \n   %> \n What will be the output of accessing the this.jsp file via the following URL? \n ( Select one)\n   http://localhost:8080/chapter12/this.jsp?color=blue",
    "options": [
      "blue",
      "red green",
      "red green blue",
      "blue red green"
    ],
    "description": "Choose 1 option",
    "answer": [
      "red green blue"
    ]
  },
  {
    "question": "Which two actions protect a resource file from direct HTTP access within a web application? ( Choose two.)",
    "options": [
      "Placing it in the /secure directory",
      "Placing it in the /WEB-INF directory",
      "Placing it in the /META-INF/secure directory",
      "Creating a  element within the deployment descriptor",
      "Creating a  element within the deployment descriptor"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Placing it in the /WEB-INF directory",
      "Placing it in the /META-INF/secure directory"
    ]
  },
  {
    "question": "Which two actions protect a resource file from direct HTTP access within a web application? ( Choose two.)",
    "options": [
      "Placing it in the /secure directory",
      "Placing it in the /WEB-INF directory",
      "Placing it in the /META-INF/secure directory",
      "Creating a  element within the deployment descriptor",
      "Creating a  element within the deployment descriptor"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Placing it in the /WEB-INF directory",
      "Placing it in the /META-INF/secure directory"
    ]
  },
  {
    "question": "You have created a web application that you license to real estate brokers. The webapp is highly customizable including the email address of the broker, which is placed on the footer of each page. This is configured as a context parameter in the deployment descriptor:\n 10. <context-param>\n 11. <param-name>footerEmail</param-name>\n 12. <param-value>joe@estates-r-us.biz</param-value>\n 13. </context-param>\n Which EL code snippet will insert this context parameter into the footer?",
    "options": [
      "<a href='mailto:${footerEmail}'>Contact me</a>",
      "<a href='mailto:${initParam.footerEmail}'>Contact me</a>",
      "<a href='mailto:${contextParam@footerEmail}'>Contact me</a>",
      "<a href='mailto:${contextParam.footerEmail}'>Contact me</a>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<a href='mailto:${initParam.footerEmail}'>Contact me</a>"
    ]
  },
  {
    "question": "You have created a web application that you license to real estate brokers. The webapp is highly customizable including the email address of the broker, which is placed on the footer of each page. This is configured as a context parameter in the deployment descriptor:\n 10. <context-param>\n 11. <param-name>footerEmail</param-name>\n 12. <param-value>joe@estates-r-us.biz</param-value>\n 13. </context-param>\n Which EL code snippet will insert this context parameter into the footer?",
    "options": [
      "<a href='mailto:${footerEmail}'>Contact me</a>",
      "<a href='mailto:${initParam.footerEmail}'>Contact me</a>",
      "<a href='mailto:${contextParam@footerEmail}'>Contact me</a>",
      "<a href='mailto:${contextParam.footerEmail}'>Contact me</a>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<a href='mailto:${initParam.footerEmail}'>Contact me</a>"
    ]
  },
  {
    "question": "Your company has a corporate policy that prohibits storing a customer's credit card number in any corporate database. However, users have complained that they do NOT want to re- enter their credit card number for each transaction. Your management has decided to use client-side cookies to record the user's credit card number for 120 days. Furthermore, they also want to protect this information during transit from the web browser to the web container; so the cookie must only be transmitted over HTTPS. Which code snippet creates the \"creditCard\" cookie and adds it to the out going response to be stored on the user's web browser?",
    "options": [
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setAge( 10368000);\n 13. response.addCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setHttps( true);\n 12. c.setMaxAge( 10368000);\n 13. response.setCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setMaxAge( 10368000);\n 13. response.addCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setHttps( true);\n 12. c.setAge( 10368000);\n 13. response.addCookie( c);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setMaxAge( 10368000);\n 13. response.addCookie( c);"
    ]
  },
  {
    "question": "Your company has a corporate policy that prohibits storing a customer's credit card number in any corporate database. However, users have complained that they do NOT want to re- enter their credit card number for each transaction. Your management has decided to use client-side cookies to record the user's credit card number for 120 days. Furthermore, they also want to protect this information during transit from the web browser to the web container; so the cookie must only be transmitted over HTTPS. Which code snippet creates the \"creditCard\" cookie and adds it to the out going response to be stored on the user's web browser?",
    "options": [
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setAge( 10368000);\n 13. response.addCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setHttps( true);\n 12. c.setMaxAge( 10368000);\n 13. response.setCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setMaxAge( 10368000);\n 13. response.addCookie( c);",
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setHttps( true);\n 12. c.setAge( 10368000);\n 13. response.addCookie( c);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "10. Cookie c = new Cookie( \"creditCard\", usersCard);\n 11. c.setSecure( true);\n 12. c.setMaxAge( 10368000);\n 13. response.addCookie( c);"
    ]
  },
  {
    "question": "You need to create a JavaBean object that is used only within the current JSP page. It must NOT be accessible to any other page including those that this page might import. Which JSP standard action can accomplish this goal?",
    "options": [
      "<jsp:useBean id='pageBean' type='com.example.MyBean' />",
      "<jsp:useBean id='pageBean' class='com.example.MyBean' />",
      "<jsp:makeBean id='pageBean' type='com.example.MyBean' />",
      "<jsp:makeBean id='pageBean' class='com.example.MyBean' />",
      "<jsp:useBean name='pageBean' class='com.example.MyBean' />"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:useBean id='pageBean' class='com.example.MyBean' />"
    ]
  },
  {
    "question": "You need to create a JavaBean object that is used only within the current JSP page. It must NOT be accessible to any other page including those that this page might import. Which JSP standard action can accomplish this goal?",
    "options": [
      "<jsp:useBean id='pageBean' type='com.example.MyBean' />",
      "<jsp:useBean id='pageBean' class='com.example.MyBean' />",
      "<jsp:makeBean id='pageBean' type='com.example.MyBean' />",
      "<jsp:makeBean id='pageBean' class='com.example.MyBean' />",
      "<jsp:useBean name='pageBean' class='com.example.MyBean' />"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:useBean id='pageBean' class='com.example.MyBean' />"
    ]
  },
  {
    "question": "Given the HTML form:\n 1. <html>\n 2. <body>\n 3. <form action=\"submit.jsp\">\n 4. Name: <input type=\"text\" name=\"i1\"><br>\n 5. Price: <input type=\"text\" name=\"i2\"><br>\n 6. <input type=\"submit\">\n 7. </form>\n 8. </body>\n 9. </html>\n Assume the product attribute does NOT yet exist in any scope. Which code snippet, in submit.jsp, instantiates an instance of com.example.Product that contains the results of the form submission?",
    "options": [
      "<jsp:useBean id=\"com.example.Product\" />\n <jsp:setProperty name=\"product\" property=\"*\" />",
      "<jsp:useBean id=\"product\" class=\"com.example.Product\" /> ${product.name = param.i1}\n . ${product.price = param.i2}",
      "<jsp:useBean id=\"product\" class=\"com.example.Product\"> . <jsp:setProperty name=\"product\" property=\"name\"\n param=\"i1\" />\n <jsp:setProperty name=\"product\" property=\"price\"\n . param=\"i2\" />\n . </jsp:useBean>",
      "<jsp:useBean id=\"product\" type=\"com.example.Product\"> . <jsp:setProperty name=\"product\" property=\"name\"\n value=\"<%= request.getParameter(  \"i1\" ) %>\" />\n . <jsp:setProperty name=\"product\" property=\"price\" value=\"<%= request.getParameter(  \"i2\" ) %>\" />\n .</jsp:useBean>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:useBean id=\"product\" class=\"com.example.Product\"> . <jsp:setProperty name=\"product\" property=\"name\"\n param=\"i1\" />\n <jsp:setProperty name=\"product\" property=\"price\"\n . param=\"i2\" />\n . </jsp:useBean>"
    ]
  },
  {
    "question": "Given the HTML form:\n 1. <html>\n 2. <body>\n 3. <form action=\"submit.jsp\">\n 4. Name: <input type=\"text\" name=\"i1\"><br>\n 5. Price: <input type=\"text\" name=\"i2\"><br>\n 6. <input type=\"submit\">\n 7. </form>\n 8. </body>\n 9. </html>\n Assume the product attribute does NOT yet exist in any scope. Which code snippet, in submit.jsp, instantiates an instance of com.example.Product that contains the results of the form submission?",
    "options": [
      "<jsp:useBean id=\"com.example.Product\" />\n <jsp:setProperty name=\"product\" property=\"*\" />",
      "<jsp:useBean id=\"product\" class=\"com.example.Product\" /> ${product.name = param.i1}\n . ${product.price = param.i2}",
      "<jsp:useBean id=\"product\" class=\"com.example.Product\"> . <jsp:setProperty name=\"product\" property=\"name\"\n param=\"i1\" />\n <jsp:setProperty name=\"product\" property=\"price\"\n . param=\"i2\" />\n . </jsp:useBean>",
      "<jsp:useBean id=\"product\" type=\"com.example.Product\"> . <jsp:setProperty name=\"product\" property=\"name\"\n value=\"<%= request.getParameter(  \"i1\" ) %>\" />\n . <jsp:setProperty name=\"product\" property=\"price\" value=\"<%= request.getParameter(  \"i2\" ) %>\" />\n .</jsp:useBean>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:useBean id=\"product\" class=\"com.example.Product\"> . <jsp:setProperty name=\"product\" property=\"name\"\n param=\"i1\" />\n <jsp:setProperty name=\"product\" property=\"price\"\n . param=\"i2\" />\n . </jsp:useBean>"
    ]
  },
  {
    "question": "You are building a web application that will be used throughout the European Union; therefore, it has significant internationalization requirements. You have been tasked to create a custom tag that generates a message using the java.text.MessageFormat class. The tag will take the resourceKey attribute and a variable number of argument attributes with the format, arg. Here is an example use of this tag and its output:  generates: The disk \"MyDisk\" contains 1247 file( s). Which Simple tag class definition accomplishes this goal of handling a variable number of tag attributes?",
    "options": [
      "public class MessageTag extends SimpleTagSupport\n implements VariableAttributes {\n private Map attributes = new HashMap(  );\n public void setVariableAttribute( String uri,\n String name, Object value) {\n this.attributes.put( name, value);\n }\n // more tag handler methods\n }",
      "public class MessageTag extends SimpleTagSupport\n implements DynamicAttributes {\n private Map attributes = new HashMap(  );\n public void putAttribute( String name, Object value) { this.attributes.put( name, value);\n }\n // more tag handler methods\n }",
      "The Simple tag model does NOT support a variable number of attributes.",
      "public class MessageTag extends SimpleTagSupport\n implements DynamicAttributes {\n private Map attributes = new HashMap(  );\n public void setDynamicAttribute( String uri, String name, Object value) {\n this.attributes.put( name, value);\n }\n // more tag handler methods\n }"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public class MessageTag extends SimpleTagSupport\n implements DynamicAttributes {\n private Map attributes = new HashMap(  );\n public void setDynamicAttribute( String uri, String name, Object value) {\n this.attributes.put( name, value);\n }\n // more tag handler methods\n }"
    ]
  },
  {
    "question": "You are building a web application that will be used throughout the European Union; therefore, it has significant internationalization requirements. You have been tasked to create a custom tag that generates a message using the java.text.MessageFormat class. The tag will take the resourceKey attribute and a variable number of argument attributes with the format, arg. Here is an example use of this tag and its output:  generates: The disk \"MyDisk\" contains 1247 file( s). Which Simple tag class definition accomplishes this goal of handling a variable number of tag attributes?",
    "options": [
      "public class MessageTag extends SimpleTagSupport\n implements VariableAttributes {\n private Map attributes = new HashMap(  );\n public void setVariableAttribute( String uri,\n String name, Object value) {\n this.attributes.put( name, value);\n }\n // more tag handler methods\n }",
      "public class MessageTag extends SimpleTagSupport\n implements DynamicAttributes {\n private Map attributes = new HashMap(  );\n public void putAttribute( String name, Object value) { this.attributes.put( name, value);\n }\n // more tag handler methods\n }",
      "The Simple tag model does NOT support a variable number of attributes.",
      "public class MessageTag extends SimpleTagSupport\n implements DynamicAttributes {\n private Map attributes = new HashMap(  );\n public void setDynamicAttribute( String uri, String name, Object value) {\n this.attributes.put( name, value);\n }\n // more tag handler methods\n }"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public class MessageTag extends SimpleTagSupport\n implements DynamicAttributes {\n private Map attributes = new HashMap(  );\n public void setDynamicAttribute( String uri, String name, Object value) {\n this.attributes.put( name, value);\n }\n // more tag handler methods\n }"
    ]
  },
  {
    "question": "Consider the following <taglib> element, which appears in a deployment \n descriptor of a web application:\n    <taglib>\n     <taglib-uri>/accounting</taglib-uri>  \n     <taglib-location>/WEB-INF/tlds/SmartAccount.tld</taglib-location>\n    </taglib>\n Which of the following correctly specifies the use of the above tag library in a JSP \n page? ( Select one)",
    "options": [
      "<%@ taglib uri=\"/accounting\" prefix=\"acc\"%>",
      "<%@ taglib uri=\"/acc\" prefix=\"/accounting\"%>",
      "<%@ taglib name=\"/accounting\" prefix=\"acc\"%>",
      "<%@ taglib library=\"/accounting\" prefix=\"acc\"%>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ taglib uri=\"/accounting\" prefix=\"acc\"%>"
    ]
  },
  {
    "question": "Consider the following <taglib> element, which appears in a deployment \n descriptor of a web application:\n    <taglib>\n     <taglib-uri>/accounting</taglib-uri>  \n     <taglib-location>/WEB-INF/tlds/SmartAccount.tld</taglib-location>\n    </taglib>\n Which of the following correctly specifies the use of the above tag library in a JSP \n page? ( Select one)",
    "options": [
      "<%@ taglib uri=\"/accounting\" prefix=\"acc\"%>",
      "<%@ taglib uri=\"/acc\" prefix=\"/accounting\"%>",
      "<%@ taglib name=\"/accounting\" prefix=\"acc\"%>",
      "<%@ taglib library=\"/accounting\" prefix=\"acc\"%>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ taglib uri=\"/accounting\" prefix=\"acc\"%>"
    ]
  },
  {
    "question": "What method must be implemented to receive messages in a message-driven bean ( MDB)?",
    "options": [
      "The receive method",
      "The onMessage method",
      "The readMessage method",
      "The processMessage method"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The onMessage method"
    ]
  },
  {
    "question": "What method must be implemented to receive messages in a message-driven bean ( MDB)?",
    "options": [
      "The receive method",
      "The onMessage method",
      "The readMessage method",
      "The processMessage method"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The onMessage method"
    ]
  },
  {
    "question": "Which of the following are NOT advantages of asynchronous messaging architectures?",
    "options": [
      "Better use of bandwidth",
      "Supports load balancing",
      "Provides sender with instant response",
      "Scalability"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Provides sender with instant response"
    ]
  },
  {
    "question": "Which of the following are NOT advantages of asynchronous messaging architectures?",
    "options": [
      "Better use of bandwidth",
      "Supports load balancing",
      "Provides sender with instant response",
      "Scalability"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Provides sender with instant response"
    ]
  },
  {
    "question": "Which of the following is true about Enterprise JavaBeans ( EJB 3.x) objects?",
    "options": [
      "The home interface is no longer required.",
      "The remote interface, or the EJBObject interface, typically provides method signatures for business methods.",
      "The bean class implements the EJBInterface class.",
      "The bean must be defined in the XML deployment descriptor."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The home interface is no longer required."
    ]
  },
  {
    "question": "Which of the following is true about Enterprise JavaBeans ( EJB 3.x) objects?",
    "options": [
      "The home interface is no longer required.",
      "The remote interface, or the EJBObject interface, typically provides method signatures for business methods.",
      "The bean class implements the EJBInterface class.",
      "The bean must be defined in the XML deployment descriptor."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The home interface is no longer required."
    ]
  },
  {
    "question": "The ejb-jar file format is a contract between which two EJB role pairs? ( Choose two.)",
    "options": [
      "Deployer and System Administrator",
      "Application Assembler and Deployer",
      "Bean Provider and Application Assembler",
      "Bean Provider and EJB Container Provider",
      "EJB Server Provider and EJB Container Provider"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Application Assembler and Deployer",
      "Bean Provider and Application Assembler"
    ]
  },
  {
    "question": "The ejb-jar file format is a contract between which two EJB role pairs? ( Choose two.)",
    "options": [
      "Deployer and System Administrator",
      "Application Assembler and Deployer",
      "Bean Provider and Application Assembler",
      "Bean Provider and EJB Container Provider",
      "EJB Server Provider and EJB Container Provider"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Application Assembler and Deployer",
      "Bean Provider and Application Assembler"
    ]
  },
  {
    "question": "Given:\n\n 5. public interface MrB1 {\n 6. public interface MrB2 {\n\n A java class is defined as:\n\n 11. @Stateless\n 12. public class MrBean implements MrB1,MrB2 {\n\n Which two statements are correct for making this code work as a stateless session bean, considering that this session bean is NOT defined in a deployment descriptor and the interfaces do NOT have annotations? ( Choose two.)",
    "options": [
      "Only the inteface for remote usage must be annotated.",
      "The interfaces MrB1 and MrB2 can only be used locally without changing the code.",
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ],
    "description": "Choose all that apply",
    "answer": [
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ]
  },
  {
    "question": "Given:\n\n 5. public interface MrB1 {\n 6. public interface MrB2 {\n\n A java class is defined as:\n\n 11. @Stateless\n 12. public class MrBean implements MrB1,MrB2 {\n\n Which two statements are correct for making this code work as a stateless session bean, considering that this session bean is NOT defined in a deployment descriptor and the interfaces do NOT have annotations? ( Choose two.)",
    "options": [
      "Only the inteface for remote usage must be annotated.",
      "The interfaces MrB1 and MrB2 can only be used locally without changing the code.",
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ],
    "description": "Choose all that apply",
    "answer": [
      "Both interfaces MrB1 and MrB2 must be annotated to make this a working stateless session bean.",
      "The interfaces MrB1 and MrB2 can be annotated differently, one with @Local and the other with @Remote."
    ]
  },
  {
    "question": "The deployment descriptor for a stateless session bean that uses the isCallerInRole method reads as follows:\n\n 3.  \n 4. manager \n 5. humanresources \n 6.  \n\n 16.  \n 17.  \n 18. Is allowed to view and update all employee records.\n 19.  \n 20. humanresources \n 21.  \n\n Which two roles are responsible for creating this deployment descriptor? ( Choose two.)",
    "options": [
      "Deployer",
      "Bean Provider",
      "System Administrator",
      "Application Assembler"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Bean Provider",
      "Application Assembler"
    ]
  },
  {
    "question": "The deployment descriptor for a stateless session bean that uses the isCallerInRole method reads as follows:\n\n 3.  \n 4. manager \n 5. humanresources \n 6.  \n\n 16.  \n 17.  \n 18. Is allowed to view and update all employee records.\n 19.  \n 20. humanresources \n 21.  \n\n Which two roles are responsible for creating this deployment descriptor? ( Choose two.)",
    "options": [
      "Deployer",
      "Bean Provider",
      "System Administrator",
      "Application Assembler"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Bean Provider",
      "Application Assembler"
    ]
  },
  {
    "question": "An  enterprise bean  is a\u00a0... component that encapsulates the\u00a0.... of an application.",
    "options": [
      "server-side, business logic",
      "client-side, business logic",
      "server-side, presentation",
      "client-side, presentation"
    ],
    "description": "Choose 1 option",
    "answer": [
      "server-side, business logic"
    ]
  },
  {
    "question": "An  enterprise bean  is a\u00a0... component that encapsulates the\u00a0.... of an application.",
    "options": [
      "server-side, business logic",
      "client-side, business logic",
      "server-side, presentation",
      "client-side, presentation"
    ],
    "description": "Choose 1 option",
    "answer": [
      "server-side, business logic"
    ]
  },
  {
    "question": "In EJB 3.0, Which statement about entity manager is true?",
    "options": [
      "A container-managed entity manager must be a JTA entity manager.",
      "An entity manager injected into session beans can use either JTA or resource-local transaction control.",
      "An entity manager created by calling the EntityManagerFactory.createEntityManager method always uses\n JTA transaction control.",
      "An entity manager obtained through resource injection in a stateful session bean can use a resource-local EntityTransaction for transaction control."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A container-managed entity manager must be a JTA entity manager."
    ]
  },
  {
    "question": "In EJB 3.0, Which statement about entity manager is true?",
    "options": [
      "A container-managed entity manager must be a JTA entity manager.",
      "An entity manager injected into session beans can use either JTA or resource-local transaction control.",
      "An entity manager created by calling the EntityManagerFactory.createEntityManager method always uses\n JTA transaction control.",
      "An entity manager obtained through resource injection in a stateful session bean can use a resource-local EntityTransaction for transaction control."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A container-managed entity manager must be a JTA entity manager."
    ]
  },
  {
    "question": "The _________is the overall application architect. This party is responsible for understanding how various components fit together and writes the applications that combine components.",
    "options": [
      "Application Assembler",
      "Deployer",
      "Application Builder",
      "Developer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Application Assembler"
    ]
  },
  {
    "question": "The _________is the overall application architect. This party is responsible for understanding how various components fit together and writes the applications that combine components.",
    "options": [
      "Application Assembler",
      "Deployer",
      "Application Builder",
      "Developer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Application Assembler"
    ]
  },
  {
    "question": "Which of the statements about stateless session beans is true?",
    "options": [
      "They may provide high performance by being available for multiple clients.",
      "They maintain a cached state on behalf of a specific client.",
      "They maintain a conversational state on behalf of several clients.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "They may provide high performance by being available for multiple clients."
    ]
  },
  {
    "question": "Which of the statements about stateless session beans is true?",
    "options": [
      "They may provide high performance by being available for multiple clients.",
      "They maintain a cached state on behalf of a specific client.",
      "They maintain a conversational state on behalf of several clients.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "They may provide high performance by being available for multiple clients."
    ]
  },
  {
    "question": "Which statements about the lifecycle of a session bean are true?",
    "options": [
      "Client should be prepared to recreate a session bean in the event of a server crash.",
      "The data in a stateful session bean survives a server's crash.",
      "A server that has crashed and been restarted can deserialize cached data for a stateful session bean.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Client should be prepared to recreate a session bean in the event of a server crash."
    ]
  },
  {
    "question": "Which statements about the lifecycle of a session bean are true?",
    "options": [
      "Client should be prepared to recreate a session bean in the event of a server crash.",
      "The data in a stateful session bean survives a server's crash.",
      "A server that has crashed and been restarted can deserialize cached data for a stateful session bean.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Client should be prepared to recreate a session bean in the event of a server crash."
    ]
  },
  {
    "question": "A ____________ session bean is a bean that holds conversations that span a single method call.",
    "options": [
      "stateless",
      "stateful",
      "no-state",
      "one-call"
    ],
    "description": "Choose 1 option",
    "answer": [
      "stateless"
    ]
  },
  {
    "question": "A ____________ session bean is a bean that holds conversations that span a single method call.",
    "options": [
      "stateless",
      "stateful",
      "no-state",
      "one-call"
    ],
    "description": "Choose 1 option",
    "answer": [
      "stateless"
    ]
  },
  {
    "question": "Given the following statements about an EJB deployment descriptor for which the metadata-complete attribute is not specified:\n\n I. The EJB deployment descriptor can provide additional metadata to bean class annotations.\n\n II. The EJB deployment descriptor can partially override bean class annotations.\n\n III. The EJB deployment descriptor can entirely override bean class annotations.\n\n Which is true?",
    "options": [
      "Only statement I is correct.",
      "Only statement II is correct.",
      "Only statement III is correct.",
      "Both statements I and II are correct.",
      "Both statements I and III are correct."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both statements I and II are correct."
    ]
  },
  {
    "question": "Given the following statements about an EJB deployment descriptor for which the metadata-complete attribute is not specified:\n\n I. The EJB deployment descriptor can provide additional metadata to bean class annotations.\n\n II. The EJB deployment descriptor can partially override bean class annotations.\n\n III. The EJB deployment descriptor can entirely override bean class annotations.\n\n Which is true?",
    "options": [
      "Only statement I is correct.",
      "Only statement II is correct.",
      "Only statement III is correct.",
      "Both statements I and II are correct.",
      "Both statements I and III are correct."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both statements I and II are correct."
    ]
  },
  {
    "question": "The ________class makes every entity bean different.",
    "options": [
      "bean key",
      "primary key",
      "key",
      "bean ID"
    ],
    "description": "Choose 1 option",
    "answer": [
      "primary key"
    ]
  },
  {
    "question": "The ________class makes every entity bean different.",
    "options": [
      "bean key",
      "primary key",
      "key",
      "bean ID"
    ],
    "description": "Choose 1 option",
    "answer": [
      "primary key"
    ]
  },
  {
    "question": "What is NOT true about Entity beans? ( Select one)",
    "options": [
      "Entity beans can survive a system crash",
      "Entity beans are not pooled",
      "Entity beans cannot be stateless",
      "Entity beans are transactional"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Entity beans are not pooled"
    ]
  },
  {
    "question": "What is NOT true about Entity beans? ( Select one)",
    "options": [
      "Entity beans can survive a system crash",
      "Entity beans are not pooled",
      "Entity beans cannot be stateless",
      "Entity beans are transactional"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Entity beans are not pooled"
    ]
  },
  {
    "question": "What are the possible values of the <destination-type> element for a message driven bean?",
    "options": [
      "javax.jms.Queue",
      "java.jms.Queue",
      "javax.jms.Topic",
      "Both javax.jms.Queue and javax.jms.Topic"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both javax.jms.Queue and javax.jms.Topic"
    ]
  },
  {
    "question": "What are the possible values of the <destination-type> element for a message driven bean?",
    "options": [
      "javax.jms.Queue",
      "java.jms.Queue",
      "javax.jms.Topic",
      "Both javax.jms.Queue and javax.jms.Topic"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both javax.jms.Queue and javax.jms.Topic"
    ]
  },
  {
    "question": "Which of the following statements about the jsp:forward is false?",
    "options": [
      "In the source JSP file, the code before the jsp:forward element is not processed.",
      "The jsp:forward element is used to redirect the request object",
      "To redirect the request, the target file can be an HTML file, JSP file or a servlet",
      "To pass parameter names and values to the target file, you can use a jsp:param clause with jsp:forward element"
    ],
    "description": "Choose 1 option",
    "answer": [
      "In the source JSP file, the code before the jsp:forward element is not processed."
    ]
  },
  {
    "question": "Which of the following statements about the jsp:forward is false?",
    "options": [
      "In the source JSP file, the code before the jsp:forward element is not processed.",
      "The jsp:forward element is used to redirect the request object",
      "To redirect the request, the target file can be an HTML file, JSP file or a servlet",
      "To pass parameter names and values to the target file, you can use a jsp:param clause with jsp:forward element"
    ],
    "description": "Choose 1 option",
    "answer": [
      "In the source JSP file, the code before the jsp:forward element is not processed."
    ]
  },
  {
    "question": "Identify the JSP equivalent of the following code written in a servlet. ( Select one)\n  RequestDispatcher rd = request.getRequestDispatcher( \"world.jsp\");\n   rd.forward( request, response);",
    "options": [
      "<jsp:forward page=\"world.jsp\"/>",
      "<jsp:action.forward page=\"world.jsp\"/>",
      "<jsp:directive.forward page=\"world.jsp\"/>",
      "<%@ forward file=\"world.jsp\"%>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:forward page=\"world.jsp\"/>"
    ]
  },
  {
    "question": "Identify the JSP equivalent of the following code written in a servlet. ( Select one)\n  RequestDispatcher rd = request.getRequestDispatcher( \"world.jsp\");\n   rd.forward( request, response);",
    "options": [
      "<jsp:forward page=\"world.jsp\"/>",
      "<jsp:action.forward page=\"world.jsp\"/>",
      "<jsp:directive.forward page=\"world.jsp\"/>",
      "<%@ forward file=\"world.jsp\"%>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:forward page=\"world.jsp\"/>"
    ]
  },
  {
    "question": "Given that www.example.com/SCWCDtestApp is a validly deployed Java EE web application and that all of the JSP files specified in the requests below exist in the locations specified. Which two requests, issued from a browser, will return an HTTP 404 error? ( Choose two.)",
    "options": [
      "www.example.com/SCWCDtestApp/test.jsp",
      "www.example.com/SCWCDtestApp/WEB-INF/test.jsp",
      "www.example.com/SCWCDtestApp/WEB-WAR/test.jsp",
      "www.example.com/SCWCDtestApp/META-INF/test.jsp"
    ],
    "description": "Choose all that apply",
    "answer": [
      "www.example.com/SCWCDtestApp/WEB-INF/test.jsp",
      "www.example.com/SCWCDtestApp/META-INF/test.jsp"
    ]
  },
  {
    "question": "Given that www.example.com/SCWCDtestApp is a validly deployed Java EE web application and that all of the JSP files specified in the requests below exist in the locations specified. Which two requests, issued from a browser, will return an HTTP 404 error? ( Choose two.)",
    "options": [
      "www.example.com/SCWCDtestApp/test.jsp",
      "www.example.com/SCWCDtestApp/WEB-INF/test.jsp",
      "www.example.com/SCWCDtestApp/WEB-WAR/test.jsp",
      "www.example.com/SCWCDtestApp/META-INF/test.jsp"
    ],
    "description": "Choose all that apply",
    "answer": [
      "www.example.com/SCWCDtestApp/WEB-INF/test.jsp",
      "www.example.com/SCWCDtestApp/META-INF/test.jsp"
    ]
  },
  {
    "question": "Consider the following HTML page code: \n <html><body><a href=\"/servlet/HelloServlet\">POST</a></body></html> \n\n Which method of HelloServlet will be invoked when the hyperlink displayed by the above page is clicked?",
    "options": [
      "doGet",
      "doPost",
      "doForm",
      "doHref",
      "serviceGet"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doGet"
    ]
  },
  {
    "question": "Consider the following HTML page code: \n <html><body><a href=\"/servlet/HelloServlet\">POST</a></body></html> \n\n Which method of HelloServlet will be invoked when the hyperlink displayed by the above page is clicked?",
    "options": [
      "doGet",
      "doPost",
      "doForm",
      "doHref",
      "serviceGet"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doGet"
    ]
  },
  {
    "question": "Consider the following HTML page code:<html><body><form name=\"data\" action=\"/servlet/DataServlet\" method=\"POST\"><input type=\"text\" name=\"name\"><input type=\"submit\" name=\"submit\"></form></body></html>Identify the TWO methods that can be used to retrieve the value of the name parameter when the form is submitted.",
    "options": [
      "getParameter( \"name\");",
      "getParameterValue( \"name\");",
      "getParameters( \"name\");",
      "getValue( \"name\");"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getParameter( \"name\");"
    ]
  },
  {
    "question": "Consider the following HTML page code:<html><body><form name=\"data\" action=\"/servlet/DataServlet\" method=\"POST\"><input type=\"text\" name=\"name\"><input type=\"submit\" name=\"submit\"></form></body></html>Identify the TWO methods that can be used to retrieve the value of the name parameter when the form is submitted.",
    "options": [
      "getParameter( \"name\");",
      "getParameterValue( \"name\");",
      "getParameters( \"name\");",
      "getValue( \"name\");"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getParameter( \"name\");"
    ]
  },
  {
    "question": "Consider the following declarations: 1. GET http://cms.fpt.edu.vn/index.jsp HTTP/1.1 Accept: image/*, application/vnd.txt Accept-Language: en-cd User-Agent: Mozilla/4.0 ( compatible; MSIE 6.0; Windows NT 4.0) Host: www.fpt.edu.vn 2. HTTP/1.0 404 File Not Found Connection: Close Date: Sat, 07 Aug 2010 08:30:30 GMT Content-Type: text/html Server: J2EE/ 2.0 Which of the following statements is true?",
    "options": [
      "The first fragment text describes the HTTP Response",
      "The second fragment text describes the HTTP Request",
      "The first fragment text describes the HTTP Request",
      "None of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The first fragment text describes the HTTP Request"
    ]
  },
  {
    "question": "Consider the following declarations: 1. GET http://cms.fpt.edu.vn/index.jsp HTTP/1.1 Accept: image/*, application/vnd.txt Accept-Language: en-cd User-Agent: Mozilla/4.0 ( compatible; MSIE 6.0; Windows NT 4.0) Host: www.fpt.edu.vn 2. HTTP/1.0 404 File Not Found Connection: Close Date: Sat, 07 Aug 2010 08:30:30 GMT Content-Type: text/html Server: J2EE/ 2.0 Which of the following statements is true?",
    "options": [
      "The first fragment text describes the HTTP Response",
      "The second fragment text describes the HTTP Request",
      "The first fragment text describes the HTTP Request",
      "None of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The first fragment text describes the HTTP Request"
    ]
  },
  {
    "question": "Which of the following error code is associated with the message \"Resource not found\u201d?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "404"
    ]
  },
  {
    "question": "Which of the following error code is associated with the message \"Resource not found\u201d?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "404"
    ]
  },
  {
    "question": "You need to send a GIF file to the browser. Which of the following lines should be \n called after ( or before) a call to response.getOutputStream(  )? ( Select one)",
    "options": [
      "response.setContentType( \"image/gif\"); Before",
      "response.setContentType( \"image/gif\"); After",
      "response.setDataType( \"image/gif\"); Before",
      "response.setDataType( \"image/gif\"); After"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response.setContentType( \"image/gif\"); Before"
    ]
  },
  {
    "question": "You need to send a GIF file to the browser. Which of the following lines should be \n called after ( or before) a call to response.getOutputStream(  )? ( Select one)",
    "options": [
      "response.setContentType( \"image/gif\"); Before",
      "response.setContentType( \"image/gif\"); After",
      "response.setDataType( \"image/gif\"); Before",
      "response.setDataType( \"image/gif\"); After"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response.setContentType( \"image/gif\"); Before"
    ]
  },
  {
    "question": "Select the correct statement.",
    "options": [
      "The url pattern of a servlet is a string that specifies the physical position of the servlet.",
      "The url pattern of a servlet must match the name of the servlet.",
      "The url pattern of a servlet must be different with the name of the servlet.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others."
    ]
  },
  {
    "question": "Select the correct statement.",
    "options": [
      "The url pattern of a servlet is a string that specifies the physical position of the servlet.",
      "The url pattern of a servlet must match the name of the servlet.",
      "The url pattern of a servlet must be different with the name of the servlet.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others."
    ]
  },
  {
    "question": "A web application is located in a directory named sales. Where should its deployment descriptor be located?",
    "options": [
      "sales/WEB-INF",
      "sales",
      "sales/deployment",
      "sales/WEB",
      "WEB-INF/sales"
    ],
    "description": "Choose 1 option",
    "answer": [
      "sales/WEB-INF"
    ]
  },
  {
    "question": "A web application is located in a directory named sales. Where should its deployment descriptor be located?",
    "options": [
      "sales/WEB-INF",
      "sales",
      "sales/deployment",
      "sales/WEB",
      "WEB-INF/sales"
    ],
    "description": "Choose 1 option",
    "answer": [
      "sales/WEB-INF"
    ]
  },
  {
    "question": "Your servlet class depends on a utility class named com.abc.TaxUtil. Where would you keep the TaxUtil.class file?",
    "options": [
      "WEB-INF",
      "WEB-INF/classes",
      "WEB-INF/lib",
      "WEB-INF/jars",
      "WEB-INF/classes/com/abc"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF/classes/com/abc"
    ]
  },
  {
    "question": "Your servlet class depends on a utility class named com.abc.TaxUtil. Where would you keep the TaxUtil.class file?",
    "options": [
      "WEB-INF",
      "WEB-INF/classes",
      "WEB-INF/lib",
      "WEB-INF/jars",
      "WEB-INF/classes/com/abc"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF/classes/com/abc"
    ]
  },
  {
    "question": "Which of the following lines would you use to include the output of Data-\n Servlet into any other servlet? ( Select one)",
    "options": [
      "RequestDispatcher rd = request.getRequestDispatcher( \n       \"/servlet/DataServlet\"); rd.include( request, response);",
      "RequestDispatcher rd = request.getRequestDispatcher( \n      \"/servlet/DataServlet\"); rd.include( response);",
      "RequestDispatcher rd = request.getRequestDispatcher(  );\n      rd.include( \"/servlet/DataServlet\", request, response);",
      "RequestDispatcher rd = request.getRequestDispatcher(  );\n      rd.include( \"/servlet/DataServlet\", response);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "RequestDispatcher rd = request.getRequestDispatcher( \n       \"/servlet/DataServlet\"); rd.include( request, response);"
    ]
  },
  {
    "question": "Which of the following lines would you use to include the output of Data-\n Servlet into any other servlet? ( Select one)",
    "options": [
      "RequestDispatcher rd = request.getRequestDispatcher( \n       \"/servlet/DataServlet\"); rd.include( request, response);",
      "RequestDispatcher rd = request.getRequestDispatcher( \n      \"/servlet/DataServlet\"); rd.include( response);",
      "RequestDispatcher rd = request.getRequestDispatcher(  );\n      rd.include( \"/servlet/DataServlet\", request, response);",
      "RequestDispatcher rd = request.getRequestDispatcher(  );\n      rd.include( \"/servlet/DataServlet\", response);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "RequestDispatcher rd = request.getRequestDispatcher( \n       \"/servlet/DataServlet\"); rd.include( request, response);"
    ]
  },
  {
    "question": "Consider the following code:\n    public void doGet( HttpServletRequest req,\n                      HttpServletResponse res)\n    {\n       HttpSession session = req.getSession(  );\n       ServletContext ctx = this.getServletContext(  );\n       if( req.getParameter( \"userid\") != null)\n       {\n          String userid = req.getParameter( \"userid\");\n          //1\n       }\n    }\n You want  the userid parameter to be available only to the requests that come \n from the same user. Which of the following lines would you insert at //1? \n ( Select one)",
    "options": [
      "session.setAttribute( \"userid\", userid);",
      "req.setAttribute( \"userid\", userid);",
      "ctx.addAttribute( \"userid\", userid);",
      "session.addAttribute( \"userid\", userid);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.setAttribute( \"userid\", userid);"
    ]
  },
  {
    "question": "Consider the following code:\n    public void doGet( HttpServletRequest req,\n                      HttpServletResponse res)\n    {\n       HttpSession session = req.getSession(  );\n       ServletContext ctx = this.getServletContext(  );\n       if( req.getParameter( \"userid\") != null)\n       {\n          String userid = req.getParameter( \"userid\");\n          //1\n       }\n    }\n You want  the userid parameter to be available only to the requests that come \n from the same user. Which of the following lines would you insert at //1? \n ( Select one)",
    "options": [
      "session.setAttribute( \"userid\", userid);",
      "req.setAttribute( \"userid\", userid);",
      "ctx.addAttribute( \"userid\", userid);",
      "session.addAttribute( \"userid\", userid);"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.setAttribute( \"userid\", userid);"
    ]
  },
  {
    "question": "Which of the following methods would you use to retrieve header values from a \n request? ( Select two)",
    "options": [
      "getHeader(  ) of ServletRequest",
      "getHeaderValue(  ) of ServletRequest",
      "getHeader(  ) of HttpServletRequest",
      "getHeaders(  ) of HttpServletRequest"
    ],
    "description": "Choose all that apply",
    "answer": [
      "getHeaderValue(  ) of ServletRequest",
      "getHeaders(  ) of HttpServletRequest"
    ]
  },
  {
    "question": "Which of the following methods would you use to retrieve header values from a \n request? ( Select two)",
    "options": [
      "getHeader(  ) of ServletRequest",
      "getHeaderValue(  ) of ServletRequest",
      "getHeader(  ) of HttpServletRequest",
      "getHeaders(  ) of HttpServletRequest"
    ],
    "description": "Choose all that apply",
    "answer": [
      "getHeaderValue(  ) of ServletRequest",
      "getHeaders(  ) of HttpServletRequest"
    ]
  },
  {
    "question": "Which of the following methods will erase a session object?",
    "options": [
      "session.invalidate(  );",
      "session.erase(  );",
      "session.destroy(  );",
      "session.end(  );",
      "session.close(  );"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.invalidate(  );"
    ]
  },
  {
    "question": "Which of the following methods will erase a session object?",
    "options": [
      "session.invalidate(  );",
      "session.erase(  );",
      "session.destroy(  );",
      "session.end(  );",
      "session.close(  );"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.invalidate(  );"
    ]
  },
  {
    "question": "Study the statements about web.xml file:1)The deployment descriptor file is called web.xml, and it must be located in the WEB-INF directory.2)web.xml is in XML ( extended markup language) format. Its root element is <web>.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only statement 1 is true."
    ]
  },
  {
    "question": "Study the statements about web.xml file:1)The deployment descriptor file is called web.xml, and it must be located in the WEB-INF directory.2)web.xml is in XML ( extended markup language) format. Its root element is <web>.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only statement 1 is true."
    ]
  },
  {
    "question": "Which of the following methods will be invoked on a session attribute that \n implements appropriate interfaces when the session is invalidated? ( Select one)",
    "options": [
      "sessionDestroyed of HttpSessionListener",
      "attributeRemoved of HttpSessionAttributeListener",
      "valueUnbound of HttpSessionBindingListener",
      "sessionWillPassivate of HttpSessionActivationListener"
    ],
    "description": "Choose 1 option",
    "answer": [
      "valueUnbound of HttpSessionBindingListener"
    ]
  },
  {
    "question": "Which of the following methods will be invoked on a session attribute that \n implements appropriate interfaces when the session is invalidated? ( Select one)",
    "options": [
      "sessionDestroyed of HttpSessionListener",
      "attributeRemoved of HttpSessionAttributeListener",
      "valueUnbound of HttpSessionBindingListener",
      "sessionWillPassivate of HttpSessionActivationListener"
    ],
    "description": "Choose 1 option",
    "answer": [
      "valueUnbound of HttpSessionBindingListener"
    ]
  },
  {
    "question": "Study the following statements:1) A session object\u00a0can be\u00a0accessed by\u00a0all web applications\u00a0in the same server.2) Session object exists longer than the application object.3) The request object lives longer than the session object.The statement ( 1) is ...., ( 2) is .... and ( 3) is .......",
    "options": [
      "None of the others",
      "false, false, true",
      "true, false, false",
      "true, false, true",
      "true, true, true"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "Study the following statements:1) A session object\u00a0can be\u00a0accessed by\u00a0all web applications\u00a0in the same server.2) Session object exists longer than the application object.3) The request object lives longer than the session object.The statement ( 1) is ...., ( 2) is .... and ( 3) is .......",
    "options": [
      "None of the others",
      "false, false, true",
      "true, false, false",
      "true, false, true",
      "true, true, true"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "Given that session is a valid HttpSession object: int max = session.getAttribute( \"MyReallyLongName\"); Which is true?",
    "options": [
      "Primitives CANNOT be stored in the HttpSession.",
      "The getAttribute method takes two arguments.",
      "The HttpSession attribute name must NOT exceed eight characters.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Primitives CANNOT be stored in the HttpSession."
    ]
  },
  {
    "question": "Given that session is a valid HttpSession object: int max = session.getAttribute( \"MyReallyLongName\"); Which is true?",
    "options": [
      "Primitives CANNOT be stored in the HttpSession.",
      "The getAttribute method takes two arguments.",
      "The HttpSession attribute name must NOT exceed eight characters.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Primitives CANNOT be stored in the HttpSession."
    ]
  },
  {
    "question": "_______ are small pieces of information that are deposited on the client by the server.",
    "options": [
      "Cookie",
      "Session",
      "Directive",
      "Scriptlet"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Cookie"
    ]
  },
  {
    "question": "_______ are small pieces of information that are deposited on the client by the server.",
    "options": [
      "Cookie",
      "Session",
      "Directive",
      "Scriptlet"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Cookie"
    ]
  },
  {
    "question": "What is the term for determining whether a user has access to a particular resource?",
    "options": [
      "Authorization",
      "Authentication",
      "Confidentiality",
      "Secrecy",
      "Privacy"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authorization"
    ]
  },
  {
    "question": "What is the term for determining whether a user has access to a particular resource?",
    "options": [
      "Authorization",
      "Authentication",
      "Confidentiality",
      "Secrecy",
      "Privacy"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Authorization"
    ]
  },
  {
    "question": "Which of the following statement is false about security mechanims used in Web application?",
    "options": [
      "In basic security mechanism, the Web browser never pops-up a login page",
      "In form-based authentication, an error page is shown at user\u2019s side if the login failed.",
      "In HTTP digest authentication, the server has the digest value of password based on a hash function.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "In basic security mechanism, the Web browser never pops-up a login page"
    ]
  },
  {
    "question": "Which of the following statement is false about security mechanims used in Web application?",
    "options": [
      "In basic security mechanism, the Web browser never pops-up a login page",
      "In form-based authentication, an error page is shown at user\u2019s side if the login failed.",
      "In HTTP digest authentication, the server has the digest value of password based on a hash function.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "In basic security mechanism, the Web browser never pops-up a login page"
    ]
  },
  {
    "question": "When using Form Based Authentication, which pair of fields must be used in the login form?",
    "options": [
      "j_user and j_password",
      "j_login and j_password",
      "j_username and j_password",
      "j_id and j_password"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_username and j_password"
    ]
  },
  {
    "question": "When using Form Based Authentication, which pair of fields must be used in the login form?",
    "options": [
      "j_user and j_password",
      "j_login and j_password",
      "j_username and j_password",
      "j_id and j_password"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_username and j_password"
    ]
  },
  {
    "question": "Which of the following statements regarding authentication mechanisms are correct? ( Select two)",
    "options": [
      "The HTTP Basic mechanism transmits the username/password \u201cin the open.\u201d",
      "The HTTP Basic mechanism uses HTML FORMs to collect usernames/passwords.",
      "The transmission method in the Basic and FORM mechanisms is the same.",
      "The method of capturing the usernames/passwords in the Basic and FORM mechanisms is the same."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The HTTP Basic mechanism transmits the username/password \u201cin the open.\u201d",
      "The transmission method in the Basic and FORM mechanisms is the same."
    ]
  },
  {
    "question": "Which of the following statements regarding authentication mechanisms are correct? ( Select two)",
    "options": [
      "The HTTP Basic mechanism transmits the username/password \u201cin the open.\u201d",
      "The HTTP Basic mechanism uses HTML FORMs to collect usernames/passwords.",
      "The transmission method in the Basic and FORM mechanisms is the same.",
      "The method of capturing the usernames/passwords in the Basic and FORM mechanisms is the same."
    ],
    "description": "Choose all that apply",
    "answer": [
      "The HTTP Basic mechanism transmits the username/password \u201cin the open.\u201d",
      "The transmission method in the Basic and FORM mechanisms is the same."
    ]
  },
  {
    "question": "Which of the followings correctly declares that the current page is an error page and also enables it to take part in a session?",
    "options": [
      "<%@ page pageType=\"errorPage\" session=\"required\" %>",
      "<%@ page isErrorPage=\"true\" session=\"mandatory\" %>",
      "<%@ page errorPage=\"true\" session=\"true\" %>",
      "<%@ page isErrorPage=\"true\" session=\"true\" %>",
      "<%@ page errorPage=\"true\" session=\"mandatory\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page isErrorPage=\"true\" session=\"true\" %>"
    ]
  },
  {
    "question": "Which of the followings correctly declares that the current page is an error page and also enables it to take part in a session?",
    "options": [
      "<%@ page pageType=\"errorPage\" session=\"required\" %>",
      "<%@ page isErrorPage=\"true\" session=\"mandatory\" %>",
      "<%@ page errorPage=\"true\" session=\"true\" %>",
      "<%@ page isErrorPage=\"true\" session=\"true\" %>",
      "<%@ page errorPage=\"true\" session=\"mandatory\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page isErrorPage=\"true\" session=\"true\" %>"
    ]
  },
  {
    "question": "Which method( s) must be generated in servlet when the jsp page is translated?",
    "options": [
      "All of the others.",
      "jspInit",
      "jspDestroy",
      "_jspService"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Which method( s) must be generated in servlet when the jsp page is translated?",
    "options": [
      "All of the others.",
      "jspInit",
      "jspDestroy",
      "_jspService"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "The JSP developer wants a comment to be visible in the final output to the browser. Which comment style needs to be used in a JSP page?",
    "options": [
      "<!-- this is a comment -->",
      "<% // this is a comment %>",
      "<%-- this is a comment --%>",
      "<% /** this is a comment **/ %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<!-- this is a comment -->"
    ]
  },
  {
    "question": "The JSP developer wants a comment to be visible in the final output to the browser. Which comment style needs to be used in a JSP page?",
    "options": [
      "<!-- this is a comment -->",
      "<% // this is a comment %>",
      "<%-- this is a comment --%>",
      "<% /** this is a comment **/ %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<!-- this is a comment -->"
    ]
  },
  {
    "question": "Which of the following exceptions may be thrown by the _jspService(  ) \n method? ( Select one)",
    "options": [
      "javax.servlet.ServletException",
      "javax.servlet.jsp.JSPException",
      "javax.servlet.ServletException and javax.servlet.jsp.JSPException",
      "javax.servlet.ServletException and java.io.IOException"
    ],
    "description": "Choose 1 option",
    "answer": [
      "javax.servlet.ServletException and java.io.IOException"
    ]
  },
  {
    "question": "Which of the following exceptions may be thrown by the _jspService(  ) \n method? ( Select one)",
    "options": [
      "javax.servlet.ServletException",
      "javax.servlet.jsp.JSPException",
      "javax.servlet.ServletException and javax.servlet.jsp.JSPException",
      "javax.servlet.ServletException and java.io.IOException"
    ],
    "description": "Choose 1 option",
    "answer": [
      "javax.servlet.ServletException and java.io.IOException"
    ]
  },
  {
    "question": "Which of the following tags can you use to print the value of an expression to the \n output stream? ( Select two)",
    "options": [
      "<%@    %>",
      "<%!    %>",
      "<%     %>",
      "<%=    %>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<%     %>",
      "<%=    %>"
    ]
  },
  {
    "question": "Which of the following tags can you use to print the value of an expression to the \n output stream? ( Select two)",
    "options": [
      "<%@    %>",
      "<%!    %>",
      "<%     %>",
      "<%=    %>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<%     %>",
      "<%=    %>"
    ]
  },
  {
    "question": "Which of the followings is a correct way to pass a parameter equivalent to the query string user=mary at request time to an included component?",
    "options": [
      "<jsp:include page=\"other.jsp\"><jsp:param paramName=\"user\" paramValue=\"mary\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param name=\"mary\" value=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param param=\"user\" value=\"mary\"/></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param user=\"mary\" /></jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>"
    ]
  },
  {
    "question": "Which of the followings is a correct way to pass a parameter equivalent to the query string user=mary at request time to an included component?",
    "options": [
      "<jsp:include page=\"other.jsp\"><jsp:param paramName=\"user\" paramValue=\"mary\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param name=\"mary\" value=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param param=\"user\" value=\"mary\"/></jsp:include>",
      "<jsp:include page=\"other.jsp\"><jsp:param user=\"mary\" /></jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\"><jsp:param value=\"mary\" name=\"user\" /></jsp:include>"
    ]
  },
  {
    "question": "Which of the following constitute valid ways of importing Java classes into JSP page source?",
    "options": [
      "<%! import java.util.*; %>",
      "<%@ import java.util.* %>",
      "<%@ page import=\"java.util.*\" %>",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page import=\"java.util.*\" %>"
    ]
  },
  {
    "question": "Which of the following constitute valid ways of importing Java classes into JSP page source?",
    "options": [
      "<%! import java.util.*; %>",
      "<%@ import java.util.* %>",
      "<%@ page import=\"java.util.*\" %>",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page import=\"java.util.*\" %>"
    ]
  },
  {
    "question": "Which of the following statements about the jsp:forward is false?",
    "options": [
      "In the source JSP file, the code before the jsp:forward element is not processed.",
      "The jsp:forward element is used to redirect the request object",
      "To redirect the request, the target file can be an HTML file, JSP file or a servlet",
      "To pass parameter names and values to the target file, you can use a jsp:param clause with jsp:forward element"
    ],
    "description": "Choose 1 option",
    "answer": [
      "In the source JSP file, the code before the jsp:forward element is not processed."
    ]
  },
  {
    "question": "Which of the following statements about the jsp:forward is false?",
    "options": [
      "In the source JSP file, the code before the jsp:forward element is not processed.",
      "The jsp:forward element is used to redirect the request object",
      "To redirect the request, the target file can be an HTML file, JSP file or a servlet",
      "To pass parameter names and values to the target file, you can use a jsp:param clause with jsp:forward element"
    ],
    "description": "Choose 1 option",
    "answer": [
      "In the source JSP file, the code before the jsp:forward element is not processed."
    ]
  },
  {
    "question": "Consider the contents of two JSP files:\n File 1: this.jsp \n   <html><body><pre> \n      <jsp:include page=\"that.jsp\" > \n         <jsp:param name=\"color\" value=\"red\" /> \n         <jsp:param name=\"color\" value=\"green\" /> \n      </jsp:include> \n   </pre></body></html> \n File 2: that.jsp \n   <% \n      String colors[] = request.getParameterValues( \"color\"); \n      for ( int i=0; i<colors.length; i++) \n      { \n    out.print( colors[i] + \" \"); \n      } \n   %> \n What will be the output of accessing the this.jsp file via the following URL? \n ( Select one)\n   http://localhost:8080/chapter12/this.jsp?color=blue",
    "options": [
      "blue",
      "red green",
      "red green blue",
      "blue red green"
    ],
    "description": "Choose 1 option",
    "answer": [
      "red green blue"
    ]
  },
  {
    "question": "Consider the contents of two JSP files:\n File 1: this.jsp \n   <html><body><pre> \n      <jsp:include page=\"that.jsp\" > \n         <jsp:param name=\"color\" value=\"red\" /> \n         <jsp:param name=\"color\" value=\"green\" /> \n      </jsp:include> \n   </pre></body></html> \n File 2: that.jsp \n   <% \n      String colors[] = request.getParameterValues( \"color\"); \n      for ( int i=0; i<colors.length; i++) \n      { \n    out.print( colors[i] + \" \"); \n      } \n   %> \n What will be the output of accessing the this.jsp file via the following URL? \n ( Select one)\n   http://localhost:8080/chapter12/this.jsp?color=blue",
    "options": [
      "blue",
      "red green",
      "red green blue",
      "blue red green"
    ],
    "description": "Choose 1 option",
    "answer": [
      "red green blue"
    ]
  },
  {
    "question": "Which of the following is a correct way to pass a parameter equivalent to the \n query string user=mary at request time to an included component? ( Select one)",
    "options": [
      "<jsp:include page=\"other.jsp\" > \n       <jsp:param paramName=\"user\" paramValue=\"mary\" />\n </jsp:include>",
      "<jsp:include page=\"other.jsp\" > \n       <jsp:param name=\"mary\" value=\"user\" />\n </jsp:include>",
      "<jsp:include page=\"other.jsp\" >\n       <jsp:param value=\"mary\" name=\"user\" />\n </jsp:include>",
      "<jsp:include page=\"other.jsp\" > \n       <jsp:param param=\"user\" value=\"mary\"/>\n  </jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\" >\n       <jsp:param value=\"mary\" name=\"user\" />\n </jsp:include>"
    ]
  },
  {
    "question": "Which of the following is a correct way to pass a parameter equivalent to the \n query string user=mary at request time to an included component? ( Select one)",
    "options": [
      "<jsp:include page=\"other.jsp\" > \n       <jsp:param paramName=\"user\" paramValue=\"mary\" />\n </jsp:include>",
      "<jsp:include page=\"other.jsp\" > \n       <jsp:param name=\"mary\" value=\"user\" />\n </jsp:include>",
      "<jsp:include page=\"other.jsp\" >\n       <jsp:param value=\"mary\" name=\"user\" />\n </jsp:include>",
      "<jsp:include page=\"other.jsp\" > \n       <jsp:param param=\"user\" value=\"mary\"/>\n  </jsp:include>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include page=\"other.jsp\" >\n       <jsp:param value=\"mary\" name=\"user\" />\n </jsp:include>"
    ]
  },
  {
    "question": "Consider the following <taglib> element, which appears in a deployment \n descriptor of a web application:\n    <taglib>\n     <taglib-uri>/accounting</taglib-uri>  \n     <taglib-location>/WEB-INF/tlds/SmartAccount.tld</taglib-location>\n    </taglib>\n Which of the following correctly specifies the use of the above tag library in a JSP \n page? ( Select one)",
    "options": [
      "<%@ taglib uri=\"/accounting\" prefix=\"acc\"%>",
      "<%@ taglib uri=\"/acc\" prefix=\"/accounting\"%>",
      "<%@ taglib name=\"/accounting\" prefix=\"acc\"%>",
      "<%@ taglib library=\"/accounting\" prefix=\"acc\"%>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ taglib uri=\"/accounting\" prefix=\"acc\"%>"
    ]
  },
  {
    "question": "Consider the following <taglib> element, which appears in a deployment \n descriptor of a web application:\n    <taglib>\n     <taglib-uri>/accounting</taglib-uri>  \n     <taglib-location>/WEB-INF/tlds/SmartAccount.tld</taglib-location>\n    </taglib>\n Which of the following correctly specifies the use of the above tag library in a JSP \n page? ( Select one)",
    "options": [
      "<%@ taglib uri=\"/accounting\" prefix=\"acc\"%>",
      "<%@ taglib uri=\"/acc\" prefix=\"/accounting\"%>",
      "<%@ taglib name=\"/accounting\" prefix=\"acc\"%>",
      "<%@ taglib library=\"/accounting\" prefix=\"acc\"%>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ taglib uri=\"/accounting\" prefix=\"acc\"%>"
    ]
  },
  {
    "question": "Which of the following are valid uses of the <jsp:useBean> action? ( Select two)",
    "options": [
      "<jsp:useBean id=\"address\" class=\"AddressBean\" name=\"address\" />",
      "<jsp:useBean id=\"address\" class=\"AddressBean\" \n            type=\"AddressBean\" />",
      "<jsp:useBean id=\"address\" beanName=\"AddressBean\" \n            class=\"AddressBean\" />",
      "<jsp:useBean id=\"address\" beanName=\"AddressBean\" \n            type=\"AddressBean\" />"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<jsp:useBean id=\"address\" class=\"AddressBean\" \n            type=\"AddressBean\" />",
      "<jsp:useBean id=\"address\" beanName=\"AddressBean\" \n            type=\"AddressBean\" />"
    ]
  },
  {
    "question": "Which of the following are valid uses of the <jsp:useBean> action? ( Select two)",
    "options": [
      "<jsp:useBean id=\"address\" class=\"AddressBean\" name=\"address\" />",
      "<jsp:useBean id=\"address\" class=\"AddressBean\" \n            type=\"AddressBean\" />",
      "<jsp:useBean id=\"address\" beanName=\"AddressBean\" \n            class=\"AddressBean\" />",
      "<jsp:useBean id=\"address\" beanName=\"AddressBean\" \n            type=\"AddressBean\" />"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<jsp:useBean id=\"address\" class=\"AddressBean\" \n            type=\"AddressBean\" />",
      "<jsp:useBean id=\"address\" beanName=\"AddressBean\" \n            type=\"AddressBean\" />"
    ]
  },
  {
    "question": "Which of the following statement about the JSTL core iteration custom tags are true?",
    "options": [
      "When looping over collections, a loop status object may be used in the tag body",
      "The body of the tag may contain EL code, but not scripting code",
      "It may iterate over a map, but only the key of the mapping may be used in the tag body",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "When looping over collections, a loop status object may be used in the tag body"
    ]
  },
  {
    "question": "Which of the following statement about the JSTL core iteration custom tags are true?",
    "options": [
      "When looping over collections, a loop status object may be used in the tag body",
      "The body of the tag may contain EL code, but not scripting code",
      "It may iterate over a map, but only the key of the mapping may be used in the tag body",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "When looping over collections, a loop status object may be used in the tag body"
    ]
  },
  {
    "question": "The following statement is true about which type of EJB? \u201cAll bean instances are equivalent when they are not involved in serving a client invoked method\u201d",
    "options": [
      "Stateful session bean",
      "Stateless session bean",
      "CMP",
      "BMP"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Stateless session bean"
    ]
  },
  {
    "question": "The following statement is true about which type of EJB? \u201cAll bean instances are equivalent when they are not involved in serving a client invoked method\u201d",
    "options": [
      "Stateful session bean",
      "Stateless session bean",
      "CMP",
      "BMP"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Stateless session bean"
    ]
  },
  {
    "question": "Which is NOT the party that need involved in the EJB Ecosystem?",
    "options": [
      "Bean Provider",
      "EJB Deployer",
      "System Administrator",
      "Application Assembler",
      "End users"
    ],
    "description": "Choose 1 option",
    "answer": [
      "End users"
    ]
  },
  {
    "question": "Which is NOT the party that need involved in the EJB Ecosystem?",
    "options": [
      "Bean Provider",
      "EJB Deployer",
      "System Administrator",
      "Application Assembler",
      "End users"
    ],
    "description": "Choose 1 option",
    "answer": [
      "End users"
    ]
  },
  {
    "question": "EJB 3.0 specifications are implemented in: ( Select one)",
    "options": [
      "Java EE 1.4",
      "Java EE 5",
      "Java EE 6",
      "None of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Java EE 5"
    ]
  },
  {
    "question": "EJB 3.0 specifications are implemented in: ( Select one)",
    "options": [
      "Java EE 1.4",
      "Java EE 5",
      "Java EE 6",
      "None of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Java EE 5"
    ]
  },
  {
    "question": "Where can the initial number of instances of session beans to be pooled in EJB container specified?",
    "options": [
      "The number is specified using EJB3 annotaion",
      "The number is specified in web.xml configuration file",
      "The number is specified in the external deployment descriptor",
      "None of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The number is specified in the external deployment descriptor"
    ]
  },
  {
    "question": "Where can the initial number of instances of session beans to be pooled in EJB container specified?",
    "options": [
      "The number is specified using EJB3 annotaion",
      "The number is specified in web.xml configuration file",
      "The number is specified in the external deployment descriptor",
      "None of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The number is specified in the external deployment descriptor"
    ]
  },
  {
    "question": "What are the restrictions imposed by the EJB 3.x container on the implementation of session bean remote business interfaces? ( Select one)",
    "options": [
      "Session bean remote business interfaces must be marked with @Remote annotation",
      "Session bean remote business interfaces have to extend java.rmi.Remote",
      "In all method definitions you may only declare RMI/IIOP compatible arguments and return types",
      "Session bean remote business interfaces should throw java.rmi.RemoteException"
    ],
    "description": "Choose 1 option",
    "answer": [
      "In all method definitions you may only declare RMI/IIOP compatible arguments and return types"
    ]
  },
  {
    "question": "What are the restrictions imposed by the EJB 3.x container on the implementation of session bean remote business interfaces? ( Select one)",
    "options": [
      "Session bean remote business interfaces must be marked with @Remote annotation",
      "Session bean remote business interfaces have to extend java.rmi.Remote",
      "In all method definitions you may only declare RMI/IIOP compatible arguments and return types",
      "Session bean remote business interfaces should throw java.rmi.RemoteException"
    ],
    "description": "Choose 1 option",
    "answer": [
      "In all method definitions you may only declare RMI/IIOP compatible arguments and return types"
    ]
  },
  {
    "question": "What do you need to create a EJB3 session bean? ( Select three)",
    "options": [
      "Declare a business interface and annotate it with @Local or @Remote",
      "Write the session bean class itself that implements the business logic",
      "Annotate the session bean with @Session",
      "Annotate the session bean with @Stateful or @Stateless"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Declare a business interface and annotate it with @Local or @Remote",
      "Write the session bean class itself that implements the business logic",
      "Annotate the session bean with @Stateful or @Stateless"
    ]
  },
  {
    "question": "What do you need to create a EJB3 session bean? ( Select three)",
    "options": [
      "Declare a business interface and annotate it with @Local or @Remote",
      "Write the session bean class itself that implements the business logic",
      "Annotate the session bean with @Session",
      "Annotate the session bean with @Stateful or @Stateless"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Declare a business interface and annotate it with @Local or @Remote",
      "Write the session bean class itself that implements the business logic",
      "Annotate the session bean with @Stateful or @Stateless"
    ]
  },
  {
    "question": "In EJB, ejb-jar.xml deployment descriptor file must be placed in ___________ folder.",
    "options": [
      "META-INF",
      "WEB-INF",
      "meta-inf",
      "web-inf"
    ],
    "description": "Choose 1 option",
    "answer": [
      "META-INF"
    ]
  },
  {
    "question": "In EJB, ejb-jar.xml deployment descriptor file must be placed in ___________ folder.",
    "options": [
      "META-INF",
      "WEB-INF",
      "meta-inf",
      "web-inf"
    ],
    "description": "Choose 1 option",
    "answer": [
      "META-INF"
    ]
  },
  {
    "question": "What are characteristics of a JPA Entity? ( Select three)",
    "options": [
      "it manages persistent data in concert with a JPA entity manager;",
      "It is EJB 3.0-compliant;",
      "It allows Java EE applications to process messages asynchronously",
      "It can be uniquely identified by a primary key."
    ],
    "description": "Choose all that apply",
    "answer": [
      "it manages persistent data in concert with a JPA entity manager;",
      "It is EJB 3.0-compliant;",
      "It can be uniquely identified by a primary key."
    ]
  },
  {
    "question": "What are characteristics of a JPA Entity? ( Select three)",
    "options": [
      "it manages persistent data in concert with a JPA entity manager;",
      "It is EJB 3.0-compliant;",
      "It allows Java EE applications to process messages asynchronously",
      "It can be uniquely identified by a primary key."
    ],
    "description": "Choose all that apply",
    "answer": [
      "it manages persistent data in concert with a JPA entity manager;",
      "It is EJB 3.0-compliant;",
      "It can be uniquely identified by a primary key."
    ]
  },
  {
    "question": "What is NOT true about Entity beans? ( Select one)",
    "options": [
      "Entity beans can survive a system crash",
      "Entity beans are not pooled",
      "Entity beans cannot be stateless",
      "Entity beans are transactional"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Entity beans are not pooled"
    ]
  },
  {
    "question": "Which of followings is used to create a MessageConsumer object in JMS?",
    "options": [
      "Connection",
      "ConnectionFactory",
      "MessageConsumer",
      "MessageProducer",
      "Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session"
    ]
  },
  {
    "question": "What is NOT true about Entity beans? ( Select one)",
    "options": [
      "Entity beans can survive a system crash",
      "Entity beans are not pooled",
      "Entity beans cannot be stateless",
      "Entity beans are transactional"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Entity beans are not pooled"
    ]
  },
  {
    "question": "Which of followings is used to create a MessageConsumer object in JMS?",
    "options": [
      "Connection",
      "ConnectionFactory",
      "MessageConsumer",
      "MessageProducer",
      "Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session"
    ]
  },
  {
    "question": "What is not a state in the EJB 3 Entity beans life cycle states? ( Select one)",
    "options": [
      "Does not exist",
      "Removed",
      "Passive",
      "Detached"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Passive"
    ]
  },
  {
    "question": "What is not a state in the EJB 3 Entity beans life cycle states? ( Select one)",
    "options": [
      "Does not exist",
      "Removed",
      "Passive",
      "Detached"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Passive"
    ]
  },
  {
    "question": "Entity bean is __________",
    "options": [
      "a persistent data component",
      "an application logic component",
      "an object-relational mapping",
      "a database object"
    ],
    "description": "Choose 1 option",
    "answer": [
      "a persistent data component"
    ]
  },
  {
    "question": "Entity bean is __________",
    "options": [
      "a persistent data component",
      "an application logic component",
      "an object-relational mapping",
      "a database object"
    ],
    "description": "Choose 1 option",
    "answer": [
      "a persistent data component"
    ]
  },
  {
    "question": "Message Driven Beans ( MDBs) can be directly accessed by internal or external clients.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "Message Driven Beans ( MDBs) can be directly accessed by internal or external clients.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "Message Driven Beans ( MDBs) are designed to function as: ( Select one)",
    "options": [
      "Synchronous message publisher",
      "Synchronous message consumer",
      "Asynchronous message publisher",
      "Asynchronous message consumer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Asynchronous message consumer"
    ]
  },
  {
    "question": "Message Driven Beans ( MDBs) are designed to function as: ( Select one)",
    "options": [
      "Synchronous message publisher",
      "Synchronous message consumer",
      "Asynchronous message publisher",
      "Asynchronous message consumer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Asynchronous message consumer"
    ]
  },
  {
    "question": "With respect to message-driven bean, when the queue receives a message, the EJB container invokes ...",
    "options": [
      "the message listener method, named as onMessage( ,...)",
      "the method ejbCreate( ...) to create a bean instance.",
      "the method init( ...) to initialize a bean instance.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "the message listener method, named as onMessage( ,...)"
    ]
  },
  {
    "question": "With respect to message-driven bean, when the queue receives a message, the EJB container invokes ...",
    "options": [
      "the message listener method, named as onMessage( ,...)",
      "the method ejbCreate( ...) to create a bean instance.",
      "the method init( ...) to initialize a bean instance.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "the message listener method, named as onMessage( ,...)"
    ]
  },
  {
    "question": "Select the word to replace ??? to make the diagram about messaging domain correct.",
    "options": [
      "Queue",
      "Topic",
      "PT2 (  P2P)",
      "Pub/Sub"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Topic"
    ]
  },
  {
    "question": "Select the word to replace ??? to make the diagram about messaging domain correct.",
    "options": [
      "Queue",
      "Topic",
      "PT2 (  P2P)",
      "Pub/Sub"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Topic"
    ]
  },
  {
    "question": "Which statements about JMS are true?",
    "options": [
      "JMS enhances access to email services.",
      "JMS uses JMX to create a connectionFactory.",
      "JMS uses JNDI to find the destination.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "JMS uses JNDI to find the destination."
    ]
  },
  {
    "question": "Which statements about JMS are true?",
    "options": [
      "JMS enhances access to email services.",
      "JMS uses JMX to create a connectionFactory.",
      "JMS uses JNDI to find the destination.",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "JMS uses JNDI to find the destination."
    ]
  },
  {
    "question": "Which of following statements is wrong about the requirements following in the declaration of an entity class?",
    "options": [
      "The class must be annotated with the javax.persistence.Entity annotation.",
      "The class must have a public or protected, no-argument constructor.",
      "The class must implement the Serializable interface.",
      "The class must be declared final."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The class must be declared final."
    ]
  },
  {
    "question": "Which of following statements is wrong about the requirements following in the declaration of an entity class?",
    "options": [
      "The class must be annotated with the javax.persistence.Entity annotation.",
      "The class must have a public or protected, no-argument constructor.",
      "The class must implement the Serializable interface.",
      "The class must be declared final."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The class must be declared final."
    ]
  },
  {
    "question": "Which method in the HttpServlet class services the HTTP POST request?",
    "options": [
      "doPost( HttpServletRequest, HttpServletResponse)",
      "doPOST( HttpServletRequest, HttpServletResponse)",
      "doPost( ServletRequest, ServletResponse)",
      "doPOST( ServletRequest, ServletResponse)",
      "servicePost( HttpServletRequest, HttpServletResponse)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doPost( HttpServletRequest, HttpServletResponse)"
    ]
  },
  {
    "question": "Which method in the HttpServlet class services the HTTP POST request?",
    "options": [
      "doPost( HttpServletRequest, HttpServletResponse)",
      "doPOST( HttpServletRequest, HttpServletResponse)",
      "doPost( ServletRequest, ServletResponse)",
      "doPOST( ServletRequest, ServletResponse)",
      "servicePost( HttpServletRequest, HttpServletResponse)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doPost( HttpServletRequest, HttpServletResponse)"
    ]
  },
  {
    "question": "Which of the following methods can be used to add cookies to a servlet response?",
    "options": [
      "HttpServletResponse.addCookie( Cookie cookie)",
      "ServletResponse.addCookie( Cookie cookie)",
      "HttpServletResponse.addCookie( String contents)",
      "ServletResponse.addCookie( String contents)",
      "ServletResponse.addHeader( String name, String value)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.addCookie( Cookie cookie)"
    ]
  },
  {
    "question": "Which of the following methods can be used to add cookies to a servlet response?",
    "options": [
      "HttpServletResponse.addCookie( Cookie cookie)",
      "ServletResponse.addCookie( Cookie cookie)",
      "HttpServletResponse.addCookie( String contents)",
      "ServletResponse.addCookie( String contents)",
      "ServletResponse.addHeader( String name, String value)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.addCookie( Cookie cookie)"
    ]
  },
  {
    "question": "Which of the following error code indicates that the HTTP server is temporarily overloaded, and unable to handle the request?",
    "options": [
      "404",
      "503",
      "504",
      "403"
    ],
    "description": "Choose 1 option",
    "answer": [
      "503"
    ]
  },
  {
    "question": "Which of the following error code indicates that the HTTP server is temporarily overloaded, and unable to handle the request?",
    "options": [
      "404",
      "503",
      "504",
      "403"
    ],
    "description": "Choose 1 option",
    "answer": [
      "503"
    ]
  },
  {
    "question": "In the web deployment descriptor, the url-pattern tag of servlet-mapping tag is used for _________",
    "options": [
      "accessing or calling the servlet instance",
      "applying the security on the servlet instance",
      "applying the filter on the servlet instance",
      "informing server about the location of servlet in web application directory"
    ],
    "description": "Choose 1 option",
    "answer": [
      "accessing or calling the servlet instance"
    ]
  },
  {
    "question": "In the web deployment descriptor, the url-pattern tag of servlet-mapping tag is used for _________",
    "options": [
      "accessing or calling the servlet instance",
      "applying the security on the servlet instance",
      "applying the filter on the servlet instance",
      "informing server about the location of servlet in web application directory"
    ],
    "description": "Choose 1 option",
    "answer": [
      "accessing or calling the servlet instance"
    ]
  },
  {
    "question": "Which request headers identifies the MIME types that the browser prefers?",
    "options": [
      "Accept",
      "Accept-Charset",
      "Host",
      "Referer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Accept"
    ]
  },
  {
    "question": "Which request headers identifies the MIME types that the browser prefers?",
    "options": [
      "Accept",
      "Accept-Charset",
      "Host",
      "Referer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Accept"
    ]
  },
  {
    "question": "Which followings is a folder that contains jar files in web application?",
    "options": [
      "/lib",
      "/WEB-INF/lib",
      "/WEB-INF/jar",
      "/WEB-INF/classes",
      "/META-INF/lib"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF/lib"
    ]
  },
  {
    "question": "Which followings is a folder that contains jar files in web application?",
    "options": [
      "/lib",
      "/WEB-INF/lib",
      "/WEB-INF/jar",
      "/WEB-INF/classes",
      "/META-INF/lib"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF/lib"
    ]
  },
  {
    "question": "A ________has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number.",
    "options": [
      "cookie",
      "session",
      "request",
      "response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "cookie"
    ]
  },
  {
    "question": "A ________has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number.",
    "options": [
      "cookie",
      "session",
      "request",
      "response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "cookie"
    ]
  },
  {
    "question": "Which of the followings is a correct syntax of the method that is used to get the initialized parameter in ServletContext or ServletConfig?",
    "options": [
      "String getInitParameter( String name);",
      "String getContextParameter( String name);",
      "String getInitializedParameter( String name);",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "String getInitParameter( String name);"
    ]
  },
  {
    "question": "Which of the followings is a correct syntax of the method that is used to get the initialized parameter in ServletContext or ServletConfig?",
    "options": [
      "String getInitParameter( String name);",
      "String getContextParameter( String name);",
      "String getInitializedParameter( String name);",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "String getInitParameter( String name);"
    ]
  },
  {
    "question": "In request dispatcher, both ______ and _______ methods are used for servlet communication",
    "options": [
      "include/ forward",
      "forward/ sendRedirect",
      "include/ sendRedirect",
      "forward/ response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "include/ forward"
    ]
  },
  {
    "question": "In request dispatcher, both ______ and _______ methods are used for servlet communication",
    "options": [
      "include/ forward",
      "forward/ sendRedirect",
      "include/ sendRedirect",
      "forward/ response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "include/ forward"
    ]
  },
  {
    "question": "Study the statements: \n 1)The special directory /WEB-INF/lib contains Java class files\u2014servlets and supporting code.\n 2)The special directory /WEB-INF/classes contains JAR files with supporting libraries of code.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are not true."
    ]
  },
  {
    "question": "Study the statements: \n 1)The special directory /WEB-INF/lib contains Java class files\u2014servlets and supporting code.\n 2)The special directory /WEB-INF/classes contains JAR files with supporting libraries of code.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are not true."
    ]
  },
  {
    "question": "When a specific request is processed, some servlets must be called and they need to access some common data. These common data should be put to\u00a0dynamic variables in the ..... scope (  select the most correct option).",
    "options": [
      "request",
      "session",
      "application",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "request"
    ]
  },
  {
    "question": "When a specific request is processed, some servlets must be called and they need to access some common data. These common data should be put to\u00a0dynamic variables in the ..... scope (  select the most correct option).",
    "options": [
      "request",
      "session",
      "application",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "request"
    ]
  },
  {
    "question": "Consider the following code:\n    public void doGet( HttpServletRequest req,\n                      HttpServletResponse res)\n                      throws IOException\n    {\n      if( req.getParameter( \"switch\") == null)\n       {\n         //1\n       }\n       else\n       {\n       //other code\n       }\n    }\n Which of the following lines can be inserted at //1 so that the request is redi-\n rected to the collectinfo.html page? ( Select one)",
    "options": [
      "req.sendRedirect( \"collectinfo.html\");",
      "req.redirect( \"collectinfo.html\");",
      "res.direct( \"collectinfo.html\");",
      "res.sendRedirect( \"collectinfo.html\");"
    ],
    "description": "Choose 1 option",
    "answer": [
      "res.sendRedirect( \"collectinfo.html\");"
    ]
  },
  {
    "question": "Consider the following code:\n    public void doGet( HttpServletRequest req,\n                      HttpServletResponse res)\n                      throws IOException\n    {\n      if( req.getParameter( \"switch\") == null)\n       {\n         //1\n       }\n       else\n       {\n       //other code\n       }\n    }\n Which of the following lines can be inserted at //1 so that the request is redi-\n rected to the collectinfo.html page? ( Select one)",
    "options": [
      "req.sendRedirect( \"collectinfo.html\");",
      "req.redirect( \"collectinfo.html\");",
      "res.direct( \"collectinfo.html\");",
      "res.sendRedirect( \"collectinfo.html\");"
    ],
    "description": "Choose 1 option",
    "answer": [
      "res.sendRedirect( \"collectinfo.html\");"
    ]
  },
  {
    "question": "Which defines the welcome files in a web application deployment descriptor?",
    "options": [
      "<welcome-file-list>\n <welcome-file> welcome .jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>",
      "<welcome>\n <welcome- file >/ welcome - jsp</welcome-file>\n </welcome>\n <welcome>\n <welcome-file>/index-html</welcome-file>\n </welcome>",
      "<welcome-file-list>\n <welcome-file> welcome .jsp</welcome-file>\n <welcome-file>/index.html</welcome-file>\n </welcome-file-list>",
      "<welcome>\n <welcome-file>welcome.jsp</welcome </we1come >\n </welcome >\n <welcome-file>index.html<//welcome-file>\n </we1come >"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<welcome-file-list>\n <welcome-file> welcome .jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>"
    ]
  },
  {
    "question": "Which defines the welcome files in a web application deployment descriptor?",
    "options": [
      "<welcome-file-list>\n <welcome-file> welcome .jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>",
      "<welcome>\n <welcome- file >/ welcome - jsp</welcome-file>\n </welcome>\n <welcome>\n <welcome-file>/index-html</welcome-file>\n </welcome>",
      "<welcome-file-list>\n <welcome-file> welcome .jsp</welcome-file>\n <welcome-file>/index.html</welcome-file>\n </welcome-file-list>",
      "<welcome>\n <welcome-file>welcome.jsp</welcome </we1come >\n </welcome >\n <welcome-file>index.html<//welcome-file>\n </we1come >"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<welcome-file-list>\n <welcome-file> welcome .jsp</welcome-file>\n <welcome-file>index.html</welcome-file>\n </welcome-file-list>"
    ]
  },
  {
    "question": "Which of the following interfaces or classes is used to retrieve the session associated with a user?",
    "options": [
      "ServletConfig",
      "ServletContext",
      "HttpServlet",
      "HttpServletRequest",
      "HttpServletResponse"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "Which of the following interfaces or classes is used to retrieve the session associated with a user?",
    "options": [
      "ServletConfig",
      "ServletContext",
      "HttpServlet",
      "HttpServletRequest",
      "HttpServletResponse"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "Which method is required for using the URL rewriting mechanism of implementing session support?",
    "options": [
      "HttpServletRequest.encodeURL(  )",
      "HttpServletRequest.rewriteURL(  )",
      "HttpServletResponse.encodeURL(  )",
      "HttpServletResponse.rewriteURL(  )",
      "HttpServletResponse.decodeURL(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.encodeURL(  )"
    ]
  },
  {
    "question": "Which method is required for using the URL rewriting mechanism of implementing session support?",
    "options": [
      "HttpServletRequest.encodeURL(  )",
      "HttpServletRequest.rewriteURL(  )",
      "HttpServletResponse.encodeURL(  )",
      "HttpServletResponse.rewriteURL(  )",
      "HttpServletResponse.decodeURL(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.encodeURL(  )"
    ]
  },
  {
    "question": "Which of the following code snippets, when inserted in the doGet(  ) method, \n will correctly count the number of GET requests made by a user? ( Select one)",
    "options": [
      "HttpSession session = request.getSession(  );\n int count = session.getAttribute( \"count\");\n session.setAttribute( \"count\", count++);",
      "HttpSession session = request.getSession(  );\n int count = ( int) session.getAttribute( \"count\");\n session.setAttribute( \"count\", count++)",
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", count++);",
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", new Integer( count++));"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", new Integer( count++));"
    ]
  },
  {
    "question": "Which of the following code snippets, when inserted in the doGet(  ) method, \n will correctly count the number of GET requests made by a user? ( Select one)",
    "options": [
      "HttpSession session = request.getSession(  );\n int count = session.getAttribute( \"count\");\n session.setAttribute( \"count\", count++);",
      "HttpSession session = request.getSession(  );\n int count = ( int) session.getAttribute( \"count\");\n session.setAttribute( \"count\", count++)",
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", count++);",
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", new Integer( count++));"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpSession session = request.getSession(  );\n int count = ( ( Integer) session.getAttribute( \"count\")).intValue(  );\n session.setAttribute( \"count\", new Integer( count++));"
    ]
  },
  {
    "question": "Which of the following methods will expunge a session object? ( Select one)",
    "options": [
      "session.invalidate(  );",
      "session.expunge(  );",
      "session.destroy(  );",
      "session.end(  );"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.invalidate(  );"
    ]
  },
  {
    "question": "Which of the following methods will expunge a session object? ( Select one)",
    "options": [
      "session.invalidate(  );",
      "session.expunge(  );",
      "session.destroy(  );",
      "session.end(  );"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session.invalidate(  );"
    ]
  },
  {
    "question": "Study the statements:1)Every web application within a web container has a unique context path.2)The context path and any directories you choose to create within it contain resources that are accessible through HTTP.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are  not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true."
    ]
  },
  {
    "question": "Study the statements:1)Every web application within a web container has a unique context path.2)The context path and any directories you choose to create within it contain resources that are accessible through HTTP.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are  not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true."
    ]
  },
  {
    "question": "Which one of the following must be done before authorization takes place?",
    "options": [
      "Data validation",
      "User authentication",
      "Data encryption",
      "Data compression",
      "Auditing"
    ],
    "description": "Choose 1 option",
    "answer": [
      "User authentication"
    ]
  },
  {
    "question": "Which one of the following must be done before authorization takes place?",
    "options": [
      "Data validation",
      "User authentication",
      "Data encryption",
      "Data compression",
      "Auditing"
    ],
    "description": "Choose 1 option",
    "answer": [
      "User authentication"
    ]
  },
  {
    "question": "The session time-out value is controlled in which way( s)?",
    "options": [
      "Application Server Global Default.",
      "Web Application Default.",
      "Individual Session Setting.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "The session time-out value is controlled in which way( s)?",
    "options": [
      "Application Server Global Default.",
      "Web Application Default.",
      "Individual Session Setting.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Digest authentiction is based on ______",
    "options": [
      "A hash function and encryption",
      "A plaintext and SSL",
      "A decoded password and encrypted username",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A hash function and encryption"
    ]
  },
  {
    "question": "Digest authentiction is based on ______",
    "options": [
      "A hash function and encryption",
      "A plaintext and SSL",
      "A decoded password and encrypted username",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A hash function and encryption"
    ]
  },
  {
    "question": "When adding a <login-config> element to a web application deployment descriptor, the inclusion of which sub-element requires the definition of an error page?",
    "options": [
      "<form-login-config>",
      "<realm-name>",
      "<user-data-constaint>",
      "<auth-method>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<form-login-config>"
    ]
  },
  {
    "question": "When adding a <login-config> element to a web application deployment descriptor, the inclusion of which sub-element requires the definition of an error page?",
    "options": [
      "<form-login-config>",
      "<realm-name>",
      "<user-data-constaint>",
      "<auth-method>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<form-login-config>"
    ]
  },
  {
    "question": "Identify the authentication mechanisms that are built into the HTTP specification. ( Select two)",
    "options": [
      "Basic",
      "Client-Cert",
      "FORM",
      "Digest"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Basic",
      "Digest"
    ]
  },
  {
    "question": "Identify the authentication mechanisms that are built into the HTTP specification. ( Select two)",
    "options": [
      "Basic",
      "Client-Cert",
      "FORM",
      "Digest"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Basic",
      "Digest"
    ]
  },
  {
    "question": "When using form-based authentication, which action must be used in the login form?",
    "options": [
      "j_securitycheck",
      "jsecurity_check",
      "j_security_check",
      "jsecuritycheck"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_security_check"
    ]
  },
  {
    "question": "When using form-based authentication, which action must be used in the login form?",
    "options": [
      "j_securitycheck",
      "jsecurity_check",
      "j_security_check",
      "jsecuritycheck"
    ],
    "description": "Choose 1 option",
    "answer": [
      "j_security_check"
    ]
  },
  {
    "question": "Consider the following code and select the correct statement about it from the options below.<html><body><%! int aNum=5 %>The value of aNum is <%= aNum %></body></html>",
    "options": [
      "It will print \"The value of aNum is 5\" to the output.",
      "It will flag a compile-time error because of an incorrect declaration.",
      "It will throw a runtime exception while executing the expression.",
      "It will not flag any compile time or runtime errors and will not print anything to the output.",
      "If you remove \"!\", it will not flag any compile time or runtime errors."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It will flag a compile-time error because of an incorrect declaration."
    ]
  },
  {
    "question": "Consider the following code and select the correct statement about it from the options below.<html><body><%! int aNum=5 %>The value of aNum is <%= aNum %></body></html>",
    "options": [
      "It will print \"The value of aNum is 5\" to the output.",
      "It will flag a compile-time error because of an incorrect declaration.",
      "It will throw a runtime exception while executing the expression.",
      "It will not flag any compile time or runtime errors and will not print anything to the output.",
      "If you remove \"!\", it will not flag any compile time or runtime errors."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It will flag a compile-time error because of an incorrect declaration."
    ]
  },
  {
    "question": "Which of the following methods is defined by the JSP engine?",
    "options": [
      "jspInit(  )",
      "_jspService(  )",
      "_jspService( ServletRequest, ServletResponse)",
      "_jspService( HttpServletRequest, HttpServletResponse)",
      "jspDestroy(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "_jspService( HttpServletRequest, HttpServletResponse)"
    ]
  },
  {
    "question": "Which of the following methods is defined by the JSP engine?",
    "options": [
      "jspInit(  )",
      "_jspService(  )",
      "_jspService( ServletRequest, ServletResponse)",
      "_jspService( HttpServletRequest, HttpServletResponse)",
      "jspDestroy(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "_jspService( HttpServletRequest, HttpServletResponse)"
    ]
  },
  {
    "question": "What is the initial contact point for handling a web request in a Page-Centric architecture?",
    "options": [
      "A JSP page.",
      "A Java bean.",
      "A servlet.",
      "A session manager."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A JSP page."
    ]
  },
  {
    "question": "What is the initial contact point for handling a web request in a Page-Centric architecture?",
    "options": [
      "A JSP page.",
      "A Java bean.",
      "A servlet.",
      "A session manager."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A JSP page."
    ]
  },
  {
    "question": "A JSP page needs to perform some operations before servicing the first request. Where can this be done?",
    "options": [
      "within the page directive of the JSP page",
      "within a scriptlet at the top of the JSP page",
      "within a method called jspInit",
      "within the <jsp:initialize> XML element"
    ],
    "description": "Choose 1 option",
    "answer": [
      "within a method called jspInit"
    ]
  },
  {
    "question": "A JSP page needs to perform some operations before servicing the first request. Where can this be done?",
    "options": [
      "within the page directive of the JSP page",
      "within a scriptlet at the top of the JSP page",
      "within a method called jspInit",
      "within the <jsp:initialize> XML element"
    ],
    "description": "Choose 1 option",
    "answer": [
      "within a method called jspInit"
    ]
  },
  {
    "question": "A JavaBeans component has the following field: private boolean enabled; Which pairs of method declarations follow the JavaBeans standard for accessing this field? ( Choose one.)",
    "options": [
      "public void setEnabled(  boolean enabled)  public boolean getEnabled(  )",
      "public void setEnabled(  boolean enabled) public void isEnabled(  )",
      "public Boolean setEnabled(  boolean enabled)  public boolean sEnabled(  )",
      "public boolean setEnabled(  boolean enabled)  public boolean getEnabled(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void setEnabled(  boolean enabled)  public boolean getEnabled(  )"
    ]
  },
  {
    "question": "A JavaBeans component has the following field: private boolean enabled; Which pairs of method declarations follow the JavaBeans standard for accessing this field? ( Choose one.)",
    "options": [
      "public void setEnabled(  boolean enabled)  public boolean getEnabled(  )",
      "public void setEnabled(  boolean enabled) public void isEnabled(  )",
      "public Boolean setEnabled(  boolean enabled)  public boolean sEnabled(  )",
      "public boolean setEnabled(  boolean enabled)  public boolean getEnabled(  )"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void setEnabled(  boolean enabled)  public boolean getEnabled(  )"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Declarations?",
    "options": [
      "<%! code %>",
      "<% code %>",
      "<%= code %>",
      "None of these"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%! code %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Declarations?",
    "options": [
      "<%! code %>",
      "<% code %>",
      "<%= code %>",
      "None of these"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%! code %>"
    ]
  },
  {
    "question": "Given a web application in which the request parameter productID contains a product identifier. Which TWO EL expressions evaluate the value of the productID?",
    "options": [
      "${param.productID}",
      "${paramValues.productID[0]}",
      "${params.productID}",
      "${params.productID[1]}",
      "${paramValues.productID}"
    ],
    "description": "Choose all that apply",
    "answer": [
      "${param.productID}",
      "${paramValues.productID[0]}"
    ]
  },
  {
    "question": "Given a web application in which the request parameter productID contains a product identifier. Which TWO EL expressions evaluate the value of the productID?",
    "options": [
      "${param.productID}",
      "${paramValues.productID[0]}",
      "${params.productID}",
      "${params.productID[1]}",
      "${paramValues.productID}"
    ],
    "description": "Choose all that apply",
    "answer": [
      "${param.productID}",
      "${paramValues.productID[0]}"
    ]
  },
  {
    "question": "Which of the following statements about the jsp:include are true?",
    "options": [
      "jsp:include is designed to include only a static file in a JSP file.",
      "In case of static file, the content is excluded from the calling JSP file.",
      "In case of a dynamic file, it acts on a request and sends back a result that is included in the JSP page.",
      "It is easy to determine whether a file is static or dynamic from a path name."
    ],
    "description": "Choose 1 option",
    "answer": [
      "In case of a dynamic file, it acts on a request and sends back a result that is included in the JSP page."
    ]
  },
  {
    "question": "Which of the following statements about the jsp:include are true?",
    "options": [
      "jsp:include is designed to include only a static file in a JSP file.",
      "In case of static file, the content is excluded from the calling JSP file.",
      "In case of a dynamic file, it acts on a request and sends back a result that is included in the JSP page.",
      "It is easy to determine whether a file is static or dynamic from a path name."
    ],
    "description": "Choose 1 option",
    "answer": [
      "In case of a dynamic file, it acts on a request and sends back a result that is included in the JSP page."
    ]
  },
  {
    "question": "Which of the following statements about the standard actions is true?",
    "options": [
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "JSP uses standard actions for calling the JavaBean methods.",
      "The attributes in standard action can not distinguish between uppercase and lowercase.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSP uses standard actions for calling the JavaBean methods."
    ]
  },
  {
    "question": "Which of the following statements about the standard actions is true?",
    "options": [
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "JSP uses standard actions for calling the JavaBean methods.",
      "The attributes in standard action can not distinguish between uppercase and lowercase.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSP uses standard actions for calling the JavaBean methods."
    ]
  },
  {
    "question": "Which of the following statements about the jsp:useBean is ( are) true?",
    "options": [
      "The jsp:useBean is used to locate or instantiate a JavaBean component",
      "The jsp:useBean first tries to locate an instance of the bean, otherwise it instantiates the Bean from a class",
      "To locate and instantiate the Bean, the jsp:useBean attempts to locate a Bean within the scope",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which of the following statements about the jsp:useBean is ( are) true?",
    "options": [
      "The jsp:useBean is used to locate or instantiate a JavaBean component",
      "The jsp:useBean first tries to locate an instance of the bean, otherwise it instantiates the Bean from a class",
      "To locate and instantiate the Bean, the jsp:useBean attempts to locate a Bean within the scope",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Consider the contents of three JSP files:\n File 1: one.jsp \n     <html><body><pre> \n        <jsp:include page=\"two.jsp\" > \n           <jsp:param name=\"color\" value=\"red\" /> \n        </jsp:include> \n     </pre></body></html> \n File 2: two.jsp \n     <jsp:include page=\"three.jsp\" > \n        <jsp:param name=\"color\" value=\"green\" /> \n     </jsp:include> \n File 3: three.jsp \n    <%= request.getParameter( \"color\")  %> \n What will be the output of accessing the one.jsp file via the following URL? \n ( Select one)\n     http://localhost:8080/chapter12/one.jsp?color=blue",
    "options": [
      "red",
      "green",
      "blue",
      "The answer cannot be determined."
    ],
    "description": "Choose 1 option",
    "answer": [
      "green"
    ]
  },
  {
    "question": "Consider the contents of three JSP files:\n File 1: one.jsp \n     <html><body><pre> \n        <jsp:include page=\"two.jsp\" > \n           <jsp:param name=\"color\" value=\"red\" /> \n        </jsp:include> \n     </pre></body></html> \n File 2: two.jsp \n     <jsp:include page=\"three.jsp\" > \n        <jsp:param name=\"color\" value=\"green\" /> \n     </jsp:include> \n File 3: three.jsp \n    <%= request.getParameter( \"color\")  %> \n What will be the output of accessing the one.jsp file via the following URL? \n ( Select one)\n     http://localhost:8080/chapter12/one.jsp?color=blue",
    "options": [
      "red",
      "green",
      "blue",
      "The answer cannot be determined."
    ],
    "description": "Choose 1 option",
    "answer": [
      "green"
    ]
  },
  {
    "question": "Which of the followings is a valid return value for doAfterBody(  )?",
    "options": [
      "EVAL_BODY_INCLUDE",
      "SKIP_BODY",
      "EVAL_PAGE",
      "SKIP_PAGE",
      "EVAL_REST_PAGE"
    ],
    "description": "Choose 1 option",
    "answer": [
      "SKIP_BODY"
    ]
  },
  {
    "question": "Which of the followings is a valid return value for doAfterBody(  )?",
    "options": [
      "EVAL_BODY_INCLUDE",
      "SKIP_BODY",
      "EVAL_PAGE",
      "SKIP_PAGE",
      "EVAL_REST_PAGE"
    ],
    "description": "Choose 1 option",
    "answer": [
      "SKIP_BODY"
    ]
  },
  {
    "question": "You are given a tag library that has a tag named printReport. This tag may accept an attribute, department, which cannot take a dynamic value. Which of the following are correct uses of this tag? ( Select two)",
    "options": [
      "<mylib:printReport/>",
      "<mylib:printReport department=\"finance\"/>",
      "<mylib:printReport attribute=\"department\" value=\"finance\"/>",
      "<mylib:printReport attribute=\"department\" attribute-value=\"finance\"/>",
      "<mylib:printReport><jsp:attribute name=\"department\" value=\"finance\" /></mylib:printReport>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<mylib:printReport/>",
      "<mylib:printReport department=\"finance\"/>"
    ]
  },
  {
    "question": "You are given a tag library that has a tag named printReport. This tag may accept an attribute, department, which cannot take a dynamic value. Which of the following are correct uses of this tag? ( Select two)",
    "options": [
      "<mylib:printReport/>",
      "<mylib:printReport department=\"finance\"/>",
      "<mylib:printReport attribute=\"department\" value=\"finance\"/>",
      "<mylib:printReport attribute=\"department\" attribute-value=\"finance\"/>",
      "<mylib:printReport><jsp:attribute name=\"department\" value=\"finance\" /></mylib:printReport>"
    ],
    "description": "Choose all that apply",
    "answer": [
      "<mylib:printReport/>",
      "<mylib:printReport department=\"finance\"/>"
    ]
  },
  {
    "question": "Which of the following is a valid taglib directive? ( Select one)",
    "options": [
      "<% taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%@ taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%! taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%@ taglib name=\"/stats\" prefix=\"stats\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ taglib uri=\"/stats\" prefix=\"stats\" %>"
    ]
  },
  {
    "question": "Which of the following is a valid taglib directive? ( Select one)",
    "options": [
      "<% taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%@ taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%! taglib uri=\"/stats\" prefix=\"stats\" %>",
      "<%@ taglib name=\"/stats\" prefix=\"stats\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ taglib uri=\"/stats\" prefix=\"stats\" %>"
    ]
  },
  {
    "question": "Which of the following web.xml snippets correctly defines the use of a tag library? ( Select one)",
    "options": [
      "<taglib>\n     <uri>http://www.abc.com/sample.tld</uri>\n     <location>/WEB-INF/sample.tld</location>\n  </taglib>",
      "tag-lib>\n    <taglib-uri>http://www.abc.com/sample.tld</taglib-uri>\n    <taglib-location>/WEB-INF/sample.tld</taglib-location>\n </tag-lib>",
      "<taglib>\n     <taglib-uri>http://www.abc.com/sample.tld</taglib-uri>\n    <taglib-location>/WEB-INF/sample.tld</taglib-location>\n  </taglib>",
      "<tag-lib>\n    <taglib>http://www.abc.com/sample.tld</taglib-uri>\n    <taglib>/WEB-INF/sample.tld</taglib-location>\n </tag-lib>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<taglib>\n     <taglib-uri>http://www.abc.com/sample.tld</taglib-uri>\n    <taglib-location>/WEB-INF/sample.tld</taglib-location>\n  </taglib>"
    ]
  },
  {
    "question": "Which of the following web.xml snippets correctly defines the use of a tag library? ( Select one)",
    "options": [
      "<taglib>\n     <uri>http://www.abc.com/sample.tld</uri>\n     <location>/WEB-INF/sample.tld</location>\n  </taglib>",
      "tag-lib>\n    <taglib-uri>http://www.abc.com/sample.tld</taglib-uri>\n    <taglib-location>/WEB-INF/sample.tld</taglib-location>\n </tag-lib>",
      "<taglib>\n     <taglib-uri>http://www.abc.com/sample.tld</taglib-uri>\n    <taglib-location>/WEB-INF/sample.tld</taglib-location>\n  </taglib>",
      "<tag-lib>\n    <taglib>http://www.abc.com/sample.tld</taglib-uri>\n    <taglib>/WEB-INF/sample.tld</taglib-location>\n </tag-lib>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<taglib>\n     <taglib-uri>http://www.abc.com/sample.tld</taglib-uri>\n    <taglib-location>/WEB-INF/sample.tld</taglib-location>\n  </taglib>"
    ]
  },
  {
    "question": "Which services are the container provided? 1. Transactions 2. Securities 3. Persistence 4. Location translation  \n 5. Process and Thread Management",
    "options": [
      "1, 2, 3",
      "1, 2, 3, 4, 5",
      "1, 3, 5",
      "1, 2, 4, 5"
    ],
    "description": "Choose 1 option",
    "answer": [
      "1, 2, 3"
    ]
  },
  {
    "question": "Which services are the container provided? 1. Transactions 2. Securities 3. Persistence 4. Location translation  \n 5. Process and Thread Management",
    "options": [
      "1, 2, 3",
      "1, 2, 3, 4, 5",
      "1, 3, 5",
      "1, 2, 4, 5"
    ],
    "description": "Choose 1 option",
    "answer": [
      "1, 2, 3"
    ]
  },
  {
    "question": "What services EJB containers provide to Session beans? ( Select three)",
    "options": [
      "Caching and pooling",
      "EJB life cycle management",
      "HTTP requests management",
      "RMI services"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Caching and pooling",
      "EJB life cycle management",
      "RMI services"
    ]
  },
  {
    "question": "What services EJB containers provide to Session beans? ( Select three)",
    "options": [
      "Caching and pooling",
      "EJB life cycle management",
      "HTTP requests management",
      "RMI services"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Caching and pooling",
      "EJB life cycle management",
      "RMI services"
    ]
  },
  {
    "question": "In EJB 3.0, Which statement about entity manager is true?",
    "options": [
      "A container-managed entity manager must be a JTA entity manager.",
      "An entity manager injected into session beans can use either JTA or resource-local transaction control.",
      "An entity manager created by calling the EntityManagerFactory.createEntityManager method always uses\n JTA transaction control.",
      "An entity manager obtained through resource injection in a stateful session bean can use a resource-local EntityTransaction for transaction control."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A container-managed entity manager must be a JTA entity manager."
    ]
  },
  {
    "question": "In EJB 3.0, Which statement about entity manager is true?",
    "options": [
      "A container-managed entity manager must be a JTA entity manager.",
      "An entity manager injected into session beans can use either JTA or resource-local transaction control.",
      "An entity manager created by calling the EntityManagerFactory.createEntityManager method always uses\n JTA transaction control.",
      "An entity manager obtained through resource injection in a stateful session bean can use a resource-local EntityTransaction for transaction control."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A container-managed entity manager must be a JTA entity manager."
    ]
  },
  {
    "question": "Which acts as a proxy to an EJB?",
    "options": [
      "remote instance",
      "bean instance",
      "home instance",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "remote instance"
    ]
  },
  {
    "question": "Which acts as a proxy to an EJB?",
    "options": [
      "remote instance",
      "bean instance",
      "home instance",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "remote instance"
    ]
  },
  {
    "question": "Which kind of enterprise bean do the clients perform business functions inside the application server without having persistent storage mechanism?",
    "options": [
      "Session Bean",
      "Entity Bean",
      "Message Driven Bean",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session Bean"
    ]
  },
  {
    "question": "Which kind of enterprise bean do the clients perform business functions inside the application server without having persistent storage mechanism?",
    "options": [
      "Session Bean",
      "Entity Bean",
      "Message Driven Bean",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session Bean"
    ]
  },
  {
    "question": "Given the following statements about an EJB deployment descriptor for which the metadata-complete attribute is not specified:\n\n I. The EJB deployment descriptor can provide additional metadata to bean class annotations.\n\n II. The EJB deployment descriptor can partially override bean class annotations.\n\n III. The EJB deployment descriptor can entirely override bean class annotations.\n\n Which is true?",
    "options": [
      "Only statement I is correct.",
      "Only statement II is correct.",
      "Only statement III is correct.",
      "Both statements I and II are correct.",
      "Both statements I and III are correct."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both statements I and II are correct."
    ]
  },
  {
    "question": "Given the following statements about an EJB deployment descriptor for which the metadata-complete attribute is not specified:\n\n I. The EJB deployment descriptor can provide additional metadata to bean class annotations.\n\n II. The EJB deployment descriptor can partially override bean class annotations.\n\n III. The EJB deployment descriptor can entirely override bean class annotations.\n\n Which is true?",
    "options": [
      "Only statement I is correct.",
      "Only statement II is correct.",
      "Only statement III is correct.",
      "Both statements I and II are correct.",
      "Both statements I and III are correct."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both statements I and II are correct."
    ]
  },
  {
    "question": "A developer wants to write a stateful session bean using the following interface as local business interface:\n\n 1. package acme;\n 2. public interface Bar {\n 3. public void bar(  );\n 4. }\n\n Assuming there is NOT an ejb-jar.xml file, which code can be inserted into Lines 4-6 below to define the\n bean with the ejb name of BarBean?\n\n 1. package acme;\n 2. import javax.ejb.*;\n 3. import java.io.*;\n 4.\n 5.\n 6.\n 7. }",
    "options": [
      "@Stateful\n public class BarEJB implements Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) {}",
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) throws java.rmi.RemoteException {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}"
    ]
  },
  {
    "question": "A developer wants to write a stateful session bean using the following interface as local business interface:\n\n 1. package acme;\n 2. public interface Bar {\n 3. public void bar(  );\n 4. }\n\n Assuming there is NOT an ejb-jar.xml file, which code can be inserted into Lines 4-6 below to define the\n bean with the ejb name of BarBean?\n\n 1. package acme;\n 2. import javax.ejb.*;\n 3. import java.io.*;\n 4.\n 5.\n 6.\n 7. }",
    "options": [
      "@Stateful\n public class BarEJB implements Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) {}",
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}",
      "@Stateful( name=\"Bar\")\n public class BarBean implements Bar {\n public void bar(  ) throws java.rmi.RemoteException {}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Stateful\n public class BarBean implements Serializable, Bar {\n public void bar(  ) {}"
    ]
  },
  {
    "question": "What is an Entity Bean? ( Select one)",
    "options": [
      "It is an object representing data which is fetched from and can be stored to a persistent data store",
      "It holds the state of the associated stateful session bean",
      "It holds the state of the associated stateless session bean",
      "None of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It is an object representing data which is fetched from and can be stored to a persistent data store"
    ]
  },
  {
    "question": "What is an Entity Bean? ( Select one)",
    "options": [
      "It is an object representing data which is fetched from and can be stored to a persistent data store",
      "It holds the state of the associated stateful session bean",
      "It holds the state of the associated stateless session bean",
      "None of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It is an object representing data which is fetched from and can be stored to a persistent data store"
    ]
  },
  {
    "question": "What are characteristics of a Message Driven Bean? ( Select one)",
    "options": [
      "They are invoked asynchronously.",
      "They are relatively short-lived.",
      "They are stateless.",
      "All of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the above"
    ]
  },
  {
    "question": "What are characteristics of a Message Driven Bean? ( Select one)",
    "options": [
      "They are invoked asynchronously.",
      "They are relatively short-lived.",
      "They are stateless.",
      "All of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the above"
    ]
  },
  {
    "question": "Message Driven Beans ( MDBs) can be directly accessed by internal or external clients.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "Message Driven Beans ( MDBs) can be directly accessed by internal or external clients.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "With respect to\u00a0a message-driven beans, study the following statement.( 1) They do not represent directly shared data in the database, but they can access and update this data.( 2) They can be transaction-aware and they are stateless.The statement ( 1) is ....\u00a0 and ( 2) is ........",
    "options": [
      "true, true",
      "true, false",
      "false, true",
      "false, false"
    ],
    "description": "Choose 1 option",
    "answer": [
      "true, true"
    ]
  },
  {
    "question": "With respect to\u00a0a message-driven beans, study the following statement.( 1) They do not represent directly shared data in the database, but they can access and update this data.( 2) They can be transaction-aware and they are stateless.The statement ( 1) is ....\u00a0 and ( 2) is ........",
    "options": [
      "true, true",
      "true, false",
      "false, true",
      "false, false"
    ],
    "description": "Choose 1 option",
    "answer": [
      "true, true"
    ]
  },
  {
    "question": "Which followings are INVALID requirements for FORM authentication?",
    "options": [
      "The HTML form must use the GET method.",
      "The form must have \u201cj_security_check\u201d as its action.",
      "The form must include an input-capable field for user called \u201cj_username.\u201d",
      "The form must also include an input-capable field for password called \u201cj_password.\u201d"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The HTML form must use the GET method."
    ]
  },
  {
    "question": "Which followings are INVALID requirements for FORM authentication?",
    "options": [
      "The HTML form must use the GET method.",
      "The form must have \u201cj_security_check\u201d as its action.",
      "The form must include an input-capable field for user called \u201cj_username.\u201d",
      "The form must also include an input-capable field for password called \u201cj_password.\u201d"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The HTML form must use the GET method."
    ]
  },
  {
    "question": "Identify the correct order of phases in the Public/Private Key encryption?\n\n 1. Server provides its public key \n 2. Client makes request for secure resource\n 3. Server provides secure resource, encrypted with the client's public key \n 4. Client provides its public key, encrypted with the server's public key",
    "options": [
      "2 \u2013 1 \u2013 4 \u2013 3",
      "1 \u2013 2 \u2013 3 \u2013 4",
      "3 \u2013 1 \u2013 4 \u2013 2",
      "2 \u2013 4 \u2013 3 \u2013 1"
    ],
    "description": "Choose 1 option",
    "answer": [
      "2 \u2013 1 \u2013 4 \u2013 3"
    ]
  },
  {
    "question": "Identify the correct order of phases in the Public/Private Key encryption?\n\n 1. Server provides its public key \n 2. Client makes request for secure resource\n 3. Server provides secure resource, encrypted with the client's public key \n 4. Client provides its public key, encrypted with the server's public key",
    "options": [
      "2 \u2013 1 \u2013 4 \u2013 3",
      "1 \u2013 2 \u2013 3 \u2013 4",
      "3 \u2013 1 \u2013 4 \u2013 2",
      "2 \u2013 4 \u2013 3 \u2013 1"
    ],
    "description": "Choose 1 option",
    "answer": [
      "2 \u2013 1 \u2013 4 \u2013 3"
    ]
  },
  {
    "question": "Which services are the container provided? 1. Transactions 2. Securities 3. Persistence 4. Location translation  \n 5. Process and Thread Management",
    "options": [
      "1, 2, 3",
      "1, 2, 3, 4, 5",
      "1, 3, 5",
      "1, 2, 4, 5"
    ],
    "description": "Choose 1 option",
    "answer": [
      "1, 2, 3"
    ]
  },
  {
    "question": "Which services are the container provided? 1. Transactions 2. Securities 3. Persistence 4. Location translation  \n 5. Process and Thread Management",
    "options": [
      "1, 2, 3",
      "1, 2, 3, 4, 5",
      "1, 3, 5",
      "1, 2, 4, 5"
    ],
    "description": "Choose 1 option",
    "answer": [
      "1, 2, 3"
    ]
  },
  {
    "question": "According to EJB 2.0 Specification, enterprise beans are restricted from performing certain operations.",
    "options": [
      "Managing threads",
      "Creating a client Sockets",
      "Extending from a class",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Managing threads"
    ]
  },
  {
    "question": "According to EJB 2.0 Specification, enterprise beans are restricted from performing certain operations.",
    "options": [
      "Managing threads",
      "Creating a client Sockets",
      "Extending from a class",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Managing threads"
    ]
  },
  {
    "question": "Which is NOT the party that need involved in the EJB Ecosystem?",
    "options": [
      "Bean Provider",
      "EJB Deployer",
      "System Administrator",
      "Application Assembler",
      "End users"
    ],
    "description": "Choose 1 option",
    "answer": [
      "End users"
    ]
  },
  {
    "question": "Which is NOT the party that need involved in the EJB Ecosystem?",
    "options": [
      "Bean Provider",
      "EJB Deployer",
      "System Administrator",
      "Application Assembler",
      "End users"
    ],
    "description": "Choose 1 option",
    "answer": [
      "End users"
    ]
  },
  {
    "question": "What is a benefit of bean pooling in an EJB container?",
    "options": [
      "It reduces the memory allocation and garbage-collection cycles.",
      "It increases the memory allocation and garbage-collection cycles.",
      "It does not need supporting from server",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It reduces the memory allocation and garbage-collection cycles."
    ]
  },
  {
    "question": "What is a benefit of bean pooling in an EJB container?",
    "options": [
      "It reduces the memory allocation and garbage-collection cycles.",
      "It increases the memory allocation and garbage-collection cycles.",
      "It does not need supporting from server",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It reduces the memory allocation and garbage-collection cycles."
    ]
  },
  {
    "question": "What authentication type requires that the form must have \u201cj_security_check\u201d as its action?",
    "options": [
      "BASIC",
      "DIGEST",
      "FORM",
      "CLIENT-CERT"
    ],
    "description": "Choose 1 option",
    "answer": [
      "FORM"
    ]
  },
  {
    "question": "What authentication type requires that the form must have \u201cj_security_check\u201d as its action?",
    "options": [
      "BASIC",
      "DIGEST",
      "FORM",
      "CLIENT-CERT"
    ],
    "description": "Choose 1 option",
    "answer": [
      "FORM"
    ]
  },
  {
    "question": "Choose the statement that best describes how to connect JSP pages and Enterprise JavaBeans ( EJBs).",
    "options": [
      "Lookup the EJBs from within a JSP, but use the EJBs from within a basic JavaBean.",
      "Lookup and use the EJBs from a separate business delegate. The JavaBeans that work with JSP pages are clients to these business.",
      "Lookup the EJBs from within a servlet, delegating usage to specific JSP pages.",
      "Lookup and use the EJBs from within a JSP page, but only as remote references."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Lookup the EJBs from within a servlet, delegating usage to specific JSP pages."
    ]
  },
  {
    "question": "Choose the statement that best describes how to connect JSP pages and Enterprise JavaBeans ( EJBs).",
    "options": [
      "Lookup the EJBs from within a JSP, but use the EJBs from within a basic JavaBean.",
      "Lookup and use the EJBs from a separate business delegate. The JavaBeans that work with JSP pages are clients to these business.",
      "Lookup the EJBs from within a servlet, delegating usage to specific JSP pages.",
      "Lookup and use the EJBs from within a JSP page, but only as remote references."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Lookup the EJBs from within a servlet, delegating usage to specific JSP pages."
    ]
  },
  {
    "question": "In EJB 2.x, the ________interface is a Java interface that enumerates the business methods exposes by the enterprise bean class.",
    "options": [
      "remote",
      "home",
      "local home",
      "bean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "remote"
    ]
  },
  {
    "question": "In EJB 2.x, the ________interface is a Java interface that enumerates the business methods exposes by the enterprise bean class.",
    "options": [
      "remote",
      "home",
      "local home",
      "bean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "remote"
    ]
  },
  {
    "question": "In EJB 3.0, Which statement about entity manager is true?",
    "options": [
      "A container-managed entity manager must be a JTA entity manager.",
      "An entity manager injected into session beans can use either JTA or resource-local transaction control.",
      "An entity manager created by calling the EntityManagerFactory.createEntityManager method always uses\n JTA transaction control.",
      "An entity manager obtained through resource injection in a stateful session bean can use a resource-local EntityTransaction for transaction control."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A container-managed entity manager must be a JTA entity manager."
    ]
  },
  {
    "question": "In EJB 3.0, Which statement about entity manager is true?",
    "options": [
      "A container-managed entity manager must be a JTA entity manager.",
      "An entity manager injected into session beans can use either JTA or resource-local transaction control.",
      "An entity manager created by calling the EntityManagerFactory.createEntityManager method always uses\n JTA transaction control.",
      "An entity manager obtained through resource injection in a stateful session bean can use a resource-local EntityTransaction for transaction control."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A container-managed entity manager must be a JTA entity manager."
    ]
  },
  {
    "question": "When\u00a0are Enterprise Beans used?",
    "options": [
      "The application must be scalable.",
      "Transactions must ensure data integrity.",
      "The application will have a variety of clients.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "When\u00a0are Enterprise Beans used?",
    "options": [
      "The application must be scalable.",
      "Transactions must ensure data integrity.",
      "The application will have a variety of clients.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "JMS is a Java API that allows applications to create, send, receive, and read messages",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "JMS is a Java API that allows applications to create, send, receive, and read messages",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "The EntityManager interface defines the methods that are used to interact with the persistence context.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "The EntityManager interface defines the methods that are used to interact with the persistence context.",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "False"
    ]
  },
  {
    "question": "Session performs a task for a client; optionally, may implement a web service",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "Session performs a task for a client; optionally, may implement a web service",
    "options": [
      "True",
      "False"
    ],
    "description": "Choose 1 option",
    "answer": [
      "True"
    ]
  },
  {
    "question": "Which of the following statement(s) regarding Struts 2 framework are true?",
    "options": [
      "Struts 2 framework is an extension of Struts and JSF framework",
      "In Struts 2 framework, the component information is configured in struts.xml file",
      "Struts 2 is based on a pull-MVC framework",
      "Struts 2 framework supports the development of persistence logic in the enterprise applications",
      "Struts 2 is an extensible framework can be easily integrated with any other frameworks"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Struts 2 framework is an extension of Struts and JSF framework",
      "In Struts 2 framework, the component information is configured in struts.xml file",
      "Struts 2 is based on a pull-MVC framework"
    ]
  },
  {
    "question": "Which of the following statement(s) regarding Struts 2 framework are true?",
    "options": [
      "Struts 2 framework is an extension of Struts and JSF framework",
      "In Struts 2 framework, the component information is configured in struts.xml file",
      "Struts 2 is based on a pull-MVC framework",
      "Struts 2 framework supports the development of persistence logic in the enterprise applications",
      "Struts 2 is an extensible framework can be easily integrated with any other frameworks"
    ],
    "description": "Choose all that apply",
    "answer": [
      "Struts 2 framework is an extension of Struts and JSF framework",
      "In Struts 2 framework, the component information is configured in struts.xml file",
      "Struts 2 is based on a pull-MVC framework"
    ]
  },
  {
    "question": "Which among the following components acts as a Controller in Struts 2 framework?",
    "options": [
      "FilterDispatcher or StrutsPrepareAndExecuteFilter",
      "Configuration Manager",
      "ActionMapper",
      "Interceptors",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "FilterDispatcher or StrutsPrepareAndExecuteFilter"
    ]
  },
  {
    "question": "Which among the following components acts as a Controller in Struts 2 framework?",
    "options": [
      "FilterDispatcher or StrutsPrepareAndExecuteFilter",
      "Configuration Manager",
      "ActionMapper",
      "Interceptors",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "FilterDispatcher or StrutsPrepareAndExecuteFilter"
    ]
  },
  {
    "question": "Which is the correct syntax of the execute() method declared in the Action class?",
    "options": [
      "public String execute() throws Exception",
      "public void execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException",
      "public ActionForward execute(ActionMapping mapping, ActionForm form, ServletRequest request, ServletResponse response) throws Exception",
      "public String execute(ActionForm form, ServletRequest request, ServletResponse response) throws ServletException, IOException",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public String execute() throws Exception"
    ]
  },
  {
    "question": "Which is the correct syntax of the execute() method declared in the Action class?",
    "options": [
      "public String execute() throws Exception",
      "public void execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException",
      "public ActionForward execute(ActionMapping mapping, ActionForm form, ServletRequest request, ServletResponse response) throws Exception",
      "public String execute(ActionForm form, ServletRequest request, ServletResponse response) throws ServletException, IOException",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public String execute() throws Exception"
    ]
  },
  {
    "question": "In the request life cycle of Struts 2, which component invokes the Interceptors to apply the common functionalities?",
    "options": [
      "ActionInvocation",
      "ActionServlet",
      "ActionMapping",
      "FilterDispatcher",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "ActionInvocation"
    ]
  },
  {
    "question": "In the request life cycle of Struts 2, which component invokes the Interceptors to apply the common functionalities?",
    "options": [
      "ActionInvocation",
      "ActionServlet",
      "ActionMapping",
      "FilterDispatcher",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "ActionInvocation"
    ]
  },
  {
    "question": "Which of the following result type redirects the user to a configured action?",
    "options": [
      "RedirectAction",
      "Redirect",
      "Dispatcher",
      "Chain",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "RedirectAction"
    ]
  },
  {
    "question": "Which of the following result type redirects the user to a configured action?",
    "options": [
      "RedirectAction",
      "Redirect",
      "Dispatcher",
      "Chain",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "RedirectAction"
    ]
  },
  {
    "question": "The binding language between the GUI elements and the model objects in Struts 2 framework is ________.",
    "options": [
      "OGNL",
      "Type Converter",
      "String",
      "Expression",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "OGNL"
    ]
  },
  {
    "question": "The binding language between the GUI elements and the model objects in Struts 2 framework is ________.",
    "options": [
      "OGNL",
      "Type Converter",
      "String",
      "Expression",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "OGNL"
    ]
  },
  {
    "question": "Which of these statements is true and which is false?Statement A: OGNL\u2019s expression language is used in the form input field name and in JSP tags. Statement B: OGNL is a binding language between the GUI elements and the view objects.",
    "options": [
      "Statement A is TRUE and Statement B is FALSE",
      "Both the statements are TRUE",
      "Statement A is FALSE and Statement B is TRUE",
      "Both the statements are FALSE"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Statement A is TRUE and Statement B is FALSE"
    ]
  },
  {
    "question": "Which of these statements is true and which is false?Statement A: OGNL\u2019s expression language is used in the form input field name and in JSP tags. Statement B: OGNL is a binding language between the GUI elements and the view objects.",
    "options": [
      "Statement A is TRUE and Statement B is FALSE",
      "Both the statements are TRUE",
      "Statement A is FALSE and Statement B is TRUE",
      "Both the statements are FALSE"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Statement A is TRUE and Statement B is FALSE"
    ]
  },
  {
    "question": "Which annotation does to evaluate the OGNL expression using the ValueStack?",
    "options": [
      "ExpressionValidator",
      "DateRangeValidator",
      "RequiredStringValidator",
      "RequiredFieldValidator",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "ExpressionValidator"
    ]
  },
  {
    "question": "Which annotation does to evaluate the OGNL expression using the ValueStack?",
    "options": [
      "ExpressionValidator",
      "DateRangeValidator",
      "RequiredStringValidator",
      "RequiredFieldValidator",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "ExpressionValidator"
    ]
  },
  {
    "question": "Which of the following annotation ensures that the property cannot be null?",
    "options": [
      "RequiredFieldValidator",
      "RequiredField",
      "Namespace",
      "ResultField",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "RequiredFieldValidator"
    ]
  },
  {
    "question": "Which of the following annotation ensures that the property cannot be null?",
    "options": [
      "RequiredFieldValidator",
      "RequiredField",
      "Namespace",
      "ResultField",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "RequiredFieldValidator"
    ]
  },
  {
    "question": "The HttpServletResponse lets you:",
    "options": [
      "specify outgoing information such as HTTP status codes (200, 404, etc.)",
      "specify response headers (Content-Type, Set-Cookie, etc.)",
      "obtain a PrintWriter used to send the document content back to the client.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "The HttpServletResponse lets you:",
    "options": [
      "specify outgoing information such as HTTP status codes (200, 404, etc.)",
      "specify response headers (Content-Type, Set-Cookie, etc.)",
      "obtain a PrintWriter used to send the document content back to the client.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "The HttpServletRequest has methods by which you can find out about incoming information such as:",
    "options": [
      "form data",
      "HTTP request headers",
      "the client\u2019s hostname",
      "cookies",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "The HttpServletRequest has methods by which you can find out about incoming information such as:",
    "options": [
      "form data",
      "HTTP request headers",
      "the client\u2019s hostname",
      "cookies",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Which of the following methods can be used to add cookies to a servlet response?",
    "options": [
      "HttpServletResponse.addCookie(Cookie cookie)",
      "ServletResponse.addCookie(Cookie cookie)",
      "HttpServletResponse.addCookie(String contents)",
      "ServletResponse.addCookie(String contents)",
      "ServletResponse.addHeader(String name, String value)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.addCookie(Cookie cookie)"
    ]
  },
  {
    "question": "Which of the following methods can be used to add cookies to a servlet response?",
    "options": [
      "HttpServletResponse.addCookie(Cookie cookie)",
      "ServletResponse.addCookie(Cookie cookie)",
      "HttpServletResponse.addCookie(String contents)",
      "ServletResponse.addCookie(String contents)",
      "ServletResponse.addHeader(String name, String value)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.addCookie(Cookie cookie)"
    ]
  },
  {
    "question": "The ________ method initializes the servlets",
    "options": [
      "getServletContext()",
      "getInitParameter()",
      "init()",
      "service()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "init()"
    ]
  },
  {
    "question": "The ________ method initializes the servlets",
    "options": [
      "getServletContext()",
      "getInitParameter()",
      "init()",
      "service()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "init()"
    ]
  },
  {
    "question": "The _____ method is called by the web container by default when the servlet is requested",
    "options": [
      "doGet()",
      "doPost()",
      "getServletConfig()",
      "getServletContext()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doGet()"
    ]
  },
  {
    "question": "The _____ method is called by the web container by default when the servlet is requested",
    "options": [
      "doGet()",
      "doPost()",
      "getServletConfig()",
      "getServletContext()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "doGet()"
    ]
  },
  {
    "question": "Which of the important methods are present in servlet object?",
    "options": [
      "init, service, destroy",
      "init, processRequest, destroy",
      "init, doGet, doPost",
      "init, service, doXXX"
    ],
    "description": "Choose 1 option",
    "answer": [
      "init, service, destroy"
    ]
  },
  {
    "question": "Which of the important methods are present in servlet object?",
    "options": [
      "init, service, destroy",
      "init, processRequest, destroy",
      "init, doGet, doPost",
      "init, service, doXXX"
    ],
    "description": "Choose 1 option",
    "answer": [
      "init, service, destroy"
    ]
  },
  {
    "question": "Which http method send by browser that asks the server to get the page only?",
    "options": [
      "GET",
      "POST",
      "OPTION",
      "PUT"
    ],
    "description": "Choose 1 option",
    "answer": [
      "GET"
    ]
  },
  {
    "question": "Which http method send by browser that asks the server to get the page only?",
    "options": [
      "GET",
      "POST",
      "OPTION",
      "PUT"
    ],
    "description": "Choose 1 option",
    "answer": [
      "GET"
    ]
  },
  {
    "question": "When we are sending data in URL in get method, how to separate parameters?",
    "options": [
      "By ampersand (&)",
      "By comma",
      "By semicolon",
      "By questionmark"
    ],
    "description": "Choose 1 option",
    "answer": [
      "By ampersand (&)"
    ]
  },
  {
    "question": "When we are sending data in URL in get method, how to separate parameters?",
    "options": [
      "By ampersand (&)",
      "By comma",
      "By semicolon",
      "By questionmark"
    ],
    "description": "Choose 1 option",
    "answer": [
      "By ampersand (&)"
    ]
  },
  {
    "question": "Which of the options is DISADVANTAGES of using CGI?",
    "options": [
      "Reduced Efficiency",
      "Ease of use",
      "Reloading PERL interpreter",
      "Safe and Cheap",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Reloading PERL interpreter"
    ]
  },
  {
    "question": "Which of the options is DISADVANTAGES of using CGI?",
    "options": [
      "Reduced Efficiency",
      "Ease of use",
      "Reloading PERL interpreter",
      "Safe and Cheap",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Reloading PERL interpreter"
    ]
  },
  {
    "question": "Identify the merits and demerits of servlets.",
    "options": [
      "Servlets are easy to use",
      "Servlets are portable",
      "Servlets are less efficient than other scripting languages",
      "Servlets are safe and less costly to develop"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Servlets are safe and less costly to develop"
    ]
  },
  {
    "question": "Identify the merits and demerits of servlets.",
    "options": [
      "Servlets are easy to use",
      "Servlets are portable",
      "Servlets are less efficient than other scripting languages",
      "Servlets are safe and less costly to develop"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Servlets are safe and less costly to develop"
    ]
  },
  {
    "question": "Which sentence is correct about CGI ?",
    "options": [
      "The widely accepted platform for writing CGI script is JavaScript",
      "Error detection is easy",
      "None of the others",
      "Not support Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Not support Session"
    ]
  },
  {
    "question": "ServletRequestWrapper extends:",
    "options": [
      "A. ServletRequestWrapper",
      "B.HttpRequestWrapper",
      "C.HttpServletRequestWrapper",
      "D. AbstractServletRequestWrapper"
    ],
    "description": "Choose all that apply",
    "answer": [
      "A. ServletRequestWrapper",
      "C.HttpServletRequestWrapper"
    ]
  },
  {
    "question": "Which sentence is correct about CGI ?",
    "options": [
      "The widely accepted platform for writing CGI script is JavaScript",
      "Error detection is easy",
      "None of the others",
      "Not support Session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Not support Session"
    ]
  },
  {
    "question": "ServletRequestWrapper extends:",
    "options": [
      "A. ServletRequestWrapper",
      "B.HttpRequestWrapper",
      "C.HttpServletRequestWrapper",
      "D. AbstractServletRequestWrapper"
    ],
    "description": "Choose all that apply",
    "answer": [
      "A. ServletRequestWrapper",
      "C.HttpServletRequestWrapper"
    ]
  },
  {
    "question": "HTTP GET method is triggered by:",
    "options": [
      "A. Typing into the address bar of the browser then pressing Enter",
      "B. Clicking on a link in a web page",
      "C. Pressing the submit button in an HTML form with method=\"GET\"",
      "D. Pressing the submit button in an HTML form with action=\"GET\""
    ],
    "description": "Choose all that apply",
    "answer": [
      "A. Typing into the address bar of the browser then pressing Enter",
      "B. Clicking on a link in a web page",
      "C. Pressing the submit button in an HTML form with method=\"GET\""
    ]
  },
  {
    "question": "HTTP GET method is triggered by:",
    "options": [
      "A. Typing into the address bar of the browser then pressing Enter",
      "B. Clicking on a link in a web page",
      "C. Pressing the submit button in an HTML form with method=\"GET\"",
      "D. Pressing the submit button in an HTML form with action=\"GET\""
    ],
    "description": "Choose all that apply",
    "answer": [
      "A. Typing into the address bar of the browser then pressing Enter",
      "B. Clicking on a link in a web page",
      "C. Pressing the submit button in an HTML form with method=\"GET\""
    ]
  },
  {
    "question": "How many different results can we obtain after submitting this below form, giving that the code runs normally: <form action=\"TestController\" method=\"POST\"><input type=\"radio\" name=\"rdBtn\" value=\"1\"/>1\u00a0 <input type=\"radio\" name=\"rdBtn\" value=\"2\"/>2\u00a0 <input type=\"submit\" value=\"Submit\"/></form>",
    "options": [
      "A. 1",
      "B. 2",
      "C. 3",
      "D. 4"
    ],
    "description": "Choose 1 option",
    "answer": [
      "C. 3"
    ]
  },
  {
    "question": "How many different results can we obtain after submitting this below form, giving that the code runs normally: <form action=\"TestController\" method=\"POST\"><input type=\"radio\" name=\"rdBtn\" value=\"1\"/>1\u00a0 <input type=\"radio\" name=\"rdBtn\" value=\"2\"/>2\u00a0 <input type=\"submit\" value=\"Submit\"/></form>",
    "options": [
      "A. 1",
      "B. 2",
      "C. 3",
      "D. 4"
    ],
    "description": "Choose 1 option",
    "answer": [
      "C. 3"
    ]
  },
  {
    "question": "In the web-based applicaton model, data in textfields of a client form will be sent to server as \u2026..",
    "options": [
      "strings",
      "integers",
      "numbers",
      "real numbers",
      "none of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "strings"
    ]
  },
  {
    "question": "In the web-based applicaton model, data in textfields of a client form will be sent to server as \u2026..",
    "options": [
      "strings",
      "integers",
      "numbers",
      "real numbers",
      "none of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "strings"
    ]
  },
  {
    "question": "Which of the following methods of HTTP will send data from clients to servers using security format in the body of the request?",
    "options": [
      "POST",
      "GET",
      "GET and POST",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "POST"
    ]
  },
  {
    "question": "Which of the following methods of HTTP will send data from clients to servers using security format in the body of the request?",
    "options": [
      "POST",
      "GET",
      "GET and POST",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "POST"
    ]
  },
  {
    "question": "The ________ method called by the servlet container to allow the servlet to response to a request",
    "options": [
      "getServletContext()",
      "getInitParameter()",
      "service()",
      "init()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "service()"
    ]
  },
  {
    "question": "The ________ method called by the servlet container to allow the servlet to response to a request",
    "options": [
      "getServletContext()",
      "getInitParameter()",
      "service()",
      "init()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "service()"
    ]
  },
  {
    "question": "The ________ method returns the actual length of the request sent by the client",
    "options": [
      "getContentLength()",
      "getParameter()",
      "getAttribute()",
      "getServerName()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getContentLength()"
    ]
  },
  {
    "question": "The ________ method returns the actual length of the request sent by the client",
    "options": [
      "getContentLength()",
      "getParameter()",
      "getAttribute()",
      "getServerName()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getContentLength()"
    ]
  },
  {
    "question": "Which of the following error code is associated with the message \u201cResource not found\u201d?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "404"
    ]
  },
  {
    "question": "Which of the following error code is associated with the message \u201cResource not found\u201d?",
    "options": [
      "404",
      "500",
      "403",
      "401"
    ],
    "description": "Choose 1 option",
    "answer": [
      "404"
    ]
  },
  {
    "question": "Which HTTP method represents a request for information about the supported methods on an HTTP server?",
    "options": [
      "HEAD",
      "GET",
      "OPTIONS",
      "TRACE"
    ],
    "description": "Choose 1 option",
    "answer": [
      "OPTIONS"
    ]
  },
  {
    "question": "Which HTTP method represents a request for information about the supported methods on an HTTP server?",
    "options": [
      "HEAD",
      "GET",
      "OPTIONS",
      "TRACE"
    ],
    "description": "Choose 1 option",
    "answer": [
      "OPTIONS"
    ]
  },
  {
    "question": "The response.setContentLength() method take a/an __________ argument",
    "options": [
      "number of Bytes",
      "number of Bits",
      "nothing",
      "number of Words"
    ],
    "description": "Choose 1 option",
    "answer": [
      "number of Bytes"
    ]
  },
  {
    "question": "The response.setContentLength() method take a/an __________ argument",
    "options": [
      "number of Bytes",
      "number of Bits",
      "nothing",
      "number of Words"
    ],
    "description": "Choose 1 option",
    "answer": [
      "number of Bytes"
    ]
  },
  {
    "question": "In the web deployment descriptor, the url-pattern tag of servlet-mapping tag is used for _________",
    "options": [
      "accessing or calling the servlet instance",
      "applying the security on the servlet instance",
      "applying the filter on the servlet instance",
      "informing server about the location of servlet in web application directory"
    ],
    "description": "Choose 1 option",
    "answer": [
      "accessing or calling the servlet instance"
    ]
  },
  {
    "question": "In the web deployment descriptor, the url-pattern tag of servlet-mapping tag is used for _________",
    "options": [
      "accessing or calling the servlet instance",
      "applying the security on the servlet instance",
      "applying the filter on the servlet instance",
      "informing server about the location of servlet in web application directory"
    ],
    "description": "Choose 1 option",
    "answer": [
      "accessing or calling the servlet instance"
    ]
  },
  {
    "question": "The HttpServletRequest has methods by which you can find out about incoming information such as:",
    "options": [
      "form data",
      "HTTP request headers",
      "the client\u2019s hostname",
      "cookies",
      "all of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "all of the others."
    ]
  },
  {
    "question": "The HttpServletRequest has methods by which you can find out about incoming information such as:",
    "options": [
      "form data",
      "HTTP request headers",
      "the client\u2019s hostname",
      "cookies",
      "all of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "all of the others."
    ]
  },
  {
    "question": "Which of the following methods can be used to add cookies to a servlet response?",
    "options": [
      "HttpServletResponse.addCookie(Cookie cookie)",
      "ServletResponse.addCookie(Cookie cookie)",
      "HttpServletResponse.addCookie(String contents)",
      "ServletResponse.addCookie(String contents)",
      "ServletResponse.addHeader(String name, String value)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.addCookie(Cookie cookie)"
    ]
  },
  {
    "question": "Which of the following methods can be used to add cookies to a servlet response?",
    "options": [
      "HttpServletResponse.addCookie(Cookie cookie)",
      "ServletResponse.addCookie(Cookie cookie)",
      "HttpServletResponse.addCookie(String contents)",
      "ServletResponse.addCookie(String contents)",
      "ServletResponse.addHeader(String name, String value)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletResponse.addCookie(Cookie cookie)"
    ]
  },
  {
    "question": "When a Web server responds to a request from a browser or other Web client, the response typically consists of: (choose one)",
    "options": [
      "a status line, some response headers, a blank line, and the document.",
      "a status line, a blank line, and the document.",
      "a blank line, a status line, some response headers and the document.",
      "a status line, some response headers,  and the document."
    ],
    "description": "Choose 1 option",
    "answer": [
      "a status line, some response headers, a blank line, and the document."
    ]
  },
  {
    "question": "When a Web server responds to a request from a browser or other Web client, the response typically consists of: (choose one)",
    "options": [
      "a status line, some response headers, a blank line, and the document.",
      "a status line, a blank line, and the document.",
      "a blank line, a status line, some response headers and the document.",
      "a status line, some response headers,  and the document."
    ],
    "description": "Choose 1 option",
    "answer": [
      "a status line, some response headers, a blank line, and the document."
    ]
  },
  {
    "question": "When a servlet is accessed from a client, the client will receive .......",
    "options": [
      "a text or HTML response",
      "a file of Java code",
      "a file of binary code",
      "none of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "a text or HTML response"
    ]
  },
  {
    "question": "When a servlet is accessed from a client, the client will receive .......",
    "options": [
      "a text or HTML response",
      "a file of Java code",
      "a file of binary code",
      "none of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "a text or HTML response"
    ]
  },
  {
    "question": "Select the correct statement.",
    "options": [
      "The url pattern of a servlet is a string that specifies the physical position of the servlet.",
      "The url pattern of a servlet must match the name of the servlet.",
      "The url pattern of a servlet must be different with the name of the servlet.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others."
    ]
  },
  {
    "question": "Select the correct statement.",
    "options": [
      "The url pattern of a servlet is a string that specifies the physical position of the servlet.",
      "The url pattern of a servlet must match the name of the servlet.",
      "The url pattern of a servlet must be different with the name of the servlet.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others."
    ]
  },
  {
    "question": "Given the HTTP message fragment: \n\nHTTP/1.1 500 Internal Server Errors Choose the correct statement",
    "options": [
      "The fragment message describes the status line of HTTP request message",
      "The fragment message describes the header information of HTTP response message",
      "The fragment message describes the status line of HTTP response message",
      "The fragment message describes the request line of HTTP response message"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The fragment message describes the status line of HTTP response message"
    ]
  },
  {
    "question": "Given the HTTP message fragment: \n\nHTTP/1.1 500 Internal Server Errors Choose the correct statement",
    "options": [
      "The fragment message describes the status line of HTTP request message",
      "The fragment message describes the header information of HTTP response message",
      "The fragment message describes the status line of HTTP response message",
      "The fragment message describes the request line of HTTP response message"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The fragment message describes the status line of HTTP response message"
    ]
  },
  {
    "question": "What is the value of a control or input data of HTML form that is transferred to servlet/web container called?",
    "options": [
      "Parameter value of request object",
      "Attribute value of request scope",
      "Initialize parameter value of Servlet Context",
      "Initialize parameter value of Servlet Config"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Parameter value of request object"
    ]
  },
  {
    "question": "What is the value of a control or input data of HTML form that is transferred to servlet/web container called?",
    "options": [
      "Parameter value of request object",
      "Attribute value of request scope",
      "Initialize parameter value of Servlet Context",
      "Initialize parameter value of Servlet Config"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Parameter value of request object"
    ]
  },
  {
    "question": "HTML tags supplies browsers ..........",
    "options": [
      "with presentation of data that are associated with them",
      "with the meaning of data that are associated with them.",
      "with content that will be presented only.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "with presentation of data that are associated with them"
    ]
  },
  {
    "question": "HTML tags supplies browsers ..........",
    "options": [
      "with presentation of data that are associated with them",
      "with the meaning of data that are associated with them.",
      "with content that will be presented only.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "with presentation of data that are associated with them"
    ]
  },
  {
    "question": "Which of the following HTML tag(s) will be used in creating a table.",
    "options": [
      "All of the others.",
      "TR",
      "TD",
      "TH"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Which of the following HTML tag(s) will be used in creating a table.",
    "options": [
      "All of the others.",
      "TR",
      "TD",
      "TH"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "With respect to the GET of the HTTP method, parameters of a request will be put in its .......",
    "options": [
      "request headers.",
      "request line.",
      "request body.",
      "separate part."
    ],
    "description": "Choose 1 option",
    "answer": [
      "request headers."
    ]
  },
  {
    "question": "With respect to the GET of the HTTP method, parameters of a request will be put in its .......",
    "options": [
      "request headers.",
      "request line.",
      "request body.",
      "separate part."
    ],
    "description": "Choose 1 option",
    "answer": [
      "request headers."
    ]
  },
  {
    "question": "Select a correct statement about HTTP methods:",
    "options": [
      "The HEAD method is identical to the GET method except it does not return a message body.",
      "Data sent by GET method does not have limited in length.",
      "When sending with POST method, all data are appended on the query string of the URL.",
      "If not specified in the HTML <form> tag, the default HTTP method is POST"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The HEAD method is identical to the GET method except it does not return a message body."
    ]
  },
  {
    "question": "Select a correct statement about HTTP methods:",
    "options": [
      "The HEAD method is identical to the GET method except it does not return a message body.",
      "Data sent by GET method does not have limited in length.",
      "When sending with POST method, all data are appended on the query string of the URL.",
      "If not specified in the HTML <form> tag, the default HTTP method is POST"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The HEAD method is identical to the GET method except it does not return a message body."
    ]
  },
  {
    "question": "Which of the following HTTP methods is not considered a safe method?",
    "options": [
      "PUT",
      "GET",
      "HEAD",
      "TRACE"
    ],
    "description": "Choose 1 option",
    "answer": [
      "GET"
    ]
  },
  {
    "question": "Which of the following HTTP methods is not considered a safe method?",
    "options": [
      "PUT",
      "GET",
      "HEAD",
      "TRACE"
    ],
    "description": "Choose 1 option",
    "answer": [
      "GET"
    ]
  },
  {
    "question": "Select a correct statement about the destroy() method of a servlet:",
    "options": [
      "destroy() is never called if init() failed.",
      "destroy() is called only if the web application is shutdown.",
      "destroy() is called only if the web server is shutdown.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "destroy() is never called if init() failed."
    ]
  },
  {
    "question": "Select a correct statement about the destroy() method of a servlet:",
    "options": [
      "destroy() is never called if init() failed.",
      "destroy() is called only if the web application is shutdown.",
      "destroy() is called only if the web server is shutdown.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "destroy() is never called if init() failed."
    ]
  },
  {
    "question": "Identify the features of a Web client-server model.(A) The architecture of Web client-server model can be one-tier, two-tier, three-tier,or N-tier.(B) Web applications have higher maintenance cost.(C) Code related to presentation, business, and data access logic are all clubbedtogether in the one-tier architecture of Web application.(D) Web-applications are platform independent.",
    "options": [
      "A, C",
      "B, C",
      "B, D",
      "A, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, C"
    ]
  },
  {
    "question": "Identify the features of a Web client-server model.(A) The architecture of Web client-server model can be one-tier, two-tier, three-tier,or N-tier.(B) Web applications have higher maintenance cost.(C) Code related to presentation, business, and data access logic are all clubbedtogether in the one-tier architecture of Web application.(D) Web-applications are platform independent.",
    "options": [
      "A, C",
      "B, C",
      "B, D",
      "A, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, C"
    ]
  },
  {
    "question": "Which of the following statements about Request and Response message structure are true?(A) Request message structure consists of only header information.(B) Header information contains information such as server, last modified date,content-length, and content type.(C) Request line returns the User-Agent along with the status code header.(D) Response message structure consists of status line and header information.",
    "options": [
      "A, C",
      "A, D",
      "B, D",
      "C, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "B, D"
    ]
  },
  {
    "question": "Which of the following statements about Request and Response message structure are true?(A) Request message structure consists of only header information.(B) Header information contains information such as server, last modified date,content-length, and content type.(C) Request line returns the User-Agent along with the status code header.(D) Response message structure consists of status line and header information.",
    "options": [
      "A, C",
      "A, D",
      "B, D",
      "C, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "B, D"
    ]
  },
  {
    "question": "Which structure of Status Line in Response Message is?",
    "options": [
      "[HTTP Version] [Response Code] [Status]",
      "[HTTP Method] [Protocol Version] [Requested Resource forming URI]",
      "[HTTP Version] [Response Code] [Http Method]",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "[HTTP Version] [Response Code] [Status]"
    ]
  },
  {
    "question": "Which structure of Status Line in Response Message is?",
    "options": [
      "[HTTP Version] [Response Code] [Status]",
      "[HTTP Method] [Protocol Version] [Requested Resource forming URI]",
      "[HTTP Version] [Response Code] [Http Method]",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "[HTTP Version] [Response Code] [Status]"
    ]
  },
  {
    "question": "Who does initialize the Response Object?",
    "options": [
      "Container",
      "Tomcat Server",
      "Servlet",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Container"
    ]
  },
  {
    "question": "Who does initialize the Response Object?",
    "options": [
      "Container",
      "Tomcat Server",
      "Servlet",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Container"
    ]
  },
  {
    "question": "Which of the following is true in the life cycle of a request in Struct2 application?",
    "options": [
      "All of the others",
      "Selected action is executed to perform the requested operation",
      "Configured interceptors are applied to do any post-processing if required",
      "Finally the result is prepared by the view and returns the result to the user"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which of the following is true in the life cycle of a request in Struct2 application?",
    "options": [
      "All of the others",
      "Selected action is executed to perform the requested operation",
      "Configured interceptors are applied to do any post-processing if required",
      "Finally the result is prepared by the view and returns the result to the user"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which of the following components is available using ActionContext map? (Access using OGNL)",
    "options": [
      "root / value stack - action variables.",
      "app - application scoped variables.",
      "sessionScope - session scoped variables",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "root / value stack - action variables."
    ]
  },
  {
    "question": "Which of the following components is available using ActionContext map? (Access using OGNL)",
    "options": [
      "root / value stack - action variables.",
      "app - application scoped variables.",
      "sessionScope - session scoped variables",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "root / value stack - action variables."
    ]
  },
  {
    "question": "What is the purpose of @IntRangeFieldValidator annotation?",
    "options": [
      "This annotation checks that a numeric field has a value within a specified range",
      "This annotation checks that a double field has a value within a specified range",
      "This annotation checks that a field is a valid e-mail address if it contains a non-empty String",
      "This annotation validates a supplied regular expression",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "This annotation checks that a numeric field has a value within a specified range"
    ]
  },
  {
    "question": "What is the purpose of @IntRangeFieldValidator annotation?",
    "options": [
      "This annotation checks that a numeric field has a value within a specified range",
      "This annotation checks that a double field has a value within a specified range",
      "This annotation checks that a field is a valid e-mail address if it contains a non-empty String",
      "This annotation validates a supplied regular expression",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "This annotation checks that a numeric field has a value within a specified range"
    ]
  },
  {
    "question": "What is the purpose of @RequiredFieldValidator annotation?",
    "options": [
      "This annotation checks that a field is non-null",
      "This annotation validates a string field using a regular expression",
      "This annotation validates a supplied regular expression",
      "This annotation checks that a numeric field has a value within a specified range",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "This annotation checks that a field is non-null"
    ]
  },
  {
    "question": "What is the purpose of @RequiredFieldValidator annotation?",
    "options": [
      "This annotation checks that a field is non-null",
      "This annotation validates a string field using a regular expression",
      "This annotation validates a supplied regular expression",
      "This annotation checks that a numeric field has a value within a specified range",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "This annotation checks that a field is non-null"
    ]
  },
  {
    "question": "The ________ method returns the Servlet configuration object of the servlet instance.",
    "options": [
      "getServletConfig()",
      "init()",
      "getInitParameter()",
      "service()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getServletConfig()"
    ]
  },
  {
    "question": "The ________ method returns the Servlet configuration object of the servlet instance.",
    "options": [
      "getServletConfig()",
      "init()",
      "getInitParameter()",
      "service()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getServletConfig()"
    ]
  },
  {
    "question": "The________ method gives addition information, data\u00a0stored in\u00a0servlet",
    "options": [
      "getContentLength()",
      "getParameter()",
      "getServerName()",
      "getAttribute()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getAttribute()"
    ]
  },
  {
    "question": "The________ method gives addition information, data\u00a0stored in\u00a0servlet",
    "options": [
      "getContentLength()",
      "getParameter()",
      "getServerName()",
      "getAttribute()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getAttribute()"
    ]
  },
  {
    "question": "A developer chooses to avoid using SingleThreadModel but wants to ensure that data is updated in a thread-safe manner. Choosing the correct option can support this design goal.",
    "options": [
      "Store the data in the ServletRequest object",
      "Store the data in the ServletContext object",
      "Store the data in the HttpSession object",
      "Store the data in an instance variable"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Store the data in the ServletRequest object"
    ]
  },
  {
    "question": "A developer chooses to avoid using SingleThreadModel but wants to ensure that client data is updated in a thread-safe manner. Choosing the correct option can support this design goal.",
    "options": [
      "Store the data in the ServletRequest object",
      "Store the data in the ServletContext object",
      "Store the data in the HttpSession object",
      "Store the data in an instance variable",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Store the data in the ServletRequest object"
    ]
  },
  {
    "question": "A developer chooses to avoid using SingleThreadModel but wants to ensure that data is updated in a thread-safe manner. Choosing the correct option can support this design goal.",
    "options": [
      "Store the data in the ServletRequest object",
      "Store the data in the ServletContext object",
      "Store the data in the HttpSession object",
      "Store the data in an instance variable"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Store the data in the ServletRequest object"
    ]
  },
  {
    "question": "A developer chooses to avoid using SingleThreadModel but wants to ensure that client data is updated in a thread-safe manner. Choosing the correct option can support this design goal.",
    "options": [
      "Store the data in the ServletRequest object",
      "Store the data in the ServletContext object",
      "Store the data in the HttpSession object",
      "Store the data in an instance variable",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Store the data in the ServletRequest object"
    ]
  },
  {
    "question": "Which of the following code can be used to set the status code of the response?",
    "options": [
      "response.addStatus(statusCode)",
      "request.setStatus(statusCode)",
      "header.setStatus(statusCode)",
      "None of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the above"
    ]
  },
  {
    "question": "Which of the following code can be used to set the status code of the response?",
    "options": [
      "response.addStatus(statusCode)",
      "request.setStatus(statusCode)",
      "header.setStatus(statusCode)",
      "None of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the above"
    ]
  },
  {
    "question": "Which of the following code can be used to set date header?",
    "options": [
      "response.setDateHeader(name,date)",
      "request.setDateHeader(name,date)",
      "Header.setDateHeader(name,date)",
      "None of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the above"
    ]
  },
  {
    "question": "Which of the following code can be used to set date header?",
    "options": [
      "response.setDateHeader(name,date)",
      "request.setDateHeader(name,date)",
      "Header.setDateHeader(name,date)",
      "None of the above"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the above"
    ]
  },
  {
    "question": "Which of the following statements about the deployment descriptor is true?",
    "options": [
      "It instructs a deployment tool to create specific configuration requirements for deployment of a servlet.",
      "It is written using HTML syntax",
      "None of the others",
      "It is stored in web.xml file"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It is stored in web.xml file"
    ]
  },
  {
    "question": "Which of the following statements about the deployment descriptor is true?",
    "options": [
      "It instructs a deployment tool to create specific configuration requirements for deployment of a servlet.",
      "It is written using HTML syntax",
      "None of the others",
      "It is stored in web.xml file"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It is stored in web.xml file"
    ]
  },
  {
    "question": "Match the methods of the ServletResponse interface with their corresponding description.Description (A) Returns an object of PrintWriter class that sends character text to the client.(B) Uses ServletOutputStream object to write response as binary data to the client.(C) Returns the MIME type of the request. (D) Used to set the format in which the data is sent to the client. Method(1) setContentType()(2) getContentType()(3) getWriter() (4) getOutputStream()",
    "options": [
      "A-2, B-3, C-4, D-1",
      "A-3, B-4, C-2, D-1",
      "A-4, B-1, C-2, D-3",
      "A-1, B-2, C-3, D-4"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-3, B-4, C-2, D-1"
    ]
  },
  {
    "question": "Match the methods of the ServletResponse interface with their corresponding description.Description (A) Returns an object of PrintWriter class that sends character text to the client.(B) Uses ServletOutputStream object to write response as binary data to the client.(C) Returns the MIME type of the request. (D) Used to set the format in which the data is sent to the client. Method(1) setContentType()(2) getContentType()(3) getWriter() (4) getOutputStream()",
    "options": [
      "A-2, B-3, C-4, D-1",
      "A-3, B-4, C-2, D-1",
      "A-4, B-1, C-2, D-3",
      "A-1, B-2, C-3, D-4"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-3, B-4, C-2, D-1"
    ]
  },
  {
    "question": "Which of the following methods is used for redirecting requests?",
    "options": [
      "getHeader()",
      "redirectRequest()",
      "sendRedirect()",
      "RequestDispatcher()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "sendRedirect()"
    ]
  },
  {
    "question": "Which of the following methods is used for redirecting requests?",
    "options": [
      "getHeader()",
      "redirectRequest()",
      "sendRedirect()",
      "RequestDispatcher()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "sendRedirect()"
    ]
  },
  {
    "question": "Which of the following options is a LIMITATION that is overcome by a Web server?",
    "options": [
      "Username and password are retained by the browser.",
      "Each time user is prompted for username and password for accessing subsequent pages.",
      "Dynamic Web content can be managed from the client end.",
      "It is feasible to maintain static Web content from the customer's end."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Dynamic Web content can be managed from the client end."
    ]
  },
  {
    "question": "Which of the following options is a LIMITATION that is overcome by a Web server?",
    "options": [
      "Username and password are retained by the browser.",
      "Each time user is prompted for username and password for accessing subsequent pages.",
      "Dynamic Web content can be managed from the client end.",
      "It is feasible to maintain static Web content from the customer's end."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Dynamic Web content can be managed from the client end."
    ]
  },
  {
    "question": "Which of the following is a correct syntax of the getAttribute() method?",
    "options": [
      "public Object getAttribute(String name1)",
      "public Object getAttribute(String name1, Object object1)",
      "public Object getAttribute(Object object1)",
      "public Name getAttribute(Object object1)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public Object getAttribute(String name1)"
    ]
  },
  {
    "question": "Which of the following is a correct syntax of the getAttribute() method?",
    "options": [
      "public Object getAttribute(String name1)",
      "public Object getAttribute(String name1, Object object1)",
      "public Object getAttribute(Object object1)",
      "public Name getAttribute(Object object1)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public Object getAttribute(String name1)"
    ]
  },
  {
    "question": "To send text outptut in a response, the following method of HttpServletResponse may be used to get the appropriate Writer/Stream object.",
    "options": [
      "getStream",
      "getWriter",
      "getBinaryStream",
      "getReader"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getWriter"
    ]
  },
  {
    "question": "Which sub-element is used to define a logical name of servlet in web deployment descriptor?",
    "options": [
      "servlet-name",
      "servlet-class",
      "url-pattern",
      "All of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "servlet-name"
    ]
  },
  {
    "question": "getInitParameter() is the method of:",
    "options": [
      "A. ServletConfig",
      "B. ServletAttribute",
      "C. ServletScope",
      "D. ServletMultithreading"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A. ServletConfig"
    ]
  },
  {
    "question": "To send text outptut in a response, the following method of HttpServletResponse may be used to get the appropriate Writer/Stream object.",
    "options": [
      "getStream",
      "getWriter",
      "getBinaryStream",
      "getReader"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getWriter"
    ]
  },
  {
    "question": "Which sub-element is used to define a logical name of servlet in web deployment descriptor?",
    "options": [
      "servlet-name",
      "servlet-class",
      "url-pattern",
      "All of the other choices"
    ],
    "description": "Choose 1 option",
    "answer": [
      "servlet-name"
    ]
  },
  {
    "question": "getInitParameter() is the method of:",
    "options": [
      "A. ServletConfig",
      "B. ServletAttribute",
      "C. ServletScope",
      "D. ServletMultithreading"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A. ServletConfig"
    ]
  },
  {
    "question": "What would be the best directory in which to store a supporting JAR file for a web application? Note that in the list below, all directories begin from the context root",
    "options": [
      "/WEB-INF",
      "/WEB-INF/classes",
      "/jars",
      "/WEB-INF/ lib",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF/ lib"
    ]
  },
  {
    "question": "Attributes stored in session scope are available until:",
    "options": [
      "User opens a new tab for another website",
      "User closes the current tab",
      "User closes all the windows of the current browser",
      "User refreshes the current page"
    ],
    "description": "Choose 1 option",
    "answer": [
      "User closes all the windows of the current browser"
    ]
  },
  {
    "question": "What would be the best directory in which to store a supporting JAR file for a web application? Note that in the list below, all directories begin from the context root",
    "options": [
      "/WEB-INF",
      "/WEB-INF/classes",
      "/jars",
      "/WEB-INF/ lib",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "/WEB-INF/ lib"
    ]
  },
  {
    "question": "Attributes stored in session scope are available until:",
    "options": [
      "User opens a new tab for another website",
      "User closes the current tab",
      "User closes all the windows of the current browser",
      "User refreshes the current page"
    ],
    "description": "Choose 1 option",
    "answer": [
      "User closes all the windows of the current browser"
    ]
  },
  {
    "question": "Which of the following files\u00a0are the correct name and location of deployment descriptor of a web application. Assume that the web application is rooted at \\doc-root. Select the one correct answer",
    "options": [
      "\\doc-root\\dd.xml",
      "\\doc-root\\web.xml",
      "\\doc-root\\WEB-INF\\web.xml",
      "\\doc-root\\WEB_INF\\dd.xml",
      "\\doc-root\\WEB-INF\\dd.xml",
      "\\doc-root\\WEB_INF\\web.xml",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "\\doc-root\\WEB-INF\\web.xml"
    ]
  },
  {
    "question": "Which of the followings is a correct syntax of the method that is used to get the initialized parameter in ServletContext or ServletConfig?",
    "options": [
      "String getInitParameter(String name);",
      "String getContextParameter(String name);",
      "String getInitializedParameter(String name);",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "String getInitParameter(String name);"
    ]
  },
  {
    "question": "Among the below scopes of web container model, which one has the longest-lived",
    "options": [
      "Page Scope",
      "Context Scope",
      "Application Scope",
      "Both B & C"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both B & C"
    ]
  },
  {
    "question": "Which of the following files\u00a0are the correct name and location of deployment descriptor of a web application. Assume that the web application is rooted at \\doc-root. Select the one correct answer",
    "options": [
      "\\doc-root\\dd.xml",
      "\\doc-root\\web.xml",
      "\\doc-root\\WEB-INF\\web.xml",
      "\\doc-root\\WEB_INF\\dd.xml",
      "\\doc-root\\WEB-INF\\dd.xml",
      "\\doc-root\\WEB_INF\\web.xml",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "\\doc-root\\WEB-INF\\web.xml"
    ]
  },
  {
    "question": "Which of the followings is a correct syntax of the method that is used to get the initialized parameter in ServletContext or ServletConfig?",
    "options": [
      "String getInitParameter(String name);",
      "String getContextParameter(String name);",
      "String getInitializedParameter(String name);",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "String getInitParameter(String name);"
    ]
  },
  {
    "question": "Among the below scopes of web container model, which one has the longest-lived",
    "options": [
      "Page Scope",
      "Context Scope",
      "Application Scope",
      "Both B & C"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both B & C"
    ]
  },
  {
    "question": "Servlets and JavaBean classes that are parts of a packages are placed in the _______ directory.",
    "options": [
      "classes",
      "lib",
      "tld",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "classes"
    ]
  },
  {
    "question": "Servlets and JavaBean classes that are parts of a packages are placed in the _______ directory.",
    "options": [
      "classes",
      "lib",
      "tld",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "classes"
    ]
  },
  {
    "question": "Which of the following statements about Web Container is true?",
    "options": [
      "Container is a program, which manages the execution of servlets",
      "A Web application is accessible to all users connected to the Web",
      "The Web Container takes request from a servlet and passes it to a Web Server for processing",
      "The performance of a servlet is independent of the efficiency of the container",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Container is a program, which manages the execution of servlets"
    ]
  },
  {
    "question": "Which of the following statements about Web Container is true.",
    "options": [
      "Container is a program, which manages the execution of servlets",
      "A Web application is accessible to all users connected to the Web",
      "The Web Container takes request from a servlet and passes it to a Web Server for processing",
      "The performance of a servlet is independent of the efficiency of the container"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Container is a program, which manages the execution of servlets"
    ]
  },
  {
    "question": "Which of the following statements about Web Container is true?",
    "options": [
      "Container is a program, which manages the execution of servlets",
      "A Web application is accessible to all users connected to the Web",
      "The Web Container takes request from a servlet and passes it to a Web Server for processing",
      "The performance of a servlet is independent of the efficiency of the container",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Container is a program, which manages the execution of servlets"
    ]
  },
  {
    "question": "Which of the following statements about Web Container is true.",
    "options": [
      "Container is a program, which manages the execution of servlets",
      "A Web application is accessible to all users connected to the Web",
      "The Web Container takes request from a servlet and passes it to a Web Server for processing",
      "The performance of a servlet is independent of the efficiency of the container"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Container is a program, which manages the execution of servlets"
    ]
  },
  {
    "question": "Which of these\u00a0are true about deployment descriptors?",
    "options": [
      "The order of elements in deployment descriptor is important. The elements must follow a specific order",
      "The elements of deployment descriptor are case insensitive",
      "The servlet-mapping element, if defined, must be included within the servlet element.",
      "The web-app element must include the servlet element",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The order of elements in deployment descriptor is important. The elements must follow a specific order"
    ]
  },
  {
    "question": "In request dispatcher, both ______ and _______ methods are used for servlet communication",
    "options": [
      "include/ forward",
      "forward/ sendRedirect",
      "include/ sendRedirect",
      "forward/ response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "include/ forward"
    ]
  },
  {
    "question": "Which of these\u00a0are true about deployment descriptors?",
    "options": [
      "The order of elements in deployment descriptor is important. The elements must follow a specific order",
      "The elements of deployment descriptor are case insensitive",
      "The servlet-mapping element, if defined, must be included within the servlet element.",
      "The web-app element must include the servlet element",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The order of elements in deployment descriptor is important. The elements must follow a specific order"
    ]
  },
  {
    "question": "In request dispatcher, both ______ and _______ methods are used for servlet communication",
    "options": [
      "include/ forward",
      "forward/ sendRedirect",
      "include/ sendRedirect",
      "forward/ response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "include/ forward"
    ]
  },
  {
    "question": "Which of these characteristics of a filter is true?",
    "options": [
      "A filter optimises the time it takes to send back a response from your Web server",
      "An authentication filter tracks the activities of users of a Web application",
      "A logging and auditing filter allow users to log in to a Web application",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A filter optimises the time it takes to send back a response from your Web server"
    ]
  },
  {
    "question": "Which of these characteristics of a filter is true?",
    "options": [
      "A filter optimises the time it takes to send back a response from your Web server",
      "An authentication filter tracks the activities of users of a Web application",
      "A logging and auditing filter allow users to log in to a Web application",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A filter optimises the time it takes to send back a response from your Web server"
    ]
  },
  {
    "question": "Which of these characteristics of a filter is true?",
    "options": [
      "A filter optimises the time it takes to send back a response from your Web server",
      "An authentication filter tracks the activities of users of a Web application",
      "A logging and auditing filter allow users to log in to a Web application",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A filter optimises the time it takes to send back a response from your Web server"
    ]
  },
  {
    "question": "Which of these characteristics of a filter is true?",
    "options": [
      "A filter optimises the time it takes to send back a response from your Web server",
      "An authentication filter tracks the activities of users of a Web application",
      "A logging and auditing filter allow users to log in to a Web application",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A filter optimises the time it takes to send back a response from your Web server"
    ]
  },
  {
    "question": "What\u2019s directory of a Web Application that developer must copy *.class?",
    "options": [
      "WEB-INF/classes",
      "WEB-INF/tag",
      "WEB-INF/lib",
      "WEB-INF/tlds"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF/classes"
    ]
  },
  {
    "question": "What\u2019s directory of a Web Application that developer must copy *.class?",
    "options": [
      "WEB-INF/classes",
      "WEB-INF/tag",
      "WEB-INF/lib",
      "WEB-INF/tlds"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF/classes"
    ]
  },
  {
    "question": "What does the FilterChain do?",
    "options": [
      "It invokes the next filter in the chain, or if the calling filter is the last filter in the chain, it invokes the resource at the end of the chain.",
      "It invokes the first filter in the chain.",
      "It does nothing.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It invokes the next filter in the chain, or if the calling filter is the last filter in the chain, it invokes the resource at the end of the chain."
    ]
  },
  {
    "question": "What does the FilterChain do?",
    "options": [
      "It invokes the next filter in the chain, or if the calling filter is the last filter in the chain, it invokes the resource at the end of the chain.",
      "It invokes the first filter in the chain.",
      "It does nothing.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It invokes the next filter in the chain, or if the calling filter is the last filter in the chain, it invokes the resource at the end of the chain."
    ]
  },
  {
    "question": "What does the FilterChain do?",
    "options": [
      "It invokes the next filter in the chain, or if the calling filter is the last filter in the chain, it invokes the resource at the end of the chain.",
      "It invokes the first filter in the chain.",
      "It does nothing.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It invokes the next filter in the chain, or if the calling filter is the last filter in the chain, it invokes the resource at the end of the chain."
    ]
  },
  {
    "question": "What does the FilterChain do?",
    "options": [
      "It invokes the next filter in the chain, or if the calling filter is the last filter in the chain, it invokes the resource at the end of the chain.",
      "It invokes the first filter in the chain.",
      "It does nothing.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It invokes the next filter in the chain, or if the calling filter is the last filter in the chain, it invokes the resource at the end of the chain."
    ]
  },
  {
    "question": "How can a servlet call a JSP error page?",
    "options": [
      "The servlet needs to forward the request to the specific error page URL. The exception is passed along as an attribute named \"javax.servlet.jsp.jspException\".",
      "This capability is not supported.",
      "When the servlet throws an exception, it will automatically be caught by the calling JSP page.",
      "The servlet needs to redirect the response to the specific error page, saving the exception off in a cookie."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The servlet needs to forward the request to the specific error page URL. The exception is passed along as an attribute named \"javax.servlet.jsp.jspException\"."
    ]
  },
  {
    "question": "How can a servlet call a JSP error page?",
    "options": [
      "The servlet needs to forward the request to the specific error page URL. The exception is passed along as an attribute named \"javax.servlet.jsp.jspException\".",
      "This capability is not supported.",
      "When the servlet throws an exception, it will automatically be caught by the calling JSP page.",
      "The servlet needs to redirect the response to the specific error page, saving the exception off in a cookie."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The servlet needs to forward the request to the specific error page URL. The exception is passed along as an attribute named \"javax.servlet.jsp.jspException\"."
    ]
  },
  {
    "question": "The _____ directory contains the archive files requires for Web Application such as database drivers",
    "options": [
      "lib",
      "classes",
      "tlds",
      "tags"
    ],
    "description": "Choose 1 option",
    "answer": [
      "lib"
    ]
  },
  {
    "question": "The _____ directory contains the archive files requires for Web Application such as database drivers",
    "options": [
      "lib",
      "classes",
      "tlds",
      "tags"
    ],
    "description": "Choose 1 option",
    "answer": [
      "lib"
    ]
  },
  {
    "question": "The deployment descriptor file using in Web application is named as ________ and placed under the _______ directory",
    "options": [
      "jboss.xml/META-INF",
      "*.xml/WEB-INF",
      "ejb-jar.xml/META-INF",
      "web.xml/ WEB-INF"
    ],
    "description": "Choose 1 option",
    "answer": [
      "web.xml/ WEB-INF"
    ]
  },
  {
    "question": "The deployment descriptor file using in Web application is named as ________ and placed under the _______ directory",
    "options": [
      "jboss.xml/META-INF",
      "*.xml/WEB-INF",
      "ejb-jar.xml/META-INF",
      "web.xml/ WEB-INF"
    ],
    "description": "Choose 1 option",
    "answer": [
      "web.xml/ WEB-INF"
    ]
  },
  {
    "question": "The ________ method returns a reference to the ServletContext Object",
    "options": [
      "getServletContext()",
      "getInitParameter()",
      "service()",
      "init()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getServletContext()"
    ]
  },
  {
    "question": "The ________ method returns a reference to the ServletContext Object",
    "options": [
      "getServletContext()",
      "getInitParameter()",
      "service()",
      "init()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getServletContext()"
    ]
  },
  {
    "question": "The ________ method returns a string containing the value of the named initialisation parameter",
    "options": [
      "getInitParameter()",
      "init()",
      "jspInit",
      "getServletConfig()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getInitParameter()"
    ]
  },
  {
    "question": "The ________ method returns a string containing the value of the named initialisation parameter",
    "options": [
      "getInitParameter()",
      "init()",
      "jspInit",
      "getServletConfig()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getInitParameter()"
    ]
  },
  {
    "question": "Which of the following commands will successfully build a WAR file?",
    "options": [
      "jar -tvf myfile.war *.*",
      "jar -cfv myfile.war *.class",
      "jar \u2013war myfile.war *.*",
      "jar -cvf myfile.war *.*",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "jar -cvf myfile.war *.*"
    ]
  },
  {
    "question": "Which of the following commands will successfully build a WAR file?",
    "options": [
      "jar -tvf myfile.war *.*",
      "jar -cfv myfile.war *.class",
      "jar \u2013war myfile.war *.*",
      "jar -cvf myfile.war *.*"
    ],
    "description": "Choose 1 option",
    "answer": [
      "jar -cvf myfile.war *.*"
    ]
  },
  {
    "question": "Which of the following commands will successfully build a WAR file?",
    "options": [
      "jar -tvf myfile.war *.*",
      "jar -cfv myfile.war *.class",
      "jar \u2013war myfile.war *.*",
      "jar -cvf myfile.war *.*",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "jar -cvf myfile.war *.*"
    ]
  },
  {
    "question": "Which of the following commands will successfully build a WAR file?",
    "options": [
      "jar -tvf myfile.war *.*",
      "jar -cfv myfile.war *.class",
      "jar \u2013war myfile.war *.*",
      "jar -cvf myfile.war *.*"
    ],
    "description": "Choose 1 option",
    "answer": [
      "jar -cvf myfile.war *.*"
    ]
  },
  {
    "question": "Which element is the parent of the <filter> tag in the web application deployment descriptor?",
    "options": [
      "<web-app>",
      "<filters>",
      "<filter-list>",
      "<servlet>",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<web-app>"
    ]
  },
  {
    "question": "Which element is the parent of the <filter> tag in the web application deployment descriptor?",
    "options": [
      "<web-app>",
      "<filters>",
      "<filter-list>",
      "<servlet>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<web-app>"
    ]
  },
  {
    "question": "Which element is the parent of the <filter> tag in the web application deployment descriptor?",
    "options": [
      "<web-app>",
      "<filters>",
      "<filter-list>",
      "<servlet>",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<web-app>"
    ]
  },
  {
    "question": "Which element is the parent of the <filter> tag in the web application deployment descriptor?",
    "options": [
      "<web-app>",
      "<filters>",
      "<filter-list>",
      "<servlet>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<web-app>"
    ]
  },
  {
    "question": "_____ provides a way to identify a user across more than one page request or visit to a Web site and to store information about that user.",
    "options": [
      "Session management",
      "Cookie",
      "Hidden Field",
      "URL Rewrite"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session management"
    ]
  },
  {
    "question": "_____ provides a way to identify a user across more than one page request or visit to a Web site and to store information about that user.",
    "options": [
      "Session management",
      "Cookie",
      "Hidden Field",
      "URL Rewrite"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session management"
    ]
  },
  {
    "question": "A ________has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number.",
    "options": [
      "cookie",
      "session",
      "request",
      "response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "cookie"
    ]
  },
  {
    "question": "A ________has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number.",
    "options": [
      "cookie",
      "session",
      "request",
      "response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "cookie"
    ]
  },
  {
    "question": "Study the statements:\n1)The special directory /WEB-INF/lib contains Java class files\u2014servlets and supporting code.2)The special directory /WEB-INF/classes contains JAR files with supporting libraries of code.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are not true."
    ]
  },
  {
    "question": "Study the statements:\n1)The special directory /WEB-INF/lib contains Java class files\u2014servlets and supporting code.2)The special directory /WEB-INF/classes contains JAR files with supporting libraries of code.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are not true."
    ]
  },
  {
    "question": "Study the statements:\n1)Every web application within a web container has a unique context path.2)The context path and any directories you choose to create within it contain resources that are accessible through HTTP.",
    "options": [
      "Only statement 1 is true",
      "Only statement 2 is true",
      "Both 1 and 2 are true",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true"
    ]
  },
  {
    "question": "Study the statements:\n1)Every web application within a web container has a unique context path.2)The context path and any directories you choose to create within it contain resources that are accessible through HTTP.",
    "options": [
      "Only statement 1 is true",
      "Only statement 2 is true",
      "Both 1 and 2 are true",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true"
    ]
  },
  {
    "question": "Which of these is true about deployment descriptors (web.xml)?. Select the one correct answer.",
    "options": [
      "The elements of deployment descriptor are case sensitive.",
      "The servlet-mapping element, if defined, must be included within the servlet element.",
      "The web-app element must include the servlet element.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The elements of deployment descriptor are case sensitive."
    ]
  },
  {
    "question": "Which of these is true about deployment descriptors (web.xml)?. Select the one correct answer.",
    "options": [
      "The elements of deployment descriptor are case sensitive.",
      "The servlet-mapping element, if defined, must be included within the servlet element.",
      "The web-app element must include the servlet element.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The elements of deployment descriptor are case sensitive."
    ]
  },
  {
    "question": "Which of the following files is the correct name and location of deployment descriptor of a web application?. Assume that the web application is rooted at \\doc-root. Select the one correct answer.",
    "options": [
      "\\doc-root\\dd.xml",
      "\\doc-root\\web.xml",
      "\\doc-root\\WEB-INF\\web.xml",
      "\\doc-root\\WEB_INF\\dd.xml",
      "\\doc-root\\WEB_META\\web.xml"
    ],
    "description": "Choose 1 option",
    "answer": [
      "\\doc-root\\WEB-INF\\web.xml"
    ]
  },
  {
    "question": "Which of the following files is the correct name and location of deployment descriptor of a web application?. Assume that the web application is rooted at \\doc-root. Select the one correct answer.",
    "options": [
      "\\doc-root\\dd.xml",
      "\\doc-root\\web.xml",
      "\\doc-root\\WEB-INF\\web.xml",
      "\\doc-root\\WEB_INF\\dd.xml",
      "\\doc-root\\WEB_META\\web.xml"
    ],
    "description": "Choose 1 option",
    "answer": [
      "\\doc-root\\WEB-INF\\web.xml"
    ]
  },
  {
    "question": "When a specific request is processed, some servlets must be called and they need to access some common data. These common data should be put to\u00a0dynamic variables in the ..... scope( select the most correct option).",
    "options": [
      "request",
      "session",
      "application",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "request"
    ]
  },
  {
    "question": "When a specific request is processed, some servlets must be called and they need to access some common data. These common data should be put to\u00a0dynamic variables in the ..... scope( select the most correct option).",
    "options": [
      "request",
      "session",
      "application",
      "none of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "request"
    ]
  },
  {
    "question": "When a specific request is processed, some servlets must be called and they need to access some common data. These common data should be put to\u00a0dynamic variables in the ..... scope( select the most correct option).",
    "options": [
      "request",
      "session",
      "application",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "request"
    ]
  },
  {
    "question": "When a specific request is processed, some servlets must be called and they need to access some common data. These common data should be put to\u00a0dynamic variables in the ..... scope( select the most correct option).",
    "options": [
      "request",
      "session",
      "application",
      "none of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "request"
    ]
  },
  {
    "question": "A servlet can contain instance variables but the developer can not\u00a0create the servlet based on its constructors and parameters. A way to assign parameters to\u00a0these variables is ......",
    "options": [
      "getting parameters from the deployment descriptor file.",
      "getting parameters from the request's query string.",
      "getting parameters from the cookies attached in the request.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "A servlet can contain instance variables but the developer can not\u00a0create the servlet based on its constructors and parameters. A way to assign parameters to\u00a0these variables is ......",
    "options": [
      "getting parameters from the deployment descriptor file.",
      "getting parameters from the request's query string.",
      "getting parameters from the cookies attached in the request.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Given: \n\n<filter> \n\n<filter-name>FilterF</filter-name> \n<filter-class>sample.servlet.Filter1</filter-class> \n</filter> \n<filter> \n\n<filter-name>FilterE</filter-name> \n<filter-class>sample.servlet.Filter2</filter-class> \n</filter> \n<filter-mapping> \n\n<filter-name>FilterF</filter-name> \n<url-pattern>/FilterServlet</url-pattern> \n</filter-mapping> \n<filter-mapping> \n\n<filter-name>FilterE</filter-name> \n<url-pattern>/FilterServlet</url-pattern> \n</filter-mapping> \nChoose the correct statement",
    "options": [
      "The request is applied the FilterF, FilterE in sequence",
      "The response is applied the FilterF, FilterE in sequence",
      "The request is applied the FilterE, FilterF in sequence",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The request is applied the FilterF, FilterE in sequence"
    ]
  },
  {
    "question": "Given: \n\n<filter> \n\n<filter-name>FilterF</filter-name> \n<filter-class>sample.servlet.Filter1</filter-class> \n</filter> \n<filter> \n\n<filter-name>FilterE</filter-name> \n<filter-class>sample.servlet.Filter2</filter-class> \n</filter> \n<filter-mapping> \n\n<filter-name>FilterF</filter-name> \n<url-pattern>/FilterServlet</url-pattern> \n</filter-mapping> \n<filter-mapping> \n\n<filter-name>FilterE</filter-name> \n<url-pattern>/FilterServlet</url-pattern> \n</filter-mapping> \nChoose the correct statement",
    "options": [
      "The request is applied the FilterF, FilterE in sequence",
      "The response is applied the FilterF, FilterE in sequence",
      "The request is applied the FilterE, FilterF in sequence",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The request is applied the FilterF, FilterE in sequence"
    ]
  },
  {
    "question": "Given: \n\n<filter> \n\n<filter-name>FilterF</filter-name> \n<filter-class>sample.servlet.Filter1</filter-class> \n</filter> \n<filter> \n\n<filter-name>FilterE</filter-name> \n<filter-class>sample.servlet.Filter2</filter-class> \n</filter> \n<filter-mapping> \n\n<filter-name>FilterF</filter-name> \n<url-pattern>/FilterServlet</url-pattern> \n</filter-mapping> \n<filter-mapping> \n\n<filter-name>FilterE</filter-name> \n<url-pattern>/FilterServlet</url-pattern> \n</filter-mapping> \nChoose the correct statement",
    "options": [
      "The request is applied the FilterF, FilterE in sequence",
      "The response is applied the FilterF, FilterE in sequence",
      "The request is applied the FilterE, FilterF in sequence",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The request is applied the FilterF, FilterE in sequence"
    ]
  },
  {
    "question": "Given: \n\n<filter> \n\n<filter-name>FilterF</filter-name> \n<filter-class>sample.servlet.Filter1</filter-class> \n</filter> \n<filter> \n\n<filter-name>FilterE</filter-name> \n<filter-class>sample.servlet.Filter2</filter-class> \n</filter> \n<filter-mapping> \n\n<filter-name>FilterF</filter-name> \n<url-pattern>/FilterServlet</url-pattern> \n</filter-mapping> \n<filter-mapping> \n\n<filter-name>FilterE</filter-name> \n<url-pattern>/FilterServlet</url-pattern> \n</filter-mapping> \nChoose the correct statement",
    "options": [
      "The request is applied the FilterF, FilterE in sequence",
      "The response is applied the FilterF, FilterE in sequence",
      "The request is applied the FilterE, FilterF in sequence",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The request is applied the FilterF, FilterE in sequence"
    ]
  },
  {
    "question": "Which of the following statements is false?",
    "options": [
      "The request parameters can be named with same name",
      "The init parameters of ServletConfig can be named with same name",
      "The init parameters of ServletContext can be named with same name",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The init parameters of ServletContext can be named with same name"
    ]
  },
  {
    "question": "Which of the following statements is false?",
    "options": [
      "The request parameters can be named with same name",
      "The init parameters of ServletConfig can be named with same name",
      "The init parameters of ServletContext can be named with same name",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The init parameters of ServletContext can be named with same name"
    ]
  },
  {
    "question": "Purpose and semantics of a web application will be put .........",
    "options": [
      "in a file containing its deployment descriptor.",
      "in a file containing servlet names only.",
      "in a relational database managed by the web container.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "in a file containing its deployment descriptor."
    ]
  },
  {
    "question": "Purpose and semantics of a web application will be put .........",
    "options": [
      "in a file containing its deployment descriptor.",
      "in a file containing servlet names only.",
      "in a relational database managed by the web container.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "in a file containing its deployment descriptor."
    ]
  },
  {
    "question": "Which of the following tags will declare the name of a servlet that can be accessed from a client?",
    "options": [
      "<servlet-mapping>",
      "<servlet>",
      "<servlet-client-name>",
      "<servlet_name>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<servlet-mapping>"
    ]
  },
  {
    "question": "Which of the following tags will declare the name of a servlet that can be accessed from a client?",
    "options": [
      "<servlet-mapping>",
      "<servlet>",
      "<servlet-client-name>",
      "<servlet_name>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<servlet-mapping>"
    ]
  },
  {
    "question": "Which of the following scopes permit(s) its (their) attributes lasting in a duration of a session of a client?",
    "options": [
      "session, context",
      "session",
      "context",
      "request",
      "page"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session, context"
    ]
  },
  {
    "question": "Which of the following scopes permit(s) its (their) attributes lasting in a duration of a session of a client?",
    "options": [
      "session, context",
      "session",
      "context",
      "request",
      "page"
    ],
    "description": "Choose 1 option",
    "answer": [
      "session, context"
    ]
  },
  {
    "question": "In WAR file, which of the following folders contains servlet class files?",
    "options": [
      "classes",
      "lib",
      "tags",
      "servlet",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "classes"
    ]
  },
  {
    "question": "In WAR file, which of the following folders contains servlet class files?",
    "options": [
      "classes",
      "lib",
      "tags",
      "servlet"
    ],
    "description": "Choose 1 option",
    "answer": [
      "classes"
    ]
  },
  {
    "question": "In WAR file, which of the following folders contains servlet class files?",
    "options": [
      "classes",
      "lib",
      "tags",
      "servlet",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "classes"
    ]
  },
  {
    "question": "In WAR file, which of the following folders contains servlet class files?",
    "options": [
      "classes",
      "lib",
      "tags",
      "servlet"
    ],
    "description": "Choose 1 option",
    "answer": [
      "classes"
    ]
  },
  {
    "question": "In web.xml file, which of the following elements is used to configure the timeout for sessions generated in the web application?",
    "options": [
      "<session-timeout> timeout </session-timeout>",
      "<timeout> timeout </timeout>",
      "<session> timeout </session>",
      "It is not allowed to specify timeout for sessions in web.xml",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<session-timeout> timeout </session-timeout>"
    ]
  },
  {
    "question": "In web.xml file, which of the following elements is used to configure the timeout for sessions generated in the web application?",
    "options": [
      "<session-timeout> timeout </session-timeout>",
      "<timeout> timeout </timeout>",
      "<session> timeout </session>",
      "It is not allowed to specify timeout for sessions in web.xml"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<session-timeout> timeout </session-timeout>"
    ]
  },
  {
    "question": "In web.xml file, which of the following elements is used to configure the timeout for sessions generated in the web application?",
    "options": [
      "<session-timeout> timeout </session-timeout>",
      "<timeout> timeout </timeout>",
      "<session> timeout </session>",
      "It is not allowed to specify timeout for sessions in web.xml",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<session-timeout> timeout </session-timeout>"
    ]
  },
  {
    "question": "In web.xml file, which of the following elements is used to configure the timeout for sessions generated in the web application?",
    "options": [
      "<session-timeout> timeout </session-timeout>",
      "<timeout> timeout </timeout>",
      "<session> timeout </session>",
      "It is not allowed to specify timeout for sessions in web.xml"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<session-timeout> timeout </session-timeout>"
    ]
  },
  {
    "question": "Which of the following request dispatching techniques can be used to include the content of another servlet into the current output stream?",
    "options": [
      "include",
      "forward",
      "redirect",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "include"
    ]
  },
  {
    "question": "Which of the following request dispatching techniques can be used to include the content of another servlet into the current output stream?",
    "options": [
      "include",
      "forward",
      "redirect",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "include"
    ]
  },
  {
    "question": "Which of the following request dispatching techniques can be used to include the content of another servlet into the current output stream?",
    "options": [
      "include",
      "forward",
      "redirect",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "include"
    ]
  },
  {
    "question": "Which of the following request dispatching techniques can be used to include the content of another servlet into the current output stream?",
    "options": [
      "include",
      "forward",
      "redirect",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "include"
    ]
  },
  {
    "question": "Identify the methods present in life cycle of a servlet.(A) service()(B) destroy()(C) authorize()(D) init()",
    "options": [
      "B, C, D",
      "C, D",
      "A, B, D",
      "A, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, B, D"
    ]
  },
  {
    "question": "Identify the methods present in life cycle of a servlet.(A) service()(B) destroy()(C) authorize()(D) init()",
    "options": [
      "B, C, D",
      "C, D",
      "A, B, D",
      "A, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, B, D"
    ]
  },
  {
    "question": "Match the methods of the ServletRequest interface with their corresponding description.Description: (A) Returns the actual length of the request sent by the client. (B) Returns the binary data requested by the client and stores it in a ServletInputStream object.(C) Gives additional information about the servlet. (D) Used to get the additional information that is sent along with the request information.(E) Returns the name of the server to which the request was sent. Method:(1) getInputStream()(2) getAttribute()(3) getContentLength()(4) getServerName()(5) getParameter()",
    "options": [
      "A-2, B-3, C-4, D-5, E-1",
      "A-4, B-1, C-2, D-3, E-5",
      "A-3, B-1, C-2, D-5, E-4",
      "A-5, B-4, C-2, D-1, E-3"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-3, B-1, C-2, D-5, E-4"
    ]
  },
  {
    "question": "Match the methods of the ServletRequest interface with their corresponding description.Description: (A) Returns the actual length of the request sent by the client. (B) Returns the binary data requested by the client and stores it in a ServletInputStream object.(C) Gives additional information about the servlet. (D) Used to get the additional information that is sent along with the request information.(E) Returns the name of the server to which the request was sent. Method:(1) getInputStream()(2) getAttribute()(3) getContentLength()(4) getServerName()(5) getParameter()",
    "options": [
      "A-2, B-3, C-4, D-5, E-1",
      "A-4, B-1, C-2, D-3, E-5",
      "A-3, B-1, C-2, D-5, E-4",
      "A-5, B-4, C-2, D-1, E-3"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-3, B-1, C-2, D-5, E-4"
    ]
  },
  {
    "question": "How does output of Servlet Object present into browser?",
    "options": [
      "The servlet\u2019s output should be put into Response Object",
      "The servlet\u2019s output is automatically sent to user\u2019s browser",
      "The servlet\u2019s output should be put into Scope then Request Dispatcher will be forwarded to browser",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The servlet\u2019s output should be put into Response Object"
    ]
  },
  {
    "question": "How does output of Servlet Object present into browser?",
    "options": [
      "The servlet\u2019s output should be put into Response Object",
      "The servlet\u2019s output is automatically sent to user\u2019s browser",
      "The servlet\u2019s output should be put into Scope then Request Dispatcher will be forwarded to browser",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The servlet\u2019s output should be put into Response Object"
    ]
  },
  {
    "question": "Which of following feature does indicate \u201cServlet should NOT use as dynamic page\u201d?",
    "options": [
      "Low lever HTML format",
      "Getting auto refresh on receiving a request time",
      "Initialize only once at deploy time",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Low lever HTML format"
    ]
  },
  {
    "question": "Which of following feature does indicate \u201cServlet should NOT use as dynamic page\u201d?",
    "options": [
      "Low lever HTML format",
      "Getting auto refresh on receiving a request time",
      "Initialize only once at deploy time",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Low lever HTML format"
    ]
  },
  {
    "question": "Study the statements:\n1)Every web application within a web container has a unique context path.2)The context path and any directories you choose to create within it contain resources that are accessible through HTTP.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are  not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true."
    ]
  },
  {
    "question": "Study the statements:\n1)Every web application within a web container has a unique context path.2)The context path and any directories you choose to create within it contain resources that are accessible through HTTP.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are  not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true."
    ]
  },
  {
    "question": "Study the statements about web.xml file:\n1)The deployment descriptor file is called web.xml, and it must be located in the WEB-INF directory.2)web.xml is in XML (extended markup language) format. Its root element is <web>.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only statement 1 is true."
    ]
  },
  {
    "question": "Study the statements about web.xml file:\n1)The deployment descriptor file is called web.xml, and it must be located in the WEB-INF directory.2)web.xml is in XML (extended markup language) format. Its root element is <web>.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only statement 1 is true."
    ]
  },
  {
    "question": "Which of the following statements can be used to retrieve an existing HttpSession object?",
    "options": [
      "HttpSession session = request.getSession();",
      "HttpSession session = request.getSession(true);",
      "HttpSession session = request.getSession(false);",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which of the following statements can be used to retrieve an existing HttpSession object?",
    "options": [
      "HttpSession session = request.getSession();",
      "HttpSession session = request.getSession(true);",
      "HttpSession session = request.getSession(false);",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which of the following interfaces needs to be\u00a0declared in the web application deployment descriptor?",
    "options": [
      "HttpSessionAttributeListener",
      "HttpSessionBindingListener",
      "HttpSessionTimedOutListener",
      "HttpSessionPassivatedListener"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpSessionAttributeListener"
    ]
  },
  {
    "question": "Which of the following interfaces needs to be\u00a0declared in the web application deployment descriptor?",
    "options": [
      "HttpSessionAttributeListener",
      "HttpSessionBindingListener",
      "HttpSessionTimedOutListener",
      "HttpSessionPassivatedListener"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpSessionAttributeListener"
    ]
  },
  {
    "question": "Upon a user's first visit to the web site, which operation is always performed when the getSession method is called with no arguments in a servlet?",
    "options": [
      "All URLs returned by the server are rewritten.",
      "The user name and password of the user are checked.",
      "An HttpSession object is created if necessary.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "An HttpSession object is created if necessary."
    ]
  },
  {
    "question": "Upon a user's first visit to the web site, which operation is always performed when the getSession method is called with no arguments in a servlet?",
    "options": [
      "All URLs returned by the server are rewritten.",
      "The user name and password of the user are checked.",
      "An HttpSession object is created if necessary.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "An HttpSession object is created if necessary."
    ]
  },
  {
    "question": "Which are the correct options about page object from the following statements?",
    "options": [
      "The page object is an instance of the java.lang.Object.",
      "The page object is an instance of the javax.servlet.jsp class.",
      "A page object is an instance of the servlet processing the current request in a JSP page.",
      "The page objects use methods defined in this class to access implicit objects in a Web page.",
      "The page object has page scope."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The page object is an instance of the java.lang.Object."
    ]
  },
  {
    "question": "Which are the correct options about page object from the following statements?",
    "options": [
      "The page object is an instance of the java.lang.Object.",
      "The page object is an instance of the javax.servlet.jsp class.",
      "A page object is an instance of the servlet processing the current request in a JSP page.",
      "The page objects use methods defined in this class to access implicit objects in a Web page.",
      "The page object has page scope."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The page object is an instance of the java.lang.Object."
    ]
  },
  {
    "question": "Which of the following error code is associated with the message \u2018Internal Server Error\u2019?",
    "options": [
      "500",
      "302",
      "404",
      "301"
    ],
    "description": "Choose 1 option",
    "answer": [
      "500"
    ]
  },
  {
    "question": "Which are the correct options about page object from the following statements?",
    "options": [
      "The page object is an instance of the java.lang.Object.",
      "The page object is an instance of the javax.servlet.jsp class.",
      "A page object is an instance of the servlet processing the current request in a JSP page.",
      "The page objects use methods defined in this class to access implicit objects in a Web page.",
      "The page object has page scope."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The page object is an instance of the java.lang.Object."
    ]
  },
  {
    "question": "Which are the correct options about page object from the following statements?",
    "options": [
      "The page object is an instance of the java.lang.Object.",
      "The page object is an instance of the javax.servlet.jsp class.",
      "A page object is an instance of the servlet processing the current request in a JSP page.",
      "The page objects use methods defined in this class to access implicit objects in a Web page.",
      "The page object has page scope."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The page object is an instance of the java.lang.Object."
    ]
  },
  {
    "question": "Which of the following error code is associated with the message \u2018Internal Server Error\u2019?",
    "options": [
      "500",
      "302",
      "404",
      "301"
    ],
    "description": "Choose 1 option",
    "answer": [
      "500"
    ]
  },
  {
    "question": "Which implicit object defined in JSP EL can be used without creating an instance of the object?",
    "options": [
      "servletContext",
      "session",
      "pageContext",
      "request"
    ],
    "description": "Choose 1 option",
    "answer": [
      "pageContext"
    ]
  },
  {
    "question": "Which implicit object defined in JSP EL can be used without creating an instance of the object?",
    "options": [
      "servletContext",
      "session",
      "pageContext",
      "request"
    ],
    "description": "Choose 1 option",
    "answer": [
      "pageContext"
    ]
  },
  {
    "question": "Which implicit object defined in JSP EL can be used without creating an instance of the object?",
    "options": [
      "servletContext",
      "session",
      "pageContext",
      "request"
    ],
    "description": "Choose 1 option",
    "answer": [
      "pageContext"
    ]
  },
  {
    "question": "Which implicit object defined in JSP EL can be used without creating an instance of the object?",
    "options": [
      "servletContext",
      "session",
      "pageContext",
      "request"
    ],
    "description": "Choose 1 option",
    "answer": [
      "pageContext"
    ]
  },
  {
    "question": "Which is the correct syntax of directive from the following options?",
    "options": [
      "<%@ directivename attribute=\"value\" attribute=\"value\" %>",
      "<!@ directivename attribute=\"value\" attribute=\"value\" !>",
      "<%@ directivename attribute=\"value\" attribute=\"value\" !>",
      "<!@ directivename attribute=\"value\" attribute=\"value\" %>",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ directivename attribute=\"value\" attribute=\"value\" %>"
    ]
  },
  {
    "question": "Which is the correct syntax of directive from the following options?",
    "options": [
      "<%@ directivename attribute=\"value\" attribute=\"value\" %>",
      "<!@ directivename attribute=\"value\" attribute=\"value\" !>",
      "<%@ directivename attribute=\"value\" attribute=\"value\" !>",
      "<!@ directivename attribute=\"value\" attribute=\"value\" %>",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ directivename attribute=\"value\" attribute=\"value\" %>"
    ]
  },
  {
    "question": "What\u00a0is incorrect statement about Implicit Objects in jsp pages?",
    "options": [
      "Does not initialize or declare",
      "Are loaded by the Web Container",
      "Automatically and maintains in a JSP page",
      "Not available for scriptlets or expressions"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Not available for scriptlets or expressions"
    ]
  },
  {
    "question": "What\u00a0is incorrect statement about Implicit Objects in jsp pages?",
    "options": [
      "Does not initialize or declare",
      "Are loaded by the Web Container",
      "Automatically and maintains in a JSP page",
      "Not available for scriptlets or expressions"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Not available for scriptlets or expressions"
    ]
  },
  {
    "question": "Given the hyperlink:http://localhost:8084/MyProject/index.jsp?param1=&param2=and the body of index.jsp:<body><%= request.getParameter(\"param1\") %>AND<%= request.getParameter(\"param2\") %></body>What is showed on the browser window after a user accessed the hyperlink?",
    "options": [
      "nullANDnull",
      "AND",
      "nullAND",
      "ANDnull"
    ],
    "description": "Choose 1 option",
    "answer": [
      "AND"
    ]
  },
  {
    "question": "Given the hyperlink:http://localhost:8084/MyProject/index.jsp?param1=&param2=and the body of index.jsp:<body><%= request.getParameter(\"param1\") %>AND<%= request.getParameter(\"param2\") %></body>What is showed on the browser window after a user accessed the hyperlink?",
    "options": [
      "nullANDnull",
      "AND",
      "nullAND",
      "ANDnull"
    ],
    "description": "Choose 1 option",
    "answer": [
      "AND"
    ]
  },
  {
    "question": "Which one is not a type of JSP tags?",
    "options": [
      "Directives",
      "Declarations",
      "Scripting elements",
      "Comments"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Declarations"
    ]
  },
  {
    "question": "Which one is not a type of JSP tags?",
    "options": [
      "Directives",
      "Declarations",
      "Scripting elements",
      "Comments"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Declarations"
    ]
  },
  {
    "question": "Which of the following statements relating to URL rewriting is incorrect?",
    "options": [
      "URL rewriting technique adds some extrea data at the end of the URL to identify the session",
      "Generally, the extra information appended in the URL rewriting is the unique session ID and tracking can be done by retrieving this session ID",
      "None of the others",
      "Only information after ? is sent to the next page and information before ? is detached"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only information after ? is sent to the next page and information before ? is detached"
    ]
  },
  {
    "question": "Which of the following statements relating to URL rewriting is incorrect?",
    "options": [
      "URL rewriting technique adds some extrea data at the end of the URL to identify the session",
      "Generally, the extra information appended in the URL rewriting is the unique session ID and tracking can be done by retrieving this session ID",
      "None of the others",
      "Only information after ? is sent to the next page and information before ? is detached"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only information after ? is sent to the next page and information before ? is detached"
    ]
  },
  {
    "question": "Why should we use RequestDispatcher to forward a request to another resource, instead of using a sendRedirect?",
    "options": [
      "The RequestDispatcher does not require a round trip to the client, and thus is more efficient and allows the server to maintain the request state.",
      "Redirects are no longer supported in the current servlet API.",
      "Redirects are not a cross-platform portable mechanism.",
      "The RequestDispatcher does not use the reflection API."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The RequestDispatcher does not require a round trip to the client, and thus is more efficient and allows the server to maintain the request state."
    ]
  },
  {
    "question": "Why should we use RequestDispatcher to forward a request to another resource, instead of using a sendRedirect?",
    "options": [
      "The RequestDispatcher does not require a round trip to the client, and thus is more efficient and allows the server to maintain the request state.",
      "Redirects are no longer supported in the current servlet API.",
      "Redirects are not a cross-platform portable mechanism.",
      "The RequestDispatcher does not use the reflection API."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The RequestDispatcher does not require a round trip to the client, and thus is more efficient and allows the server to maintain the request state."
    ]
  },
  {
    "question": "What is the difference between doing an include and a forward with a RequestDispatcher?",
    "options": [
      "The two methods provide the same functionality, but with different levels of persistence.",
      "The forward method is deprecated as of JSP 1.1 and the include method should be used in order to substitute portions of a dynamic display at runtime.",
      "The include method transfers control to a dynamic resource, while the forward method allows for dynamic substitution of another JPS pages.",
      "The forward method transfers control to the designated resource, while the include method invokes the designated resource, substitutes its output dynamically in the display, and returns control to the calling page."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The forward method transfers control to the designated resource, while the include method invokes the designated resource, substitutes its output dynamically in the display, and returns control to the calling page."
    ]
  },
  {
    "question": "What is the difference between doing an include and a forward with a RequestDispatcher?",
    "options": [
      "The two methods provide the same functionality, but with different levels of persistence.",
      "The forward method is deprecated as of JSP 1.1 and the include method should be used in order to substitute portions of a dynamic display at runtime.",
      "The include method transfers control to a dynamic resource, while the forward method allows for dynamic substitution of another JPS pages.",
      "The forward method transfers control to the designated resource, while the include method invokes the designated resource, substitutes its output dynamically in the display, and returns control to the calling page."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The forward method transfers control to the designated resource, while the include method invokes the designated resource, substitutes its output dynamically in the display, and returns control to the calling page."
    ]
  },
  {
    "question": "_______ are small pieces of information that are deposited on the client by the server.",
    "options": [
      "Cookies",
      "Sessions",
      "Directives",
      "Scriptlets"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Cookies"
    ]
  },
  {
    "question": "_______ are small pieces of information that are deposited on the client by the server.",
    "options": [
      "Cookies",
      "Sessions",
      "Directives",
      "Scriptlets"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Cookies"
    ]
  },
  {
    "question": "The ________ method returns an array containing all the Cookie objects the client sent along with the request",
    "options": [
      "getCookies()",
      "getHeader()",
      "getHeaders()",
      "getCookie()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getCookies()"
    ]
  },
  {
    "question": "The ________ method returns an array containing all the Cookie objects the client sent along with the request",
    "options": [
      "getCookies()",
      "getHeader()",
      "getHeaders()",
      "getCookie()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getCookies()"
    ]
  },
  {
    "question": "Which of these statements is true about the Filter implementation?",
    "options": [
      "The Filter Interface must be implemented to create a filter class",
      "The init() method is called by the servlet container many times to initialise the filter",
      "The doFilter(request, response) method examines the request or response headers and also customises them as per requirement",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The Filter Interface must be implemented to create a filter class"
    ]
  },
  {
    "question": "Which of these statements is true about the Filter implementation?",
    "options": [
      "The Filter Interface must be implemented to create a filter class",
      "The init() method is called by the servlet container many times to initialise the filter",
      "The doFilter(request, response) method examines the request or response headers and also customises them as per requirement",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The Filter Interface must be implemented to create a filter class"
    ]
  },
  {
    "question": "Which statement is true about web container session management?",
    "options": [
      "Access to session-scoped attributes is guaranteed to be thread-safe by the web container",
      "To activate URL rewriting, the developer must used the HttpServletResponse.setURLRewriting method",
      "If the web application uses HTTPS, then the web container may used the data on the HTTPS request stream to identify the client",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "If the web application uses HTTPS, then the web container may used the data on the HTTPS request stream to identify the client"
    ]
  },
  {
    "question": "Which statement is true about web container session management?",
    "options": [
      "Access to session-scoped attributes is guaranteed to be thread-safe by the web container",
      "To activate URL rewriting, the developer must used the HttpServletResponse.setURLRewriting method",
      "If the web application uses HTTPS, then the web container may used the data on the HTTPS request stream to identify the client",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "If the web application uses HTTPS, then the web container may used the data on the HTTPS request stream to identify the client"
    ]
  },
  {
    "question": "Which classes or interfaces provide a getSession method?",
    "options": [
      "javax.servlet.http.HttpServletRequest",
      "javax.servlet.http.HttpSessionContext",
      "javax.servlet.http.HttpServletResponse",
      "javax.servlet.http.HttpSessionAttributeEvent"
    ],
    "description": "Choose 1 option",
    "answer": [
      "javax.servlet.http.HttpServletRequest"
    ]
  },
  {
    "question": "Which classes or interfaces provide a getSession method?",
    "options": [
      "javax.servlet.http.HttpServletRequest",
      "javax.servlet.http.HttpSessionContext",
      "javax.servlet.http.HttpServletResponse",
      "javax.servlet.http.HttpSessionAttributeEvent"
    ],
    "description": "Choose 1 option",
    "answer": [
      "javax.servlet.http.HttpServletRequest"
    ]
  },
  {
    "question": "Given that session is a valid HttpSession object: \nint max = session.getAttribute(\"MyReallyLongName\"); Which is true?",
    "options": [
      "Primitives CANNOT be stored in the HttpSession.",
      "The getAttribute method takes two arguments.",
      "The HttpSession attribute name must NOT exceed eight characters.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Primitives CANNOT be stored in the HttpSession."
    ]
  },
  {
    "question": "Given that session is a valid HttpSession object: \nint max = session.getAttribute(\"MyReallyLongName\"); Which is true?",
    "options": [
      "Primitives CANNOT be stored in the HttpSession.",
      "The getAttribute method takes two arguments.",
      "The HttpSession attribute name must NOT exceed eight characters.",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Primitives CANNOT be stored in the HttpSession."
    ]
  },
  {
    "question": "Which statement is true about request.getSession(true) method?",
    "options": [
      "Get currently session.",
      "If session is not existed, new session is forced creating",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which statement is true about request.getSession(true) method?",
    "options": [
      "Get currently session.",
      "If session is not existed, new session is forced creating",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Name of the class that includes the getSession method that is used to get the HttpSession object.",
    "options": [
      "HttpServletRequest",
      "HttpServletResponse",
      "SessionContext",
      "SessionConfig"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "Name of the class that includes the getSession method that is used to get the HttpSession object.",
    "options": [
      "HttpServletRequest",
      "HttpServletResponse",
      "SessionContext",
      "SessionConfig"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "The session time-out value is controlled in which way(s)?",
    "options": [
      "Application Server Global Default.",
      "Web Application Default.",
      "Individual Session Setting.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "The session time-out value is controlled in which way(s)?",
    "options": [
      "Application Server Global Default.",
      "Web Application Default.",
      "Individual Session Setting.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Study the following statements:\n1) A session object\u00a0can be\u00a0accessed by\u00a0all web applications\u00a0in the same server.\n2) Session object exists longer than the application object.\n3) The request object lives longer than the session object.\nThe statement (1) is ...., (2) is .... and (3) is .......",
    "options": [
      "none of the others",
      "false, false, true",
      "true, false, false",
      "true, false, true",
      "true, true, true"
    ],
    "description": "Choose 1 option",
    "answer": [
      "none of the others"
    ]
  },
  {
    "question": "Study the following statements:\n1) A session object\u00a0can be\u00a0accessed by\u00a0all web applications\u00a0in the same server.\n2) Session object exists longer than the application object.\n3) The request object lives longer than the session object.\nThe statement (1) is ...., (2) is .... and (3) is .......",
    "options": [
      "none of the others",
      "false, false, true",
      "true, false, false",
      "true, false, true",
      "true, true, true"
    ],
    "description": "Choose 1 option",
    "answer": [
      "none of the others"
    ]
  },
  {
    "question": "The value of the default session timeout is set in the web deployment descriptor using the unit of ......",
    "options": [
      "minute",
      "second",
      "hour",
      "none of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "minute"
    ]
  },
  {
    "question": "The value of the default session timeout is set in the web deployment descriptor using the unit of ......",
    "options": [
      "minute",
      "second",
      "hour",
      "none of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "minute"
    ]
  },
  {
    "question": "Where does the HttpSession mechanism store the session object?",
    "options": [
      "The query string",
      "The form parameter",
      "The file",
      "The server"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The server"
    ]
  },
  {
    "question": "Where does the HttpSession mechanism store the session object?",
    "options": [
      "The query string",
      "The form parameter",
      "The file",
      "The server"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The server"
    ]
  },
  {
    "question": "Which of the following statement is true about the Session Listeners?",
    "options": [
      "HttpSessionBindingListener must not register in web deployment descriptor",
      "HttpSessionBindingListener must register in web deployment descriptor",
      "ServletContextListener must not register in web deployment descriptor",
      "ServletContextAttributeListener must not register in web deployment descriptor"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpSessionBindingListener must not register in web deployment descriptor"
    ]
  },
  {
    "question": "Which of the following statement is true about the Session Listeners?",
    "options": [
      "HttpSessionBindingListener must not register in web deployment descriptor",
      "HttpSessionBindingListener must register in web deployment descriptor",
      "ServletContextListener must not register in web deployment descriptor",
      "ServletContextAttributeListener must not register in web deployment descriptor"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpSessionBindingListener must not register in web deployment descriptor"
    ]
  },
  {
    "question": "Which of the following ways will not store data for tracking visitor in client side?",
    "options": [
      "using the Session object.",
      "using Cookies.",
      "using hidden fields.",
      "using rewriting URL technique.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "using the Session object."
    ]
  },
  {
    "question": "Which of the following ways will not store data for tracking visitor in client side?",
    "options": [
      "using the Session object.",
      "using Cookies.",
      "using hidden fields.",
      "using rewriting URL technique.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "using the Session object."
    ]
  },
  {
    "question": "Which of the following ways to store data for tracking client can be intercepted by client?",
    "options": [
      "Cookies.",
      "The Session object.",
      "URL rewriting.",
      "Hidden field."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Cookies."
    ]
  },
  {
    "question": "Which of the following ways to store data for tracking client can be intercepted by client?",
    "options": [
      "Cookies.",
      "The Session object.",
      "URL rewriting.",
      "Hidden field."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Cookies."
    ]
  },
  {
    "question": "Which of the following listeners will respond to events that a request comes to server or gets out of its scope?",
    "options": [
      "ServletRequestListener",
      "ServletResponseListener",
      "ServletContextListener",
      "ServletRequestAttributeListener"
    ],
    "description": "Choose 1 option",
    "answer": [
      "ServletRequestListener"
    ]
  },
  {
    "question": "Which of the following listeners will respond to events that a request comes to server or gets out of its scope?",
    "options": [
      "ServletRequestListener",
      "ServletResponseListener",
      "ServletContextListener",
      "ServletRequestAttributeListener"
    ],
    "description": "Choose 1 option",
    "answer": [
      "ServletRequestListener"
    ]
  },
  {
    "question": "Suppose you want to retrieve an HttpSession object in a servlet. However, in case of the session might not be created, you also do not want to create a new one because that a session will be created later by another servlet. Select a correct method that can complete that task:",
    "options": [
      "HttpServletRequest.getSession(false);",
      "HttpServletRequest.getSession(true);",
      "HttpServletRequest.getSession();",
      "HttpServletRequest.getNotCreateSession();"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest.getSession(false);"
    ]
  },
  {
    "question": "Suppose you want to retrieve an HttpSession object in a servlet. However, in case of the session might not be created, you also do not want to create a new one because that a session will be created later by another servlet. Select a correct method that can complete that task:",
    "options": [
      "HttpServletRequest.getSession(false);",
      "HttpServletRequest.getSession(true);",
      "HttpServletRequest.getSession();",
      "HttpServletRequest.getNotCreateSession();"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest.getSession(false);"
    ]
  },
  {
    "question": "How can you explicitly delete a session object?",
    "options": [
      "By calling invalidate() on session object.",
      "You cannot. It can only be expunged automatically after session timeout expires.",
      "By calling delete() on session object.",
      "By calling finalize() on session object."
    ],
    "description": "Choose 1 option",
    "answer": [
      "By calling invalidate() on session object."
    ]
  },
  {
    "question": "How can you explicitly delete a session object?",
    "options": [
      "By calling invalidate() on session object.",
      "You cannot. It can only be expunged automatically after session timeout expires.",
      "By calling delete() on session object.",
      "By calling finalize() on session object."
    ],
    "description": "Choose 1 option",
    "answer": [
      "By calling invalidate() on session object."
    ]
  },
  {
    "question": "If we specify a negative value in the <session-timeout> element in the web.xml file, that means:",
    "options": [
      "Sessions should never expire.",
      "Sessions expire immediately",
      "Sessions expire after 1 minutes",
      "Negative value is an invalid value."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Sessions should never expire."
    ]
  },
  {
    "question": "If we specify a negative value in the <session-timeout> element in the web.xml file, that means:",
    "options": [
      "Sessions should never expire.",
      "Sessions expire immediately",
      "Sessions expire after 1 minutes",
      "Negative value is an invalid value."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Sessions should never expire."
    ]
  },
  {
    "question": "Which of the following statements describing the stateless nature of HTTP protocol and the need of tracking client identity and state are true?(A) When the configuration setting, transactions, and information are not trackedby the protocol, then it is called stateless protocol.(B) The HTTP protocol is based on a client-server model.(C) The HTTP protocol sends an acknowledgement that the information sent by theserver has reached the client.(D) Session tracking allows the server to keep a track of successive requests madeby the same client.(E) In HTTP protocol, the loss of data can be easily detected.",
    "options": [
      "B, C, D",
      "A, B, D",
      "A, B, C",
      "A, C, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, B, D"
    ]
  },
  {
    "question": "Which of the following statements describing the stateless nature of HTTP protocol and the need of tracking client identity and state are true?(A) When the configuration setting, transactions, and information are not trackedby the protocol, then it is called stateless protocol.(B) The HTTP protocol is based on a client-server model.(C) The HTTP protocol sends an acknowledgement that the information sent by theserver has reached the client.(D) Session tracking allows the server to keep a track of successive requests madeby the same client.(E) In HTTP protocol, the loss of data can be easily detected.",
    "options": [
      "B, C, D",
      "A, B, D",
      "A, B, C",
      "A, C, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, B, D"
    ]
  },
  {
    "question": "Which among the following statement relating to URL rewriting is incorrect?",
    "options": [
      "URL is the address of a resource located on the Web.",
      "The URL rewriting technique adds some extra data at the end of the URL to identify the session.",
      "Generally, the extra information appended in the URL rewriting is the unique session ID and tracking can be done by retrieving this session ID.",
      "Only information after ? is sent to the next page and information before ? is detached."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only information after ? is sent to the next page and information before ? is detached."
    ]
  },
  {
    "question": "Which among the following statement relating to URL rewriting is incorrect?",
    "options": [
      "URL is the address of a resource located on the Web.",
      "The URL rewriting technique adds some extra data at the end of the URL to identify the session.",
      "Generally, the extra information appended in the URL rewriting is the unique session ID and tracking can be done by retrieving this session ID.",
      "Only information after ? is sent to the next page and information before ? is detached."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only information after ? is sent to the next page and information before ? is detached."
    ]
  },
  {
    "question": "Which mission of JSP Engine does?",
    "options": [
      "Parse JSP File, Generate Servlet Code, Compile Servlet, and Instantize Servlet",
      "Generate Servlet Code, Compile Servlet, Generate Mapping into Web Deployment Descriptor (web.xml), and Instantize Servlet",
      "Compile JSP into Java Class, Generate Mapping into Web Deployment Descriptor (web.xml), Generate Request and Response Object, Forward to Resource",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Parse JSP File, Generate Servlet Code, Compile Servlet, and Instantize Servlet"
    ]
  },
  {
    "question": "Which mission of JSP Engine does?",
    "options": [
      "Parse JSP File, Generate Servlet Code, Compile Servlet, and Instantize Servlet",
      "Generate Servlet Code, Compile Servlet, Generate Mapping into Web Deployment Descriptor (web.xml), and Instantize Servlet",
      "Compile JSP into Java Class, Generate Mapping into Web Deployment Descriptor (web.xml), Generate Request and Response Object, Forward to Resource",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Parse JSP File, Generate Servlet Code, Compile Servlet, and Instantize Servlet"
    ]
  },
  {
    "question": "Which method does container generate code with scriptlets and expression?",
    "options": [
      "_jspService",
      "service",
      "_jspForward",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "_jspService"
    ]
  },
  {
    "question": "Which method does container generate code with scriptlets and expression?",
    "options": [
      "_jspService",
      "service",
      "_jspForward",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "_jspService"
    ]
  },
  {
    "question": "The session time-out value is controlled in which way?",
    "options": [
      "Application Server Global Default.",
      "Web Application Default.",
      "Individual Session Setting.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "The session time-out value is controlled in which way?",
    "options": [
      "Application Server Global Default.",
      "Web Application Default.",
      "Individual Session Setting.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Study the statements: \n1)URL rewriting may be used when cookies are disabled in Browsers. 2)In URL encoding the session id is included as part of the URL.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true."
    ]
  },
  {
    "question": "Study the statements: \n1)URL rewriting may be used when cookies are disabled in Browsers. 2)In URL encoding the session id is included as part of the URL.",
    "options": [
      "Only statement 1 is true.",
      "Only statement 2 is true.",
      "Both 1 and 2 are true.",
      "Both 1 and 2 are not true."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Both 1 and 2 are true."
    ]
  },
  {
    "question": "Name the class that includes the getSession() method that is used to get the HttpSession object.",
    "options": [
      "HttpServletRequest",
      "HttpServletResponse",
      "SessionContext",
      "SessionConfig"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "Name the class that includes the getSession() method that is used to get the HttpSession object.",
    "options": [
      "HttpServletRequest",
      "HttpServletResponse",
      "SessionContext",
      "SessionConfig"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest"
    ]
  },
  {
    "question": "Which method among the following options belongs to\u00a0 HttpSessionBindingEvent?",
    "options": [
      "public HttpSession getSession()",
      "public void valueBound(HttpSessionBindingEvent event)",
      "public boolean isNew()",
      "public void removeValue(java.lang.String name)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void valueBound(HttpSessionBindingEvent event)"
    ]
  },
  {
    "question": "Which method among the following options belongs to\u00a0 HttpSessionBindingEvent?",
    "options": [
      "public HttpSession getSession()",
      "public void valueBound(HttpSessionBindingEvent event)",
      "public boolean isNew()",
      "public void removeValue(java.lang.String name)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void valueBound(HttpSessionBindingEvent event)"
    ]
  },
  {
    "question": "Which among the following methods returns a string containing the cookie\u2019s present value?",
    "options": [
      "getMaxAge()",
      "getValue()",
      "setMaxAge()",
      "setValue()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getValue()"
    ]
  },
  {
    "question": "Which method among the following options belongs to\u00a0 HttpSessionBindingEvent?",
    "options": [
      "public HttpSession getSession()",
      "public void valueBound(HttpSessionBindingEvent event)",
      "public boolean isNew()",
      "public void removeValue(java.lang.String name)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void valueBound(HttpSessionBindingEvent event)"
    ]
  },
  {
    "question": "Which method among the following options belongs to\u00a0 HttpSessionBindingEvent?",
    "options": [
      "public HttpSession getSession()",
      "public void valueBound(HttpSessionBindingEvent event)",
      "public boolean isNew()",
      "public void removeValue(java.lang.String name)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void valueBound(HttpSessionBindingEvent event)"
    ]
  },
  {
    "question": "Which among the following methods returns a string containing the cookie\u2019s present value?",
    "options": [
      "getMaxAge()",
      "getValue()",
      "setMaxAge()",
      "setValue()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "getValue()"
    ]
  },
  {
    "question": "Which method among the following options belongs to HttpSessionActivationListener interface?",
    "options": [
      "public java.lang.Object getValue()",
      "public void sessionDidActivate(HttpSessionEvent se)",
      "public boolean isNew()",
      "public void attributeRemoved(HttpSessionBindingE vent se)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void sessionDidActivate(HttpSessionEvent se)"
    ]
  },
  {
    "question": "Which method among the following options belongs to HttpSessionActivationListener interface?",
    "options": [
      "public java.lang.Object getValue()",
      "public void sessionDidActivate(HttpSessionEvent se)",
      "public boolean isNew()",
      "public void attributeRemoved(HttpSessionBindingE vent se)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void sessionDidActivate(HttpSessionEvent se)"
    ]
  },
  {
    "question": "Which method among the following options belongs to HttpSessionActivationListener interface?",
    "options": [
      "public java.lang.Object getValue()",
      "public void sessionDidActivate(HttpSessionEvent se)",
      "public boolean isNew()",
      "public void attributeRemoved(HttpSessionBindingE vent se)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void sessionDidActivate(HttpSessionEvent se)"
    ]
  },
  {
    "question": "Which method among the following options belongs to HttpSessionActivationListener interface?",
    "options": [
      "public java.lang.Object getValue()",
      "public void sessionDidActivate(HttpSessionEvent se)",
      "public boolean isNew()",
      "public void attributeRemoved(HttpSessionBindingE vent se)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void sessionDidActivate(HttpSessionEvent se)"
    ]
  },
  {
    "question": "Which among the following methods is correct for getting cookies from client?",
    "options": [
      "HttpServletResponse.getCookies()",
      "HttpServletRequest.getCookies()",
      "HttpServletRequest.getCookie(javax. servlet.http.Cookie)",
      "HttpServletResponse.getCookie(javax. servlet.http. addCookie)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest.getCookies()"
    ]
  },
  {
    "question": "Which among the following methods is correct for getting cookies from client?",
    "options": [
      "HttpServletResponse.getCookies()",
      "HttpServletRequest.getCookies()",
      "HttpServletRequest.getCookie(javax. servlet.http.Cookie)",
      "HttpServletResponse.getCookie(javax. servlet.http. addCookie)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "HttpServletRequest.getCookies()"
    ]
  },
  {
    "question": "Which method among the following options belongs to\u00a0 HttpSessionAttributeListener?",
    "options": [
      "public void setAttribute(java.lang.String name, java.lang.Object value)",
      "public void setMaxInactiveInterval(int interval)",
      "public void attributeAdded(HttpSessionBindingEvent se)",
      "public void removeValue(java.lang.String name)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void attributeAdded(HttpSessionBindingEvent se)"
    ]
  },
  {
    "question": "Which method among the following options belongs to\u00a0 HttpSessionAttributeListener?",
    "options": [
      "public void setAttribute(java.lang.String name, java.lang.Object value)",
      "public void setMaxInactiveInterval(int interval)",
      "public void attributeAdded(HttpSessionBindingEvent se)",
      "public void removeValue(java.lang.String name)"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void attributeAdded(HttpSessionBindingEvent se)"
    ]
  },
  {
    "question": "What\u00a0is Cookies?",
    "options": [
      "Cookies are existed following the setMaxAge and deleted automatically by OS",
      "Cookies are existed following the setMinAge and deleted automatically by OS",
      "Cookies are existed following the setMaxAge and deleted automatically by Client",
      "Cookies are existed following the setMaxAge and deleted automatically by Server"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Cookies are existed following the setMaxAge and deleted automatically by OS"
    ]
  },
  {
    "question": "What\u00a0is Cookies?",
    "options": [
      "Cookies are existed following the setMaxAge and deleted automatically by OS",
      "Cookies are existed following the setMinAge and deleted automatically by OS",
      "Cookies are existed following the setMaxAge and deleted automatically by Client",
      "Cookies are existed following the setMaxAge and deleted automatically by Server"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Cookies are existed following the setMaxAge and deleted automatically by OS"
    ]
  },
  {
    "question": "Giving the session timeout defined in web.xml is 0, which one is true:",
    "options": [
      "Error occurs, the project cannot run",
      "Session can be created but it will be timeout immediately",
      "Session can be created and never expired",
      "Session cannot be created"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session can be created and never expired"
    ]
  },
  {
    "question": "Giving the session timeout defined in web.xml is 0, which one is true:",
    "options": [
      "Error occurs, the project cannot run",
      "Session can be created but it will be timeout immediately",
      "Session can be created and never expired",
      "Session cannot be created"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Session can be created and never expired"
    ]
  },
  {
    "question": "HTTP is a ______________ layer protocol.(A) Filter was introduced as a Web component in Java servlet Specification version 2.3.(B) A filter optimizes the time it takes to send back a response from your Web server.(C) A logging and auditing filter allows users to log in to a Web application.(D) Filter optimizes the available bandwidth on the network thereby reducing the network traffic and in turn increasing the efficiency of all Web-based services.(E) An authentication filter tracks the activities of users of a Web application.",
    "options": [
      "B, C, D",
      "A, B, D",
      "A, B, C",
      "A, C, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, B, D"
    ]
  },
  {
    "question": "HTTP is a ______________ layer protocol.(A) Filter was introduced as a Web component in Java servlet Specification version 2.3.(B) A filter optimizes the time it takes to send back a response from your Web server.(C) A logging and auditing filter allows users to log in to a Web application.(D) Filter optimizes the available bandwidth on the network thereby reducing the network traffic and in turn increasing the efficiency of all Web-based services.(E) An authentication filter tracks the activities of users of a Web application.",
    "options": [
      "B, C, D",
      "A, B, D",
      "A, B, C",
      "A, C, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, B, D"
    ]
  },
  {
    "question": "Match the methods to their appropriate descriptions.Description: (A)This method returns the names of the initialization parameter as an enumeration of String objects.(B)This method returns the name of the filter defined in the web.xml or deployment descriptor file inside the Web application.(C)This method returns the Servlet Context object used by the caller to interact with its servlet container and filter.(D)This method returns the value of the named initialization parameter as a string.Method:(1) getInitParameter(name)(2) getInitParameterNames()(3) getFilterName()(4) getServletContext()",
    "options": [
      "A-3, B-4, C-1, D-2",
      "A-4, B-1, C-2, D-3",
      "A-2, B-3, C-4, D-1",
      "A-1, B-2, C-3, D-4"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-2, B-3, C-4, D-1"
    ]
  },
  {
    "question": "Match the methods to their appropriate descriptions.Description: (A)This method returns the names of the initialization parameter as an enumeration of String objects.(B)This method returns the name of the filter defined in the web.xml or deployment descriptor file inside the Web application.(C)This method returns the Servlet Context object used by the caller to interact with its servlet container and filter.(D)This method returns the value of the named initialization parameter as a string.Method:(1) getInitParameter(name)(2) getInitParameterNames()(3) getFilterName()(4) getServletContext()",
    "options": [
      "A-3, B-4, C-1, D-2",
      "A-4, B-1, C-2, D-3",
      "A-2, B-3, C-4, D-1",
      "A-1, B-2, C-3, D-4"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-2, B-3, C-4, D-1"
    ]
  },
  {
    "question": "Which definition is used to map dynamic database connection?",
    "options": [
      "Data-source",
      "Resource",
      "Java Database Connection",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Data-source"
    ]
  },
  {
    "question": "Which definition is used to map dynamic database connection?",
    "options": [
      "Data-source",
      "Resource",
      "Java Database Connection",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Data-source"
    ]
  },
  {
    "question": "What is data-source?",
    "options": [
      "Logical name binds to database server address with its authentication and connection drivers",
      "Logical name binds to context path that is in the context.xml file and container read it at deploy time",
      "Logical name is get from database\u2019s name",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Logical name binds to database server address with its authentication and connection drivers"
    ]
  },
  {
    "question": "What is data-source?",
    "options": [
      "Logical name binds to database server address with its authentication and connection drivers",
      "Logical name binds to context path that is in the context.xml file and container read it at deploy time",
      "Logical name is get from database\u2019s name",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Logical name binds to database server address with its authentication and connection drivers"
    ]
  },
  {
    "question": "JSP is a ___________ running on web server",
    "options": [
      "All of the others",
      "programming language",
      "server side script language",
      "client side script language"
    ],
    "description": "Choose 1 option",
    "answer": [
      "server side script language"
    ]
  },
  {
    "question": "JSP is a ___________ running on web server",
    "options": [
      "All of the others",
      "programming language",
      "server side script language",
      "client side script language"
    ],
    "description": "Choose 1 option",
    "answer": [
      "server side script language"
    ]
  },
  {
    "question": "Which of the following statement is an expression in scripting element?",
    "options": [
      "<%= x + y - 8 %>",
      "<%= for(int i=0; i<n; i++) {out.println(i)} %>",
      "<%= x + y; %>",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%= x + y - 8 %>"
    ]
  },
  {
    "question": "Which of the following statement is an expression in scripting element?",
    "options": [
      "<%= x + y - 8 %>",
      "<%= for(int i=0; i<n; i++) {out.println(i)} %>",
      "<%= x + y; %>",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%= x + y - 8 %>"
    ]
  },
  {
    "question": "Which object(s) can be used in JSP without declaring or initializing?",
    "options": [
      "Implicit objects",
      "Server object",
      "Request object",
      "Java objects"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Implicit objects"
    ]
  },
  {
    "question": "Which object(s) can be used in JSP without declaring or initializing?",
    "options": [
      "Implicit objects",
      "Server object",
      "Request object",
      "Java objects"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Implicit objects"
    ]
  },
  {
    "question": "Which of the following is not true about Java beans?",
    "options": [
      "Implements java.io.Serializable interface",
      "Extends java.io.Serializable class",
      "Provides no argument constructor",
      "Provides setter and getter methods for its properties"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Extends java.io.Serializable class"
    ]
  },
  {
    "question": "Which of the following is not true about Java beans?",
    "options": [
      "Implements java.io.Serializable interface",
      "Extends java.io.Serializable class",
      "Provides no argument constructor",
      "Provides setter and getter methods for its properties"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Extends java.io.Serializable class"
    ]
  },
  {
    "question": "Match the following JSP actions with their corresponding descriptions.Action:\u00a0(A) <jsp:plugin> (B) <jsp:fallback> (C) <jsp:text> (D) <jsp:param> Description:(1)Specifies an alternative message to the browser if the browser fails to start the plug-in. (2) Encloses content that has to be displayed in the output.(3) Allows you to pass one or more name and value pairs as parameters. (4) Replaced by either an <object> or <embed> element.",
    "options": [
      "A-4, B-1, C-2, D-3",
      "A-1, B-4, C-2, D-3",
      "A-4, B-1, C-3, D-2",
      "A-1, B-3, C-4, D-2"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-4, B-1, C-2, D-3"
    ]
  },
  {
    "question": "Which of the following is not true about Java beans?",
    "options": [
      "Implements java.io.Serializable interface",
      "Extends java.io.Serializable class",
      "Provides no argument constructor",
      "Provides setter and getter methods for its properties"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Extends java.io.Serializable class"
    ]
  },
  {
    "question": "Which of the following is not true about Java beans?",
    "options": [
      "Implements java.io.Serializable interface",
      "Extends java.io.Serializable class",
      "Provides no argument constructor",
      "Provides setter and getter methods for its properties"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Extends java.io.Serializable class"
    ]
  },
  {
    "question": "Match the following JSP actions with their corresponding descriptions.Action:\u00a0(A) <jsp:plugin> (B) <jsp:fallback> (C) <jsp:text> (D) <jsp:param> Description:(1)Specifies an alternative message to the browser if the browser fails to start the plug-in. (2) Encloses content that has to be displayed in the output.(3) Allows you to pass one or more name and value pairs as parameters. (4) Replaced by either an <object> or <embed> element.",
    "options": [
      "A-4, B-1, C-2, D-3",
      "A-1, B-4, C-2, D-3",
      "A-4, B-1, C-3, D-2",
      "A-1, B-3, C-4, D-2"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-4, B-1, C-2, D-3"
    ]
  },
  {
    "question": "Which of the options is incorrect about explain the various scope values for <jsp:useBean> tag.",
    "options": [
      "application",
      "response",
      "page",
      "session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response"
    ]
  },
  {
    "question": "Which of the options is incorrect about explain the various scope values for <jsp:useBean> tag.",
    "options": [
      "application",
      "response",
      "page",
      "session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response"
    ]
  },
  {
    "question": "Which of the options is incorrect about explain the various scope values for <jsp:useBean> tag.",
    "options": [
      "application",
      "response",
      "page",
      "session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response"
    ]
  },
  {
    "question": "Which of the options is incorrect about explain the various scope values for <jsp:useBean> tag.",
    "options": [
      "application",
      "response",
      "page",
      "session"
    ],
    "description": "Choose 1 option",
    "answer": [
      "response"
    ]
  },
  {
    "question": "Which of the following options is the correct declaration for the jsp:getProperty action?",
    "options": [
      "<jsp:getProperty id =\u201cBeanAlias\u201d property=\u201cPropertyName\u201d />",
      "<jsp:getProperty name=\u201cBeanAlias\u201d property=\u201cPropertyName\u201d param=\u201dFormPropertyName/>",
      "<jsp:getProperty name=\u201cBeanAlias\u201d property=\u201cPropertyName\u201d />",
      "<jsp:getProperty id=\u201cBeanAlias\u201d name=\u201cPropertyName\u201d />"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:getProperty name=\u201cBeanAlias\u201d property=\u201cPropertyName\u201d />"
    ]
  },
  {
    "question": "Which of the following options is the correct declaration for the jsp:getProperty action?",
    "options": [
      "<jsp:getProperty id =\u201cBeanAlias\u201d property=\u201cPropertyName\u201d />",
      "<jsp:getProperty name=\u201cBeanAlias\u201d property=\u201cPropertyName\u201d param=\u201dFormPropertyName/>",
      "<jsp:getProperty name=\u201cBeanAlias\u201d property=\u201cPropertyName\u201d />",
      "<jsp:getProperty id=\u201cBeanAlias\u201d name=\u201cPropertyName\u201d />"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:getProperty name=\u201cBeanAlias\u201d property=\u201cPropertyName\u201d />"
    ]
  },
  {
    "question": "Default scope of JavaBeans:",
    "options": [
      "A. request",
      "B. session",
      "C. application",
      "D. page"
    ],
    "description": "Choose 1 option",
    "answer": [
      "D. page"
    ]
  },
  {
    "question": "Default scope of JavaBeans:",
    "options": [
      "A. request",
      "B. session",
      "C. application",
      "D. page"
    ],
    "description": "Choose 1 option",
    "answer": [
      "D. page"
    ]
  },
  {
    "question": "Which of these EL expressions will result in the boolean value of true, assume that no variable named \"sampleVar\" was declared?",
    "options": [
      "${empty sampleVar}",
      "${'true'}",
      "${empty true}",
      "${empty false}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "${empty sampleVar}"
    ]
  },
  {
    "question": "Which of these EL expressions will result in the boolean value of true, assume that no variable named \"sampleVar\" was declared?",
    "options": [
      "${empty sampleVar}",
      "${'true'}",
      "${empty true}",
      "${empty false}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "${empty sampleVar}"
    ]
  },
  {
    "question": "Which EL implicit object works similarly to request.getParameter(\"param_Name\");",
    "options": [
      "request",
      "param",
      "header",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "param"
    ]
  },
  {
    "question": "Which EL implicit object works similarly to request.getParameter(\"param_Name\");",
    "options": [
      "request",
      "param",
      "header",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "param"
    ]
  },
  {
    "question": "Whenever the Web browser send a request to the Web server, the Web server passes the file to the _____ engine, then the HTML output from the servlet is send through the Internet and HTML results are displayed in the Web Browser",
    "options": [
      "Servlet",
      "JSP",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Servlet"
    ]
  },
  {
    "question": "Whenever the Web browser send a request to the Web server, the Web server passes the file to the _____ engine, then the HTML output from the servlet is send through the Internet and HTML results are displayed in the Web Browser",
    "options": [
      "Servlet",
      "JSP",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Servlet"
    ]
  },
  {
    "question": "Which of the following statements about JSP declaration is true?",
    "options": [
      "The users are allowed to define methods in a JSP file",
      "Only a single declaration tag can be used in jsp page",
      "The JSP declaration tags can not be use to declare variables.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The users are allowed to define methods in a JSP file"
    ]
  },
  {
    "question": "Which of the following statements about JSP declaration is true?",
    "options": [
      "The users are allowed to define methods in a JSP file",
      "Only a single declaration tag can be used in jsp page",
      "The JSP declaration tags can not be use to declare variables.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The users are allowed to define methods in a JSP file"
    ]
  },
  {
    "question": "The translation unit consists of the JSP source file as well as all of its _____ include files .",
    "options": [
      "Static",
      "Dynamic",
      "Half static-Half dynamic",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Static"
    ]
  },
  {
    "question": "The translation unit consists of the JSP source file as well as all of its _____ include files .",
    "options": [
      "Static",
      "Dynamic",
      "Half static-Half dynamic",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Static"
    ]
  },
  {
    "question": "What is the initial contact point for handling a web request in a Page-Centric architecture?",
    "options": [
      "A JSP page.",
      "A Java bean.",
      "A servlet.",
      "A session manager."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A JSP page."
    ]
  },
  {
    "question": "What is the initial contact point for handling a web request in a Page-Centric architecture?",
    "options": [
      "A JSP page.",
      "A Java bean.",
      "A servlet.",
      "A session manager."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A JSP page."
    ]
  },
  {
    "question": "The <jsp:include/> action can pass parameters to the page which it is included. How does this second page obtain the value of these parameters?",
    "options": [
      "Use the  action",
      "Use the request.getParameter() method",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Use the request.getParameter() method"
    ]
  },
  {
    "question": "The <jsp:include/> action can pass parameters to the page which it is included. How does this second page obtain the value of these parameters?",
    "options": [
      "Use the  action",
      "Use the request.getParameter() method",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Use the request.getParameter() method"
    ]
  },
  {
    "question": "What object will represent the output stream for the JSP page?",
    "options": [
      "out",
      "response",
      "dispatch",
      "writer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "out"
    ]
  },
  {
    "question": "What object will represent the output stream for the JSP page?",
    "options": [
      "out",
      "response",
      "dispatch",
      "writer"
    ],
    "description": "Choose 1 option",
    "answer": [
      "out"
    ]
  },
  {
    "question": "Which statement(s) is(are) applied during JSP page translation?",
    "options": [
      "The JSP page implementation class is created",
      "The JSP page is validated for syntactic correctness",
      "The associated tag files are validated for syntactic correctness",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which statement(s) is(are) applied during JSP page translation?",
    "options": [
      "The JSP page implementation class is created",
      "The JSP page is validated for syntactic correctness",
      "The associated tag files are validated for syntactic correctness",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "The JSP developer wants a comment to be visible in the final output to the browser. Which comment style needs to be used in a JSP page?",
    "options": [
      "<!-- this is a comment -->",
      "<% // this is a comment %>",
      "<%-- this is a comment --%>",
      "<% /** this is a comment **/ %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<!-- this is a comment -->"
    ]
  },
  {
    "question": "The JSP developer wants a comment to be visible in the final output to the browser. Which comment style needs to be used in a JSP page?",
    "options": [
      "<!-- this is a comment -->",
      "<% // this is a comment %>",
      "<%-- this is a comment --%>",
      "<% /** this is a comment **/ %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<!-- this is a comment -->"
    ]
  },
  {
    "question": "Given a JSP error page, which implicit object refers to the uncaught Throwable that resulted in the page being invoked?",
    "options": [
      "exception",
      "throwable",
      "request.exception",
      "error"
    ],
    "description": "Choose 1 option",
    "answer": [
      "exception"
    ]
  },
  {
    "question": "Given a JSP error page, which implicit object refers to the uncaught Throwable that resulted in the page being invoked?",
    "options": [
      "exception",
      "throwable",
      "request.exception",
      "error"
    ],
    "description": "Choose 1 option",
    "answer": [
      "exception"
    ]
  },
  {
    "question": "A JSP page needs to perform some operations before servicing the first request. Where can this be done?",
    "options": [
      "within the page directive of the JSP page",
      "within a scriptlet at the top of the JSP page",
      "within a method called jspInit() or init()",
      "within the <jsp:initialize> XML element"
    ],
    "description": "Choose 1 option",
    "answer": [
      "within a method called jspInit() or init()"
    ]
  },
  {
    "question": "A JSP page needs to perform some operations before servicing the first request. Where can this be done?",
    "options": [
      "within the page directive of the JSP page",
      "within a scriptlet at the top of the JSP page",
      "within a method called jspInit() or init()",
      "within the <jsp:initialize> XML element"
    ],
    "description": "Choose 1 option",
    "answer": [
      "within a method called jspInit() or init()"
    ]
  },
  {
    "question": "Which ensures that a JSP response is of type \"text/plain\"?",
    "options": [
      "<%@ page contentType=\"text/plain\" %>",
      "<%@ page pageEncoding=\"text/plain\" %>",
      "<%@ page mimeType=\"text/plain\" %>",
      "<%@ page contentEncoding=\"text/plain\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page contentType=\"text/plain\" %>"
    ]
  },
  {
    "question": "Which ensures that a JSP response is of type \"text/plain\"?",
    "options": [
      "<%@ page contentType=\"text/plain\" %>",
      "<%@ page pageEncoding=\"text/plain\" %>",
      "<%@ page mimeType=\"text/plain\" %>",
      "<%@ page contentEncoding=\"text/plain\" %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page contentType=\"text/plain\" %>"
    ]
  },
  {
    "question": "Which is a benefit of precompiling a JSP page?",
    "options": [
      "It provides better performance on the first request for the JSP page.",
      "It provides the ability to debug runtime errors in the application.",
      "It avoids initialization on the first request.",
      "It avoids execution of the _jspService method on the first request."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It provides better performance on the first request for the JSP page."
    ]
  },
  {
    "question": "Which is a benefit of precompiling a JSP page?",
    "options": [
      "It provides better performance on the first request for the JSP page.",
      "It provides the ability to debug runtime errors in the application.",
      "It avoids initialization on the first request.",
      "It avoids execution of the _jspService method on the first request."
    ],
    "description": "Choose 1 option",
    "answer": [
      "It provides better performance on the first request for the JSP page."
    ]
  },
  {
    "question": "A JavaBeans component has the following field: \nprivate boolean enabled; Which pairs of method declarations follow the JavaBeans standard for accessing this field? (Choose one.)",
    "options": [
      "public void setEnabled( boolean enabled) public boolean getEnabled()",
      "public void setEnabled( boolean enabled)public void isEnabled()",
      "public Boolean setEnabled( boolean enabled) public boolean sEnabled()",
      "public boolean setEnabled( boolean enabled) public boolean getEnabled()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void setEnabled( boolean enabled) public boolean getEnabled()"
    ]
  },
  {
    "question": "A JavaBeans component has the following field: \nprivate boolean enabled; Which pairs of method declarations follow the JavaBeans standard for accessing this field? (Choose one.)",
    "options": [
      "public void setEnabled( boolean enabled) public boolean getEnabled()",
      "public void setEnabled( boolean enabled)public void isEnabled()",
      "public Boolean setEnabled( boolean enabled) public boolean sEnabled()",
      "public boolean setEnabled( boolean enabled) public boolean getEnabled()"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public void setEnabled( boolean enabled) public boolean getEnabled()"
    ]
  },
  {
    "question": "JSP __________ let you insert arbitrary code into the servlet\u2019s _jspService method (which is called by service).",
    "options": [
      "scriptlets",
      "declarations",
      "expressions"
    ],
    "description": "Choose 1 option",
    "answer": [
      "scriptlets"
    ]
  },
  {
    "question": "JSP __________ let you insert arbitrary code into the servlet\u2019s _jspService method (which is called by service).",
    "options": [
      "scriptlets",
      "declarations",
      "expressions"
    ],
    "description": "Choose 1 option",
    "answer": [
      "scriptlets"
    ]
  },
  {
    "question": "A JSP page needs to generate an XML file. Which attribute of page directive may be used to specify that the JSP page is generating an XML file.",
    "options": [
      "<%@page contentType =\u201dtext/xml\u201d>",
      "<%@page contentType =\u201dxml\u201d>",
      "<%@page contentType =\u201dtext/html\u201d>",
      "<%@page contentType =\u201dhtml/xml\u201d>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@page contentType =\u201dtext/xml\u201d>"
    ]
  },
  {
    "question": "A JSP page needs to generate an XML file. Which attribute of page directive may be used to specify that the JSP page is generating an XML file.",
    "options": [
      "<%@page contentType =\u201dtext/xml\u201d>",
      "<%@page contentType =\u201dxml\u201d>",
      "<%@page contentType =\u201dtext/html\u201d>",
      "<%@page contentType =\u201dhtml/xml\u201d>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@page contentType =\u201dtext/xml\u201d>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Declarations?",
    "options": [
      "<%! code %>",
      "<% code %>",
      "<%= code %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%! code %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Declarations?",
    "options": [
      "<%! code %>",
      "<% code %>",
      "<%= code %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%! code %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Scriptlets?",
    "options": [
      "<% code %>",
      "<%= code %>",
      "<%! code %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<% code %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Scriptlets?",
    "options": [
      "<% code %>",
      "<%= code %>",
      "<%! code %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<% code %>"
    ]
  },
  {
    "question": "Which of the following represents the XML equivalent of this statement <%@ include file=\"a.jsp\"%> . Select one correct statement.",
    "options": [
      "<jsp:include file=\"a.jsp\"/>",
      "<jsp:include page=\"a.jsp\"/>",
      "<jsp:directive.include file=\"a.jsp\"/>",
      "There is no XML equivalent of include directive."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:directive.include file=\"a.jsp\"/>"
    ]
  },
  {
    "question": "Which of the following represents the XML equivalent of this statement <%@ include file=\"a.jsp\"%> . Select one correct statement.",
    "options": [
      "<jsp:include file=\"a.jsp\"/>",
      "<jsp:include page=\"a.jsp\"/>",
      "<jsp:directive.include file=\"a.jsp\"/>",
      "There is no XML equivalent of include directive."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:directive.include file=\"a.jsp\"/>"
    ]
  },
  {
    "question": "A JSP file is a ........",
    "options": [
      "text file.",
      "a Java binary code file.",
      "a Java binary file containing a class declaration.",
      "none of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "text file."
    ]
  },
  {
    "question": "A JSP file is a ........",
    "options": [
      "text file.",
      "a Java binary code file.",
      "a Java binary file containing a class declaration.",
      "none of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "text file."
    ]
  },
  {
    "question": "Scripting elements in JSP can be used to .......",
    "options": [
      "implement methods.",
      "define variables",
      "refer to Java code block executed for every request.",
      "print out a value of an expression to client screen",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Scripting elements in JSP can be used to .......",
    "options": [
      "implement methods.",
      "define variables",
      "refer to Java code block executed for every request.",
      "print out a value of an expression to client screen",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Given a JSP code fragment \n\n<% int a = Integer.parseInt(\"a\"); %> Choose the correct statement",
    "options": [
      "The code is generated besides of  _jspService method by JSP engine",
      "The code is generated in _jspService method by JSP engine",
      "The code is generated in jspInit method by JSP enginer",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The code is generated in _jspService method by JSP engine"
    ]
  },
  {
    "question": "Given a JSP code fragment \n\n<% int a = Integer.parseInt(\"a\"); %> Choose the correct statement",
    "options": [
      "The code is generated besides of  _jspService method by JSP engine",
      "The code is generated in _jspService method by JSP engine",
      "The code is generated in jspInit method by JSP enginer",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The code is generated in _jspService method by JSP engine"
    ]
  },
  {
    "question": "Given a JSP code fragment \n\n<%-- String str = \u201c5\u201d --> Choose the correct statement",
    "options": [
      "The out.write(\u201c \u201c); statement is generated in _jspService method",
      "The out.write(\u201c \u201c); statement is generated out of the _jspService method",
      "The String str = \u201c5\u201d; statement is generated in _jspService method",
      "The String str = \u201c5\u201d; statement is generated out of the _jspService method"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The out.write(\u201c \u201c); statement is generated in _jspService method"
    ]
  },
  {
    "question": "Given a JSP code fragment \n\n<%-- String str = \u201c5\u201d --> Choose the correct statement",
    "options": [
      "The out.write(\u201c \u201c); statement is generated in _jspService method",
      "The out.write(\u201c \u201c); statement is generated out of the _jspService method",
      "The String str = \u201c5\u201d; statement is generated in _jspService method",
      "The String str = \u201c5\u201d; statement is generated out of the _jspService method"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The out.write(\u201c \u201c); statement is generated in _jspService method"
    ]
  },
  {
    "question": "JSP language allows mixing ......",
    "options": [
      "All of the others.",
      "static content",
      "dynamic content",
      "Java code",
      "functions"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "JSP language allows mixing ......",
    "options": [
      "All of the others.",
      "static content",
      "dynamic content",
      "Java code",
      "functions"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others."
    ]
  },
  {
    "question": "Which of the followings will declare the variable x in the servlet class declaration?",
    "options": [
      "<%! int x=10; %>",
      "<%= int x=10; %>",
      "<% int x=10; %>",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%! int x=10; %>"
    ]
  },
  {
    "question": "Which of the followings will declare the variable x in the servlet class declaration?",
    "options": [
      "<%! int x=10; %>",
      "<%= int x=10; %>",
      "<% int x=10; %>",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%! int x=10; %>"
    ]
  },
  {
    "question": "In JSP, the import attribute of the page directive will .......",
    "options": [
      "put the statement for importing a library/ given class to the JSP servlet class declaration.",
      "insert a given code to the body of the _jspService(...) method.",
      "allow to declare a function in JSP page.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "put the statement for importing a library/ given class to the JSP servlet class declaration."
    ]
  },
  {
    "question": "In JSP, the import attribute of the page directive will .......",
    "options": [
      "put the statement for importing a library/ given class to the JSP servlet class declaration.",
      "insert a given code to the body of the _jspService(...) method.",
      "allow to declare a function in JSP page.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "put the statement for importing a library/ given class to the JSP servlet class declaration."
    ]
  },
  {
    "question": "In life cycle of a JSP file, the result of the Compilation phase will be:",
    "options": [
      "A java byte-code file",
      "A java source code file",
      "An HTML and Java source code files",
      "An JSP file"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A java byte-code file"
    ]
  },
  {
    "question": "In life cycle of a JSP file, the result of the Compilation phase will be:",
    "options": [
      "A java byte-code file",
      "A java source code file",
      "An HTML and Java source code files",
      "An JSP file"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A java byte-code file"
    ]
  },
  {
    "question": "Which of the following JSP elements is used to define variables and methods for a JSP file?",
    "options": [
      "Declaration",
      "Scriptlets",
      "Expression",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Declaration"
    ]
  },
  {
    "question": "Which of the following JSP elements is used to define variables and methods for a JSP file?",
    "options": [
      "Declaration",
      "Scriptlets",
      "Expression",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Declaration"
    ]
  },
  {
    "question": "Which of the following attributes of the Page directive is used to specify the page to display errors which may occur in the JSP page?",
    "options": [
      "errorPage",
      "exception",
      "isErrorPage",
      "Error"
    ],
    "description": "Choose 1 option",
    "answer": [
      "errorPage"
    ]
  },
  {
    "question": "Which of the following attributes of the Page directive is used to specify the page to display errors which may occur in the JSP page?",
    "options": [
      "errorPage",
      "exception",
      "isErrorPage",
      "Error"
    ],
    "description": "Choose 1 option",
    "answer": [
      "errorPage"
    ]
  },
  {
    "question": "Which of the following tasks that can be performed using JDBC in Java?(A) Operate the database transactions.(B) Request the JDBC connection from the server manager.(C) Get the results from database.(D) Leave the JDBC connection open.",
    "options": [
      "A, B",
      "B, C",
      "A, C",
      "A, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, C"
    ]
  },
  {
    "question": "Which of the following tasks that can be performed using JDBC in Java?(A) Operate the database transactions.(B) Request the JDBC connection from the server manager.(C) Get the results from database.(D) Leave the JDBC connection open.",
    "options": [
      "A, B",
      "B, C",
      "A, C",
      "A, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, C"
    ]
  },
  {
    "question": "Which type of JDBC driver is the fastest?",
    "options": [
      "Type-1",
      "Type-2",
      "Type-3",
      "Type-4"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Type-2"
    ]
  },
  {
    "question": "Which type of JDBC driver is the fastest?",
    "options": [
      "Type-1",
      "Type-2",
      "Type-3",
      "Type-4"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Type-2"
    ]
  },
  {
    "question": "Which structure of war file does?",
    "options": [
      "WEB-INF directory, resources that browser can access depending permission putting outside WEB-INF directory, and/or META-INF directory",
      "WEB-INF directory, all directory putting outside WEB-INF directory that is shown in IDE tool, lib directory with jar files that are added, and/or META-INF directory",
      "WEB-INF directory, and META-INF directory",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF directory, resources that browser can access depending permission putting outside WEB-INF directory, and/or META-INF directory"
    ]
  },
  {
    "question": "Which structure of war file does?",
    "options": [
      "WEB-INF directory, resources that browser can access depending permission putting outside WEB-INF directory, and/or META-INF directory",
      "WEB-INF directory, all directory putting outside WEB-INF directory that is shown in IDE tool, lib directory with jar files that are added, and/or META-INF directory",
      "WEB-INF directory, and META-INF directory",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "WEB-INF directory, resources that browser can access depending permission putting outside WEB-INF directory, and/or META-INF directory"
    ]
  },
  {
    "question": "How does remain the Request Object\u2019s life longer?",
    "options": [
      "Using Request Dispatcher",
      "Using UrlRewrting combining sendRedirect method of Response Object",
      "Using Attribute of Request Object",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Using Request Dispatcher"
    ]
  },
  {
    "question": "How does remain the Request Object\u2019s life longer?",
    "options": [
      "Using Request Dispatcher",
      "Using UrlRewrting combining sendRedirect method of Response Object",
      "Using Attribute of Request Object",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Using Request Dispatcher"
    ]
  },
  {
    "question": "Which of the following constitute valid ways of importing Java classes into JSP page source?",
    "options": [
      "<%! import java.util.*; %>",
      "<%@ import java.util.* %>",
      "<%@ page import=\"java.util.*\" %>",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page import=\"java.util.*\" %>"
    ]
  },
  {
    "question": "Which of the following constitute valid ways of importing Java classes into JSP page source?",
    "options": [
      "<%! import java.util.*; %>",
      "<%@ import java.util.* %>",
      "<%@ page import=\"java.util.*\" %>",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@ page import=\"java.util.*\" %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Expressions?",
    "options": [
      "<%=expression %>",
      "<% expression;%>",
      "<% expression %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%=expression %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Expressions?",
    "options": [
      "<%=expression %>",
      "<% expression;%>",
      "<% expression %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%=expression %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Scriptlets?",
    "options": [
      "<% code %>",
      "<%= code%>",
      "<%! code %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<% code %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP Scriptlets?",
    "options": [
      "<% code %>",
      "<%= code%>",
      "<%! code %>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<% code %>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP expression?",
    "options": [
      "<%! code %>",
      "<% code %>",
      "<%= code%>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%= code%>"
    ]
  },
  {
    "question": "Which syntax is correct for JSP expression?",
    "options": [
      "<%! code %>",
      "<% code %>",
      "<%= code%>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%= code%>"
    ]
  },
  {
    "question": "Which of the following statement relating to create static methods in EL is false?",
    "options": [
      "Only a single function should be defined in a single class",
      "The static java methods can be called within the EL expression",
      "To access the function using EL, the function must be implemented as a static function in a java class",
      "The function need to be mapped with EL using a Tag Library Descriptor file"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only a single function should be defined in a single class"
    ]
  },
  {
    "question": "Which of the following statement relating to create static methods in EL is false?",
    "options": [
      "Only a single function should be defined in a single class",
      "The static java methods can be called within the EL expression",
      "To access the function using EL, the function must be implemented as a static function in a java class",
      "The function need to be mapped with EL using a Tag Library Descriptor file"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Only a single function should be defined in a single class"
    ]
  },
  {
    "question": "Given: \n\u00a0<%\u00a0 \u00a0int[] nums = {42, 420, 4200}; \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0request.setAttribute(\"foo\", nums); %> Which statement will return a value true?",
    "options": [
      "${true or false}",
      "${requestScope[foo][0] > 500}",
      "${requestScope['foo'][1] = 420}",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "${true or false}"
    ]
  },
  {
    "question": "Given: \n\u00a0<%\u00a0 \u00a0int[] nums = {42, 420, 4200}; \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0request.setAttribute(\"foo\", nums); %> Which statement will return a value true?",
    "options": [
      "${true or false}",
      "${requestScope[foo][0] > 500}",
      "${requestScope['foo'][1] = 420}",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "${true or false}"
    ]
  },
  {
    "question": "Given a web application in which the request parameter productID contains a product identifier. Which EL expression evaluates the value of the productID?",
    "options": [
      "${param.productID}",
      "${productID}",
      "${pageContext.request.productID}",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "${param.productID}"
    ]
  },
  {
    "question": "Given a web application in which the request parameter productID contains a product identifier. Which EL expression evaluates the value of the productID?",
    "options": [
      "${param.productID}",
      "${productID}",
      "${pageContext.request.productID}",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "${param.productID}"
    ]
  },
  {
    "question": "Which of the options are correct about attributes of <jsp:invoke> standard action?(A) fragment (B) var (C) varReader (D) begin",
    "options": [
      "A, B, C",
      "B, C, D",
      "A, C, D",
      "A, B, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, B, C"
    ]
  },
  {
    "question": "Which of the options are correct about attributes of <jsp:invoke> standard action?(A) fragment (B) var (C) varReader (D) begin",
    "options": [
      "A, B, C",
      "B, C, D",
      "A, C, D",
      "A, B, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, B, C"
    ]
  },
  {
    "question": "Which of the options are correct about attributes of <jsp:invoke> standard action?(A) fragment (B) var (C) varReader (D) begin",
    "options": [
      "A, B, C",
      "B, C, D",
      "A, C, D",
      "A, B, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, B, C"
    ]
  },
  {
    "question": "Which of the options are correct about attributes of <jsp:invoke> standard action?(A) fragment (B) var (C) varReader (D) begin",
    "options": [
      "A, B, C",
      "B, C, D",
      "A, C, D",
      "A, B, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, B, C"
    ]
  },
  {
    "question": "Which of the following tag file directives control Tag processing?(A) tag (B) varReader (C) include (D) attribute",
    "options": [
      "A, B, C",
      "B, C, D",
      "A, C, D",
      "A, B, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, C, D"
    ]
  },
  {
    "question": "Which of the following tag file directives control Tag processing?(A) tag (B) varReader (C) include (D) attribute",
    "options": [
      "A, B, C",
      "B, C, D",
      "A, C, D",
      "A, B, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, C, D"
    ]
  },
  {
    "question": "Which of the following tag file directives control Tag processing?(A) tag (B) varReader (C) include (D) attribute",
    "options": [
      "A, B, C",
      "B, C, D",
      "A, C, D",
      "A, B, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, C, D"
    ]
  },
  {
    "question": "Which of the following tag file directives control Tag processing?(A) tag (B) varReader (C) include (D) attribute",
    "options": [
      "A, B, C",
      "B, C, D",
      "A, C, D",
      "A, B, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, C, D"
    ]
  },
  {
    "question": "Match the different tag library against their corresponding description.Description:\u00a0(A)It contains the tags for looping, expression evaluation and basic input and output.(B)It contains the tags, which are used to parse the data, such as dates and time, based on current location.(C)It contains tags, which are used to access databases.(D)It contains tags, which are used to access XML elements.Library:(1)Formatting/Internationalization (I18N) Tag Library (2) XML Tag Library(3) Core Tag Library(4) SQL Tag Library",
    "options": [
      "A-2, B-3, C-4, D-1",
      "A-3, B-1, C-2, D-4",
      "A-3, B-1, C-4, D-2",
      "A-4, B-1, C-2, D-3"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-3, B-1, C-4, D-2"
    ]
  },
  {
    "question": "Match the different tag library against their corresponding description.Description:\u00a0(A)It contains the tags for looping, expression evaluation and basic input and output.(B)It contains the tags, which are used to parse the data, such as dates and time, based on current location.(C)It contains tags, which are used to access databases.(D)It contains tags, which are used to access XML elements.Library:(1)Formatting/Internationalization (I18N) Tag Library (2) XML Tag Library(3) Core Tag Library(4) SQL Tag Library",
    "options": [
      "A-2, B-3, C-4, D-1",
      "A-3, B-1, C-2, D-4",
      "A-3, B-1, C-4, D-2",
      "A-4, B-1, C-2, D-3"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-3, B-1, C-4, D-2"
    ]
  },
  {
    "question": "The Simple Tag Interface provides doTag() method. Which answer is correct:",
    "options": [
      "public void doTag() throws JSTLException, IOException",
      "Is used for handling tag processing",
      "Retains header iteration after being processed",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Is used for handling tag processing"
    ]
  },
  {
    "question": "The Simple Tag Interface provides doTag() method. Which answer is correct:",
    "options": [
      "public void doTag() throws JSTLException, IOException",
      "Is used for handling tag processing",
      "Retains header iteration after being processed",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Is used for handling tag processing"
    ]
  },
  {
    "question": "Given a block of code using JSTL core tag library:<c:forEach var=\"iter\" begin=\"1\" end=\"10\" step=\"2\">\u00a0\u00a0 ${iter}</c:forEach>${iter}What is showed on the browser screen after this code is executed?",
    "options": [
      "1 3 5 7 9 11",
      "1 3 5 7 9 11 nul",
      "Error page",
      "1 3 5 7 9"
    ],
    "description": "Choose 1 option",
    "answer": [
      "1 3 5 7 9"
    ]
  },
  {
    "question": "Given a block of code using JSTL core tag library:<c:forEach var=\"iter\" begin=\"1\" end=\"10\" step=\"2\">\u00a0\u00a0 ${iter}</c:forEach>${iter}What is showed on the browser screen after this code is executed?",
    "options": [
      "1 3 5 7 9 11",
      "1 3 5 7 9 11 nul",
      "Error page",
      "1 3 5 7 9"
    ],
    "description": "Choose 1 option",
    "answer": [
      "1 3 5 7 9"
    ]
  },
  {
    "question": "Which of the following statements about the jsp:include are true?",
    "options": [
      "jsp:include is designed to include only a static file in a JSP file.",
      "In case of static file, the content is excluded from the calling JSP file.",
      "In case of a dynamic file, it acts on a request and sends back a result that is included in the JSP page.",
      "It is easy to determine whether a file is static or dynamic from a path name."
    ],
    "description": "Choose 1 option",
    "answer": [
      "In case of a dynamic file, it acts on a request and sends back a result that is included in the JSP page."
    ]
  },
  {
    "question": "Which of the following statements about the jsp:include are true?",
    "options": [
      "jsp:include is designed to include only a static file in a JSP file.",
      "In case of static file, the content is excluded from the calling JSP file.",
      "In case of a dynamic file, it acts on a request and sends back a result that is included in the JSP page.",
      "It is easy to determine whether a file is static or dynamic from a path name."
    ],
    "description": "Choose 1 option",
    "answer": [
      "In case of a dynamic file, it acts on a request and sends back a result that is included in the JSP page."
    ]
  },
  {
    "question": "The _______ element allows to pass one or more name and value pairs as parameters.",
    "options": [
      "jsp:param",
      "jsp:forward",
      "jsp:include",
      "jsp:useBean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "jsp:param"
    ]
  },
  {
    "question": "The _______ element allows to pass one or more name and value pairs as parameters.",
    "options": [
      "jsp:param",
      "jsp:forward",
      "jsp:include",
      "jsp:useBean"
    ],
    "description": "Choose 1 option",
    "answer": [
      "jsp:param"
    ]
  },
  {
    "question": "Which of the followings is not a valid setting for the scope attribute of <jsp:useBean> tag?",
    "options": [
      "request",
      "local",
      "session",
      "application"
    ],
    "description": "Choose 1 option",
    "answer": [
      "local"
    ]
  },
  {
    "question": "Which of the followings is not a valid setting for the scope attribute of <jsp:useBean> tag?",
    "options": [
      "request",
      "local",
      "session",
      "application"
    ],
    "description": "Choose 1 option",
    "answer": [
      "local"
    ]
  },
  {
    "question": "Which of the following statements about the standard actions is true?",
    "options": [
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "JSP uses standard actions for calling the JavaBean methods.",
      "The attributes in standard action can not distinguish between uppercase and lowercase.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSP uses standard actions for calling the JavaBean methods."
    ]
  },
  {
    "question": "Which of the following statements about the standard actions is true?",
    "options": [
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "JSP uses standard actions for calling the JavaBean methods.",
      "The attributes in standard action can not distinguish between uppercase and lowercase.",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSP uses standard actions for calling the JavaBean methods."
    ]
  },
  {
    "question": "What will be the output of the code snippet ${\u201c2\u201d + \u201c2\u201d}?",
    "options": [
      "22",
      "2+2",
      "4",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "4"
    ]
  },
  {
    "question": "What will be the output of the code snippet ${\u201c2\u201d + \u201c2\u201d}?",
    "options": [
      "22",
      "2+2",
      "4",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "4"
    ]
  },
  {
    "question": "Which of the following statements about the standard actions are true?",
    "options": [
      "JSP uses standard actions for calling the JavaBean methods",
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "The Attributes in standard action can not distinguish between uppercase and lowercase",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSP uses standard actions for calling the JavaBean methods"
    ]
  },
  {
    "question": "Which of the following statements about the standard actions are true?",
    "options": [
      "JSP uses standard actions for calling the JavaBean methods",
      "Standard actions take the form of an XML tag with a name suffixed jsp",
      "The Attributes in standard action can not distinguish between uppercase and lowercase",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "JSP uses standard actions for calling the JavaBean methods"
    ]
  },
  {
    "question": "Which of the following statements about the jsp:useBean is (are) true?",
    "options": [
      "The jsp:useBean is used to locate or instantiate a JavaBean component",
      "The jsp:useBean first tries to locate an instance of the bean, otherwise it instantiates the Bean from a class",
      "To locate and instantiate the Bean, the jsp:useBean attempts to locate a Bean within the scope",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "Which of the following statements about the jsp:useBean is (are) true?",
    "options": [
      "The jsp:useBean is used to locate or instantiate a JavaBean component",
      "The jsp:useBean first tries to locate an instance of the bean, otherwise it instantiates the Bean from a class",
      "To locate and instantiate the Bean, the jsp:useBean attempts to locate a Bean within the scope",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "A given JSP yields the following output: Test page USD{49}49  Which of the following page sources and conditions will produce this output?",
    "options": [
      "All of the others",
      "Having the <el-ignored> setting to \u201ctrue\u201d for the URL pattern pointing to this JSP, with page source: Test page USD{49}49",
      "Page source: Test page <%= \u201cUSD{49}\u201d %>49",
      "Page source: Test page \\USD{49}USD{49}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "A given JSP yields the following output: Test page USD{49}49  Which of the following page sources and conditions will produce this output?",
    "options": [
      "All of the others",
      "Having the <el-ignored> setting to \u201ctrue\u201d for the URL pattern pointing to this JSP, with page source: Test page USD{49}49",
      "Page source: Test page <%= \u201cUSD{49}\u201d %>49",
      "Page source: Test page \\USD{49}USD{49}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "All of the others"
    ]
  },
  {
    "question": "A JSP page needs to set the property of a given JavaBean to a value that is calculated with the JSP page. \nWhich jsp:setProperty attributes must be used to perform this initialization?",
    "options": [
      "all of the others",
      "name",
      "value",
      "property"
    ],
    "description": "Choose 1 option",
    "answer": [
      "all of the others"
    ]
  },
  {
    "question": "A JSP page needs to set the property of a given JavaBean to a value that is calculated with the JSP page. \nWhich jsp:setProperty attributes must be used to perform this initialization?",
    "options": [
      "all of the others",
      "name",
      "value",
      "property"
    ],
    "description": "Choose 1 option",
    "answer": [
      "all of the others"
    ]
  },
  {
    "question": "What will be the output of the code snippet ${2 + \u201c2\u201d}?",
    "options": [
      "4",
      "22",
      "2+2",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "4"
    ]
  },
  {
    "question": "What will be the output of the code snippet ${2 + \u201c2\u201d}?",
    "options": [
      "4",
      "22",
      "2+2",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "4"
    ]
  },
  {
    "question": "______ includes a static file in a JSP file, parsing the file's JSP elements.",
    "options": [
      "<jsp:include>",
      "include directive",
      "import directive",
      "<jsp:useBean>",
      "<jsp:forward>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "include directive"
    ]
  },
  {
    "question": "______ includes a static file in a JSP file, parsing the file's JSP elements.",
    "options": [
      "<jsp:include>",
      "include directive",
      "import directive",
      "<jsp:useBean>",
      "<jsp:forward>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "include directive"
    ]
  },
  {
    "question": "_____ sends a request to an object and includes the result in a JSP file.",
    "options": [
      "<jsp:include>",
      "<jsp:forward>",
      "include directive",
      "import directive"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include>"
    ]
  },
  {
    "question": "_____ sends a request to an object and includes the result in a JSP file.",
    "options": [
      "<jsp:include>",
      "<jsp:forward>",
      "include directive",
      "import directive"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:include>"
    ]
  },
  {
    "question": "In JSP, the prefix of a tag .......",
    "options": [
      "is used for distinguishing tags for a library",
      "is used for the symmetric syntax",
      "is used for making easiness in detecting the body of the tag.",
      "none of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "is used for distinguishing tags for a library"
    ]
  },
  {
    "question": "In JSP, the prefix of a tag .......",
    "options": [
      "is used for distinguishing tags for a library",
      "is used for the symmetric syntax",
      "is used for making easiness in detecting the body of the tag.",
      "none of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "is used for distinguishing tags for a library"
    ]
  },
  {
    "question": "The JSP element <%!.....%> will be replaced by the tag .... in the JSP document.",
    "options": [
      "<jsp:declaration> ... </jsp:declaration>",
      "<jsp:variable> ... </jsp:variable>",
      "<jsp:method>></jsp:method>",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:declaration> ... </jsp:declaration>"
    ]
  },
  {
    "question": "The JSP element <%!.....%> will be replaced by the tag .... in the JSP document.",
    "options": [
      "<jsp:declaration> ... </jsp:declaration>",
      "<jsp:variable> ... </jsp:variable>",
      "<jsp:method>></jsp:method>",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:declaration> ... </jsp:declaration>"
    ]
  },
  {
    "question": "Given a JSP code fragment \n\n<jsp:useBean id=\u201cbook1\u201d scope=\u201dsession\u201d/> \nChoose the correct statement . Assume that the book class has the title attribute that is declared both get and set method",
    "options": [
      "The title attribute of book1 can be accessed using EL as ${sessionScope.book1.title}",
      "The title attribute of book1 can be accessed using EL as ${session.book1.title}",
      "The title attribute of book1 can be accessed using EL as ${requestScope.book1.title}",
      "The title attribute of book1 can be accessed using EL as ${sessionScope.book1.getTitle}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The title attribute of book1 can be accessed using EL as ${sessionScope.book1.title}"
    ]
  },
  {
    "question": "Given a JSP code fragment \n\n<jsp:useBean id=\u201cbook1\u201d scope=\u201dsession\u201d/> \nChoose the correct statement . Assume that the book class has the title attribute that is declared both get and set method",
    "options": [
      "The title attribute of book1 can be accessed using EL as ${sessionScope.book1.title}",
      "The title attribute of book1 can be accessed using EL as ${session.book1.title}",
      "The title attribute of book1 can be accessed using EL as ${requestScope.book1.title}",
      "The title attribute of book1 can be accessed using EL as ${sessionScope.book1.getTitle}"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The title attribute of book1 can be accessed using EL as ${sessionScope.book1.title}"
    ]
  },
  {
    "question": "What is the scope of variables in EL?",
    "options": [
      "The scope of variables in EL has page Scope",
      "The scope of variables in EL has response Scope",
      "The scope of variables in EL has request Scope",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The scope of variables in EL has page Scope"
    ]
  },
  {
    "question": "What is the scope of variables in EL?",
    "options": [
      "The scope of variables in EL has page Scope",
      "The scope of variables in EL has response Scope",
      "The scope of variables in EL has request Scope",
      "All of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The scope of variables in EL has page Scope"
    ]
  },
  {
    "question": "Study statements about a Java bean:(1) When its properties change, it can inform the environment about these change and some delegated listeners can make appropriate processes.(2) Its state can be serialized to file and recovered from file.The statement (1) is ...., (2) is ........",
    "options": [
      "true, true",
      "true, false",
      "false, true",
      "false, false"
    ],
    "description": "Choose 1 option",
    "answer": [
      "true, true"
    ]
  },
  {
    "question": "Study statements about a Java bean:(1) When its properties change, it can inform the environment about these change and some delegated listeners can make appropriate processes.(2) Its state can be serialized to file and recovered from file.The statement (1) is ...., (2) is ........",
    "options": [
      "true, true",
      "true, false",
      "false, true",
      "false, false"
    ],
    "description": "Choose 1 option",
    "answer": [
      "true, true"
    ]
  },
  {
    "question": "Suppose that there is a declared bean with id= b1, scope=\"session\" and these following codes are valid. Which of the following JSP actions will present the bean's data to clients?",
    "options": [
      "<jsp:setProperty name=\u201cb1\" property=\u201ctitle\" value=\u201cOOP\" />",
      "<jsp:getProperty name=\u201cb1\" property=\u201ctitle\"/>",
      "<jsp:useBean id=\u201cb1\" />",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:getProperty name=\u201cb1\" property=\u201ctitle\"/>"
    ]
  },
  {
    "question": "Suppose that there is a declared bean with id= b1, scope=\"session\" and these following codes are valid. Which of the following JSP actions will present the bean's data to clients?",
    "options": [
      "<jsp:setProperty name=\u201cb1\" property=\u201ctitle\" value=\u201cOOP\" />",
      "<jsp:getProperty name=\u201cb1\" property=\u201ctitle\"/>",
      "<jsp:useBean id=\u201cb1\" />",
      "All of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:getProperty name=\u201cb1\" property=\u201ctitle\"/>"
    ]
  },
  {
    "question": "With respect to JSP elements/actions. Which of the followings will insert text of source page to destination page before executing compilation?",
    "options": [
      "<%@include>",
      "<jsp:include>",
      "<jsp:import>",
      "<jsp:insert>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@include>"
    ]
  },
  {
    "question": "With respect to JSP elements/actions. Which of the followings will insert text of source page to destination page before executing compilation?",
    "options": [
      "<%@include>",
      "<jsp:include>",
      "<jsp:import>",
      "<jsp:insert>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<%@include>"
    ]
  },
  {
    "question": "Which of the following values is not valid for the scope attribute in the  <jsp:useBean/> element?",
    "options": [
      "context",
      "session",
      "page",
      "request"
    ],
    "description": "Choose 1 option",
    "answer": [
      "context"
    ]
  },
  {
    "question": "Which of the following values is not valid for the scope attribute in the  <jsp:useBean/> element?",
    "options": [
      "context",
      "session",
      "page",
      "request"
    ],
    "description": "Choose 1 option",
    "answer": [
      "context"
    ]
  },
  {
    "question": "Select a correct statement about <jsp:include>  and <%@include%>.",
    "options": [
      "In terms of <%@include%>, the target file must exist at translation time.",
      "In terms of <jsp:include>, the target page has to exist until request time.",
      "Both <jsp:include> and <%@include%> do not accept relative URL.",
      "<%@include%> always includes the latest version of the target file."
    ],
    "description": "Choose 1 option",
    "answer": [
      "In terms of <%@include%>, the target file must exist at translation time."
    ]
  },
  {
    "question": "Select a correct statement about <jsp:include>  and <%@include%>.",
    "options": [
      "In terms of <%@include%>, the target file must exist at translation time.",
      "In terms of <jsp:include>, the target page has to exist until request time.",
      "Both <jsp:include> and <%@include%> do not accept relative URL.",
      "<%@include%> always includes the latest version of the target file."
    ],
    "description": "Choose 1 option",
    "answer": [
      "In terms of <%@include%>, the target file must exist at translation time."
    ]
  },
  {
    "question": "According to the original JSP syntax, to declare variables and methods we can use the <%! \u2026 %> element. Select an equivalent element in terms of XML syntax:",
    "options": [
      "<jsp:declaration>\u2026</jsp:declaration>",
      "<jsp:expression>...</jsp:expression>",
      "<jsp:scriptlet>...</jsp:scriptlet>",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:declaration>\u2026</jsp:declaration>"
    ]
  },
  {
    "question": "According to the original JSP syntax, to declare variables and methods we can use the <%! \u2026 %> element. Select an equivalent element in terms of XML syntax:",
    "options": [
      "<jsp:declaration>\u2026</jsp:declaration>",
      "<jsp:expression>...</jsp:expression>",
      "<jsp:scriptlet>...</jsp:scriptlet>",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<jsp:declaration>\u2026</jsp:declaration>"
    ]
  },
  {
    "question": "Which symbol is used to get or call get method of object in EL?",
    "options": [
      "Dot Symbol",
      "Semi Colon Symbol",
      "Double quote",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Dot Symbol"
    ]
  },
  {
    "question": "Which symbol is used to get or call get method of object in EL?",
    "options": [
      "Dot Symbol",
      "Semi Colon Symbol",
      "Double quote",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Dot Symbol"
    ]
  },
  {
    "question": "What is the meaning of param keyword in EL?",
    "options": [
      "param is a briefcase of request.getParameter",
      "param is a briefcase of Request Parameter",
      "param is a briefcase of Parameters of Context Scope, Config, and Request Scope",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "param is a briefcase of request.getParameter"
    ]
  },
  {
    "question": "What is the meaning of param keyword in EL?",
    "options": [
      "param is a briefcase of request.getParameter",
      "param is a briefcase of Request Parameter",
      "param is a briefcase of Parameters of Context Scope, Config, and Request Scope",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "param is a briefcase of request.getParameter"
    ]
  },
  {
    "question": "Which of these statements is INCORRECT?",
    "options": [
      "The FilterChain interface provides an object through the Web container.",
      "The object invokes the previous filter in a filter chain starting from the first filter from a particular end.",
      "The doFilter(request, response)method invokes the next filter in the filter chain.",
      "If the calling filter is the last filter in the chain, it will invoke the Web resource, such as JSP and servlet."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The object invokes the previous filter in a filter chain starting from the first filter from a particular end."
    ]
  },
  {
    "question": "When we want to use a tag file within our JSP pages what directive do we use to point to the location of the tag file?",
    "options": [
      "tag",
      "page",
      "taglib",
      "tagfile"
    ],
    "description": "Choose 1 option",
    "answer": [
      "taglib"
    ]
  },
  {
    "question": "Which of these statements is INCORRECT?",
    "options": [
      "The FilterChain interface provides an object through the Web container.",
      "The object invokes the previous filter in a filter chain starting from the first filter from a particular end.",
      "The doFilter(request, response)method invokes the next filter in the filter chain.",
      "If the calling filter is the last filter in the chain, it will invoke the Web resource, such as JSP and servlet."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The object invokes the previous filter in a filter chain starting from the first filter from a particular end."
    ]
  },
  {
    "question": "When we want to use a tag file within our JSP pages what directive do we use to point to the location of the tag file?",
    "options": [
      "tag",
      "page",
      "taglib",
      "tagfile"
    ],
    "description": "Choose 1 option",
    "answer": [
      "taglib"
    ]
  },
  {
    "question": "Match the elements to their appropriate features.Feature:\u00a0(A)This element inside the deployment descriptor holds the name of the filter to which a URL pattern or servlet is mapped.(B)This specifies the location of a small or a large image used to represent the filter in a GUI tool within a Web application.(C) It holds the name and value pair of an initialization parameter of the filter. (D)This element specifies the name of a servlet whose request and response will be modified by the filter.\u00a0 (E) This is the short name of the filter, i.e. intended to be displayed by GUI tools. Element:(1) <icon>(2) <init-param>(3) <filter-name>(4) <display-name>(5) <servlet-name>",
    "options": [
      "A-3, B-4, C-1, D-5, E-2",
      "A-4, B-5, C-2, D-3, E-1",
      "A-2, B-3, C-5, D-1, E-4",
      "A-3, B-1, C-2, D-5, E-4"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-3, B-1, C-2, D-5, E-4"
    ]
  },
  {
    "question": "Which the following statements are TRUE?A) Methods of the wrapper classes must not be overridden.B) HttpServletResponseWrapper takes a constructor parameter of type HttpServletResponseC) Filters are called in the order they appear in the deployment descriptor.D) Filters are an example of the Intercepting Filter design patternE) Filters can only be invoked on incoming requests, and not on a dispatcher forward or include",
    "options": [
      "B, C, D",
      "A, B, C",
      "A, B, D",
      "A, C, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "B, C, D"
    ]
  },
  {
    "question": "Match the elements to their appropriate features.Feature:\u00a0(A)This element inside the deployment descriptor holds the name of the filter to which a URL pattern or servlet is mapped.(B)This specifies the location of a small or a large image used to represent the filter in a GUI tool within a Web application.(C) It holds the name and value pair of an initialization parameter of the filter. (D)This element specifies the name of a servlet whose request and response will be modified by the filter.\u00a0 (E) This is the short name of the filter, i.e. intended to be displayed by GUI tools. Element:(1) <icon>(2) <init-param>(3) <filter-name>(4) <display-name>(5) <servlet-name>",
    "options": [
      "A-3, B-4, C-1, D-5, E-2",
      "A-4, B-5, C-2, D-3, E-1",
      "A-2, B-3, C-5, D-1, E-4",
      "A-3, B-1, C-2, D-5, E-4"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-3, B-1, C-2, D-5, E-4"
    ]
  },
  {
    "question": "Which the following statements are TRUE?A) Methods of the wrapper classes must not be overridden.B) HttpServletResponseWrapper takes a constructor parameter of type HttpServletResponseC) Filters are called in the order they appear in the deployment descriptor.D) Filters are an example of the Intercepting Filter design patternE) Filters can only be invoked on incoming requests, and not on a dispatcher forward or include",
    "options": [
      "B, C, D",
      "A, B, C",
      "A, B, D",
      "A, C, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "B, C, D"
    ]
  },
  {
    "question": "Which of the following annotation is used to create the filter?",
    "options": [
      "@WebFilter",
      "@MultipartConfig",
      "@WebServlet",
      "@WebInitparam"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@WebFilter"
    ]
  },
  {
    "question": "Which of the following annotation is used to create the filter?",
    "options": [
      "@WebFilter",
      "@MultipartConfig",
      "@WebServlet",
      "@WebInitparam"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@WebFilter"
    ]
  },
  {
    "question": "Filter is NOT used to:",
    "options": [
      "A. Compress an image before sending to the destination",
      "B. Check if a user is authorized to proceed to the detination",
      "C. Request models for data from database to put to the destination",
      "D. Reduce the time it takes to send a response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "C. Request models for data from database to put to the destination"
    ]
  },
  {
    "question": "Filter is NOT used to:",
    "options": [
      "A. Compress an image before sending to the destination",
      "B. Check if a user is authorized to proceed to the detination",
      "C. Request models for data from database to put to the destination",
      "D. Reduce the time it takes to send a response"
    ],
    "description": "Choose 1 option",
    "answer": [
      "C. Request models for data from database to put to the destination"
    ]
  },
  {
    "question": "Identify which of the following statements related to JSP pages are true.(A) JSP implements presentation logic in a JSP page and content logic on serverin a JavaBean.(B) JavaBeans cannot be shared and exchanged among Web programmers.(C) By using standard tags, even programmers with limited knowledge in scripting language, can design a JSP page.(D) Java Server Pages is used in Application layer.",
    "options": [
      "A, C",
      "B, C",
      "B, D",
      "A, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, D"
    ]
  },
  {
    "question": "Identify which of the following statements related to JSP pages are true.(A) JSP implements presentation logic in a JSP page and content logic on serverin a JavaBean.(B) JavaBeans cannot be shared and exchanged among Web programmers.(C) By using standard tags, even programmers with limited knowledge in scripting language, can design a JSP page.(D) Java Server Pages is used in Application layer.",
    "options": [
      "A, C",
      "B, C",
      "B, D",
      "A, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, D"
    ]
  },
  {
    "question": "Which one is the correct option from the following statements for translation unit?",
    "options": [
      "A JSP page only includes the contents of servlet pages.",
      "The translation unit processes the JSP page and converts it to HTML page.",
      "The translation unit consists of the JSP source file as well as all of its static include files.",
      "Dynamic include files form a part of the translation unit."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The translation unit consists of the JSP source file as well as all of its static include files."
    ]
  },
  {
    "question": "Which one is the correct option from the following statements for translation unit?",
    "options": [
      "A JSP page only includes the contents of servlet pages.",
      "The translation unit processes the JSP page and converts it to HTML page.",
      "The translation unit consists of the JSP source file as well as all of its static include files.",
      "Dynamic include files form a part of the translation unit."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The translation unit consists of the JSP source file as well as all of its static include files."
    ]
  },
  {
    "question": "Given tld fragment<tag>\u00a0\u00a0\u00a0 <name>test</name>\u00a0\u00a0\u00a0 <tag-class>sample.custag.Test</tag-class>\u00a0\u00a0\u00a0 <body-content>EMPTY</body-content>\u00a0\u00a0\u00a0 <attribute>\u00a0\u00a0\u00a0\u00a0\u00a0 <name>a</name>\u00a0\u00a0\u00a0\u00a0\u00a0 <required>false</required>\u00a0\u00a0\u00a0\u00a0\u00a0 <rtexprvalue>true</rtexprvalue>\u00a0\u00a0\u00a0 </attribute>\u00a0 </tag>Which following tag is NOT correct when it is applied above configuration? Assume that the prefix of tag is test in used.",
    "options": [
      "<test:test a = \u201c5\u201d/>",
      "<test:test>abc</test:test>",
      "<test:test a = \u201c${2 + 2}/>",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<test:test a = \u201c5\u201d/>"
    ]
  },
  {
    "question": "Given tld fragment<tag>\u00a0\u00a0\u00a0 <name>test</name>\u00a0\u00a0\u00a0 <tag-class>sample.custag.Test</tag-class>\u00a0\u00a0\u00a0 <body-content>EMPTY</body-content>\u00a0\u00a0\u00a0 <attribute>\u00a0\u00a0\u00a0\u00a0\u00a0 <name>a</name>\u00a0\u00a0\u00a0\u00a0\u00a0 <required>false</required>\u00a0\u00a0\u00a0\u00a0\u00a0 <rtexprvalue>true</rtexprvalue>\u00a0\u00a0\u00a0 </attribute>\u00a0 </tag>Which following tag is NOT correct when it is applied above configuration? Assume that the prefix of tag is test in used.",
    "options": [
      "<test:test a = \u201c5\u201d/>",
      "<test:test>abc</test:test>",
      "<test:test a = \u201c${2 + 2}/>",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "<test:test a = \u201c5\u201d/>"
    ]
  },
  {
    "question": "What does the prefix in TLD file means?",
    "options": [
      "It is a name that the users must be used and fill when they import taglib on JSP Page",
      "It is an address to access tag class",
      "It is an alias name to avoid the conflict name of tag in this tld to others",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It is an alias name to avoid the conflict name of tag in this tld to others"
    ]
  },
  {
    "question": "What does the prefix in TLD file means?",
    "options": [
      "It is a name that the users must be used and fill when they import taglib on JSP Page",
      "It is an address to access tag class",
      "It is an alias name to avoid the conflict name of tag in this tld to others",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It is an alias name to avoid the conflict name of tag in this tld to others"
    ]
  },
  {
    "question": "Which of these is legal return type of the doStartTag method defined in a class that extends TagSupport class?",
    "options": [
      "EVAL_PAGE",
      "EVAL_BODY",
      "EVAL_PAGE_INCLUDE",
      "EVAL_BODY_INCLUDE",
      "SKIP_PAGE"
    ],
    "description": "Choose 1 option",
    "answer": [
      "EVAL_BODY_INCLUDE"
    ]
  },
  {
    "question": "Which of these is legal return type of the doStartTag method defined in a class that extends TagSupport class?",
    "options": [
      "EVAL_PAGE",
      "EVAL_BODY",
      "EVAL_PAGE_INCLUDE",
      "EVAL_BODY_INCLUDE",
      "SKIP_PAGE"
    ],
    "description": "Choose 1 option",
    "answer": [
      "EVAL_BODY_INCLUDE"
    ]
  },
  {
    "question": "__________________ displays the data on the HTML page and uses the data from value stack.",
    "options": [
      "Data Tags",
      "Control tags",
      "UI Tags",
      "Non-Form tags"
    ],
    "description": "Choose 1 option",
    "answer": [
      "UI Tags"
    ]
  },
  {
    "question": "__________________ displays the data on the HTML page and uses the data from value stack.",
    "options": [
      "Data Tags",
      "Control tags",
      "UI Tags",
      "Non-Form tags"
    ],
    "description": "Choose 1 option",
    "answer": [
      "UI Tags"
    ]
  },
  {
    "question": "________ class is responsible for the execution of the action including the sequential invocation of the Interceptor stack.",
    "options": [
      "ActionInvocation",
      "Action",
      "ActionContext",
      "ActionSupport"
    ],
    "description": "Choose 1 option",
    "answer": [
      "ActionInvocation"
    ]
  },
  {
    "question": "________ class is responsible for the execution of the action including the sequential invocation of the Interceptor stack.",
    "options": [
      "ActionInvocation",
      "Action",
      "ActionContext",
      "ActionSupport"
    ],
    "description": "Choose 1 option",
    "answer": [
      "ActionInvocation"
    ]
  },
  {
    "question": "Which of the following statement(s) regarding Struts 2 framework are true?(A) Struts 2 framework is an extension of Struts framework. (B) Struts 2 framework supports the development of persistence logic in the enterprise applications. (C) In Struts 2 framework, the component information is configured in struts.xml file. (D) Struts 2 is an extensible framework can be easily integrated with any other frameworks. (E) Struts 2 is based on a pull-MVC framework.",
    "options": [
      "A, C, E",
      "A, C, D",
      "B, C, D",
      "A, D, E"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, C, E"
    ]
  },
  {
    "question": "Which of the following statement(s) regarding Struts 2 framework are true?(A) Struts 2 framework is an extension of Struts framework. (B) Struts 2 framework supports the development of persistence logic in the enterprise applications. (C) In Struts 2 framework, the component information is configured in struts.xml file. (D) Struts 2 is an extensible framework can be easily integrated with any other frameworks. (E) Struts 2 is based on a pull-MVC framework.",
    "options": [
      "A, C, E",
      "A, C, D",
      "B, C, D",
      "A, D, E"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, C, E"
    ]
  },
  {
    "question": "Which among the following components acts as filters in Struts 2 framework?",
    "options": [
      "Configuration Manager",
      "ActionMapper",
      "action",
      "Interceptors",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Interceptors"
    ]
  },
  {
    "question": "Which among the following components acts as filters in Struts 2 framework?",
    "options": [
      "Configuration Manager",
      "ActionMapper",
      "action",
      "Interceptors",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Interceptors"
    ]
  },
  {
    "question": "Which is the correct syntax of the execute() method declared in the Action class?",
    "options": [
      "public void execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException",
      "public ActionForward execute(ActionMapping mapping, ActionForm form, ServletRequest request, ServletResponse response) throws Exception",
      "public String execute() throws Exception",
      "public String execute(ActionForm form, ServletRequest request, ServletResponse response) throws ServletException, IOException"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public String execute() throws Exception"
    ]
  },
  {
    "question": "Which is the correct syntax of the execute() method declared in the Action class?",
    "options": [
      "public void execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException",
      "public ActionForward execute(ActionMapping mapping, ActionForm form, ServletRequest request, ServletResponse response) throws Exception",
      "public String execute() throws Exception",
      "public String execute(ActionForm form, ServletRequest request, ServletResponse response) throws ServletException, IOException"
    ],
    "description": "Choose 1 option",
    "answer": [
      "public String execute() throws Exception"
    ]
  },
  {
    "question": "In the request life cycle of Struts 2, which component invokes the Interceptors to apply the common functionalities?",
    "options": [
      "ActionServlet",
      "ActionInvocation",
      "ActionMapping",
      "FilterDispatcher"
    ],
    "description": "Choose 1 option",
    "answer": [
      "ActionInvocation"
    ]
  },
  {
    "question": "In the request life cycle of Struts 2, which component invokes the Interceptors to apply the common functionalities?",
    "options": [
      "ActionServlet",
      "ActionInvocation",
      "ActionMapping",
      "FilterDispatcher"
    ],
    "description": "Choose 1 option",
    "answer": [
      "ActionInvocation"
    ]
  },
  {
    "question": "Which of the following result type redirects the user to a configured action?",
    "options": [
      "Redirect",
      "Dispatcher",
      "Chain",
      "RedirectAction",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "RedirectAction"
    ]
  },
  {
    "question": "Which of the following result type redirects the user to a configured action?",
    "options": [
      "Redirect",
      "Dispatcher",
      "Chain",
      "RedirectAction",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "RedirectAction"
    ]
  },
  {
    "question": "Some annotaion in Action of Struts 2 are ___",
    "options": [
      "@Namespace, @Result, @Results, @ResultPath",
      "@Namespaces, @Result, @Results, @ResultPath",
      "@Namespace, @Result, @Results, @ResultPaths",
      "@Names, @Result, @Results, @ResultPath"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Namespace, @Result, @Results, @ResultPath"
    ]
  },
  {
    "question": "Some annotaion in Action of Struts 2 are ___",
    "options": [
      "@Namespace, @Result, @Results, @ResultPath",
      "@Namespaces, @Result, @Results, @ResultPath",
      "@Namespace, @Result, @Results, @ResultPaths",
      "@Names, @Result, @Results, @ResultPath"
    ],
    "description": "Choose 1 option",
    "answer": [
      "@Namespace, @Result, @Results, @ResultPath"
    ]
  },
  {
    "question": "Choose a correct statement about Value Stack:",
    "options": [
      "Value Stack holds values of primitive-type variables in the form of a stack",
      "Value Stack holds the application data associated with request processing",
      "Value Stack is a new data structure that is introduced in framework Struts 2",
      "Value Stack is a user-defined class that is used for quick access and manipulating data"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Value Stack holds the application data associated with request processing"
    ]
  },
  {
    "question": "Choose a correct statement about Value Stack:",
    "options": [
      "Value Stack holds values of primitive-type variables in the form of a stack",
      "Value Stack holds the application data associated with request processing",
      "Value Stack is a new data structure that is introduced in framework Struts 2",
      "Value Stack is a user-defined class that is used for quick access and manipulating data"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Value Stack holds the application data associated with request processing"
    ]
  },
  {
    "question": "Which of the following statements for request object are true?",
    "options": [
      "The request object uses HTTP protocol to process the request from server.",
      "The getParameter() method returns the value of a request parameter as a string.",
      "HTTP protocol implements a subclass of the javax.jsp. HttpServletWriter interface.",
      "The getParameterValues() method returns a string which contains all of the methods given in request parameter."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The getParameter() method returns the value of a request parameter as a string."
    ]
  },
  {
    "question": "Which of the following statements for request object are true?",
    "options": [
      "The request object uses HTTP protocol to process the request from server.",
      "The getParameter() method returns the value of a request parameter as a string.",
      "HTTP protocol implements a subclass of the javax.jsp. HttpServletWriter interface.",
      "The getParameterValues() method returns a string which contains all of the methods given in request parameter."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The getParameter() method returns the value of a request parameter as a string."
    ]
  },
  {
    "question": "Which are the correct options for response object from the following statements?",
    "options": [
      "The response implicit object manages the response generated by JSP and sends response to the client.",
      "The sendRedirect(url) method sends a response to the server using the specified redirect location URL.",
      "The addCookie(cookie) method adds the specified cookie to the response.",
      "The addCookie(cookie) method is unable to set more than one cookies.",
      "The encodeURL() method is used to encode the specified URL."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The response implicit object manages the response generated by JSP and sends response to the client."
    ]
  },
  {
    "question": "Which are the correct options for response object from the following statements?",
    "options": [
      "The response implicit object manages the response generated by JSP and sends response to the client.",
      "The sendRedirect(url) method sends a response to the server using the specified redirect location URL.",
      "The addCookie(cookie) method adds the specified cookie to the response.",
      "The addCookie(cookie) method is unable to set more than one cookies.",
      "The encodeURL() method is used to encode the specified URL."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The response implicit object manages the response generated by JSP and sends response to the client."
    ]
  },
  {
    "question": "Which of following functions in core library taglib of JSTL is used to make the urlrewriting technique?",
    "options": [
      "url and/or param",
      "set and/or param",
      "import and/or param",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "url and/or param"
    ]
  },
  {
    "question": "Which of following functions in core library taglib of JSTL is used to make the urlrewriting technique?",
    "options": [
      "url and/or param",
      "set and/or param",
      "import and/or param",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "url and/or param"
    ]
  },
  {
    "question": "Which mechanism does forEach function of core taglib library of JSTL executes?",
    "options": [
      "Loop depends on event on tag when the collection\u2019s item is existed",
      "Loop depends the container reading the size of collection",
      "Loop depends the while control structure when collection\u2019s item is existed",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Loop depends on event on tag when the collection\u2019s item is existed"
    ]
  },
  {
    "question": "Which mechanism does forEach function of core taglib library of JSTL executes?",
    "options": [
      "Loop depends on event on tag when the collection\u2019s item is existed",
      "Loop depends the container reading the size of collection",
      "Loop depends the while control structure when collection\u2019s item is existed",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Loop depends on event on tag when the collection\u2019s item is existed"
    ]
  },
  {
    "question": "Which of the following statements are true regarding JSP standard actions?(A) Standard actions take the form of an XML tag with a name suffixed jsp.(B) JSP uses standard actions for calling the JavaBean methods.(C) The attributes in standard action cannot distinguish between uppercase and lowercase.(D) JSP standard actions are performed when a browser requests for a JSP page.(E) In standard action, the values in the attributes must be enclosed in double quotes.",
    "options": [
      "A, C, E",
      "A, B, C",
      "B, D, E",
      "A, C, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "B, D, E"
    ]
  },
  {
    "question": "Which of the following statements are true regarding JSP standard actions?(A) Standard actions take the form of an XML tag with a name suffixed jsp.(B) JSP uses standard actions for calling the JavaBean methods.(C) The attributes in standard action cannot distinguish between uppercase and lowercase.(D) JSP standard actions are performed when a browser requests for a JSP page.(E) In standard action, the values in the attributes must be enclosed in double quotes.",
    "options": [
      "A, C, E",
      "A, B, C",
      "B, D, E",
      "A, C, D"
    ],
    "description": "Choose 1 option",
    "answer": [
      "B, D, E"
    ]
  },
  {
    "question": "Which of the following statement is correct for <jsp:include> element?",
    "options": [
      "The <jsp:include> element is designed to include only a static file in a JSP file.",
      "In case of dynamic file, it acts on a request and sends back a result that is included in the JSP page.",
      "In case of static file, the content is excluded from the calling JSP file.",
      "It is easy to determine whether a file is static or dynamic from a pathname."
    ],
    "description": "Choose 1 option",
    "answer": [
      "In case of dynamic file, it acts on a request and sends back a result that is included in the JSP page."
    ]
  },
  {
    "question": "Which of the following statement is correct for <jsp:include> element?",
    "options": [
      "The <jsp:include> element is designed to include only a static file in a JSP file.",
      "In case of dynamic file, it acts on a request and sends back a result that is included in the JSP page.",
      "In case of static file, the content is excluded from the calling JSP file.",
      "It is easy to determine whether a file is static or dynamic from a pathname."
    ],
    "description": "Choose 1 option",
    "answer": [
      "In case of dynamic file, it acts on a request and sends back a result that is included in the JSP page."
    ]
  },
  {
    "question": "What is difference about resource response mission between Request Dispatcher and Filter?",
    "options": [
      "The last resource that is forwarded information will response in Request Dispatcher. The first Filter that is apply to resources will be response in Filter",
      "The first resource that is forwarded information will response in Request Dispatcher mechanism. The last resources that is applied filter will be response in Filter",
      "The first resource that is forwarded information will response in Request Dispatcher mechanism. The last Filter that is apply to resources will be response in Filter",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The last resource that is forwarded information will response in Request Dispatcher. The first Filter that is apply to resources will be response in Filter"
    ]
  },
  {
    "question": "What is difference about resource response mission between Request Dispatcher and Filter?",
    "options": [
      "The last resource that is forwarded information will response in Request Dispatcher. The first Filter that is apply to resources will be response in Filter",
      "The first resource that is forwarded information will response in Request Dispatcher mechanism. The last resources that is applied filter will be response in Filter",
      "The first resource that is forwarded information will response in Request Dispatcher mechanism. The last Filter that is apply to resources will be response in Filter",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The last resource that is forwarded information will response in Request Dispatcher. The first Filter that is apply to resources will be response in Filter"
    ]
  },
  {
    "question": "What is the url-pattern tag in filter-mapping tag for?",
    "options": [
      "Determining the resource is applied by configurating Filter",
      "Determining the access path to access the Filter from the browser",
      "Define the mechanism to resource accessing the Filter",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Determining the resource is applied by configurating Filter"
    ]
  },
  {
    "question": "What is the url-pattern tag in filter-mapping tag for?",
    "options": [
      "Determining the resource is applied by configurating Filter",
      "Determining the access path to access the Filter from the browser",
      "Define the mechanism to resource accessing the Filter",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Determining the resource is applied by configurating Filter"
    ]
  },
  {
    "question": "Which of the following is not component of MVC architecture?",
    "options": [
      "Controller",
      "View",
      "Model",
      "Mapping XML file"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Mapping XML file"
    ]
  },
  {
    "question": "Which of the following is not component of MVC architecture?",
    "options": [
      "Controller",
      "View",
      "Model",
      "Mapping XML file"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Mapping XML file"
    ]
  },
  {
    "question": "Which of the following statements are correct and true for Controller component?",
    "options": [
      "The Controller is typically a JSP that receives requests from the browser",
      "There can be many number of controllers in MVC architecture",
      "There is only one controller in MVC architecture based on JSP Model 2",
      "Controller class access the database through View component"
    ],
    "description": "Choose 1 option",
    "answer": [
      "There is only one controller in MVC architecture based on JSP Model 2"
    ]
  },
  {
    "question": "Which of the following statements are correct and true for Controller component?",
    "options": [
      "The Controller is typically a JSP that receives requests from the browser",
      "There can be many number of controllers in MVC architecture",
      "There is only one controller in MVC architecture based on JSP Model 2",
      "Controller class access the database through View component"
    ],
    "description": "Choose 1 option",
    "answer": [
      "There is only one controller in MVC architecture based on JSP Model 2"
    ]
  },
  {
    "question": "Which mechanism does Struts 2 can be used some components in any projects or libraries?",
    "options": [
      "Using JavaBeans",
      "Using xml to configure",
      "Using Action Context to contain information",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Using JavaBeans"
    ]
  },
  {
    "question": "Which mechanism does Struts 2 can be used some components in any projects or libraries?",
    "options": [
      "Using JavaBeans",
      "Using xml to configure",
      "Using Action Context to contain information",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Using JavaBeans"
    ]
  },
  {
    "question": "What is Interceptor in Struts 2 Framework?",
    "options": [
      "It is another Filter that receive information from Main Filter (Dispatch Filter)",
      "It is a Filter that applied to application when the user uses browser send request to container",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It is another Filter that receive information from Main Filter (Dispatch Filter)"
    ]
  },
  {
    "question": "What is Interceptor in Struts 2 Framework?",
    "options": [
      "It is another Filter that receive information from Main Filter (Dispatch Filter)",
      "It is a Filter that applied to application when the user uses browser send request to container",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "It is another Filter that receive information from Main Filter (Dispatch Filter)"
    ]
  },
  {
    "question": "Which of the following statements relating to JSP script expression is incorrect?",
    "options": [
      "JSP is used to display the dynamic content on a Web page.",
      "The JSP expression is inserted into the page after being evaluated and converted to string.",
      "The dynamic content generated using JSP language can be formatted.",
      "Semicolon is not used at the end of the JSP script expression."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The dynamic content generated using JSP language can be formatted."
    ]
  },
  {
    "question": "Which of the following statements relating to JSP script expression is incorrect?",
    "options": [
      "JSP is used to display the dynamic content on a Web page.",
      "The JSP expression is inserted into the page after being evaluated and converted to string.",
      "The dynamic content generated using JSP language can be formatted.",
      "Semicolon is not used at the end of the JSP script expression."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The dynamic content generated using JSP language can be formatted."
    ]
  },
  {
    "question": "Which option is the correct one for <jsp:include> from the following statements?(A) EL is simple and robust.(B) EL can handle both expressions and literals.(C) The application data stored can be accessed but cannot be manipulated by EL.(D) The advantage of EL is that it provides cleaner syntax and is specifically designed for JSP.(E) JSP expression language cannot be used to display the generated dynamic content in a table on a Web page.(F) EL makes it possible to easily access application data stored in JavaBeans components.(G) JSP expression language can be used to display the generated dynamic content in a table on a Web page.(H) The page authors should be master in programming language, such as Java and JavaScript to utilize the benefits of EL.",
    "options": [
      "A, C, D, E, F",
      "A, B, C, D, E",
      "A, B, D, F, H",
      "A, C, D, E"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, B, D, F, H"
    ]
  },
  {
    "question": "Which option is the correct one for <jsp:include> from the following statements?(A) EL is simple and robust.(B) EL can handle both expressions and literals.(C) The application data stored can be accessed but cannot be manipulated by EL.(D) The advantage of EL is that it provides cleaner syntax and is specifically designed for JSP.(E) JSP expression language cannot be used to display the generated dynamic content in a table on a Web page.(F) EL makes it possible to easily access application data stored in JavaBeans components.(G) JSP expression language can be used to display the generated dynamic content in a table on a Web page.(H) The page authors should be master in programming language, such as Java and JavaScript to utilize the benefits of EL.",
    "options": [
      "A, C, D, E, F",
      "A, B, C, D, E",
      "A, B, D, F, H",
      "A, C, D, E"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A, B, D, F, H"
    ]
  },
  {
    "question": "The test.jsp contains the following code.<%!\u00a0\u00a0\u00a0 String s = \"String 1\";%><%\u00a0\u00a0\u00a0 String s = \"String 2\";\u00a0\u00a0\u00a0 System.out.println(\"s = \" + s);%>What is the output?",
    "options": [
      "The program gives a syntax error because of the statement String s = \"String 2\"",
      "The program gives a syntax error because of the statement String s = \"String 1\"",
      "The server display \"s = String 1\"",
      "The server display \"s = String 2\"",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The server display \"s = String 2\""
    ]
  },
  {
    "question": "The test.jsp contains the following code.<%!\u00a0\u00a0\u00a0 String s = \"String 1\";%><%\u00a0\u00a0\u00a0 String s = \"String 2\";\u00a0\u00a0\u00a0 System.out.println(\"s = \" + s);%>What is the output?",
    "options": [
      "The program gives a syntax error because of the statement String s = \"String 2\"",
      "The program gives a syntax error because of the statement String s = \"String 1\"",
      "The server display \"s = String 1\"",
      "The server display \"s = String 2\"",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The server display \"s = String 2\""
    ]
  },
  {
    "question": "The test.jsp contains the following code.<%!\u00a0\u00a0\u00a0 String s = \"String 1\";\u00a0\u00a0\u00a0 public void check() {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"this is check function\");\u00a0\u00a0\u00a0 }%><%\u00a0\u00a0\u00a0 check();\u00a0\u00a0\u00a0 public void checkJSP() {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"this is check JSP function\");\u00a0\u00a0\u00a0 }%>What is the output?",
    "options": [
      "The program gives a syntax error because of the statement \"public void check() {\"",
      "The program gives a syntax error because of the statement \"public void checkJSP() {\"",
      "The server display \"this is check function\"",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The program gives a syntax error because of the statement \"public void checkJSP() {\""
    ]
  },
  {
    "question": "The test.jsp contains the following code.<%!\u00a0\u00a0\u00a0 String s = \"String 1\";\u00a0\u00a0\u00a0 public void check() {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"this is check function\");\u00a0\u00a0\u00a0 }%><%\u00a0\u00a0\u00a0 check();\u00a0\u00a0\u00a0 public void checkJSP() {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"this is check JSP function\");\u00a0\u00a0\u00a0 }%>What is the output?",
    "options": [
      "The program gives a syntax error because of the statement \"public void check() {\"",
      "The program gives a syntax error because of the statement \"public void checkJSP() {\"",
      "The server display \"this is check function\"",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The program gives a syntax error because of the statement \"public void checkJSP() {\""
    ]
  },
  {
    "question": "The Server wants to create a cookie at client, the TestServlet.java contains the following code:",
    "options": [
      "protected void doPost(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Cookie getItem = new Cookie(\"Buy\", \"Test\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 getItem.setComment(\"User has indicated a desire \" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 +\u00a0\u00a0 \"to buy this book from the bookstore.\");\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 response.addCookie(getItem);\u00a0\u00a0\u00a0 }",
      "protected void doPost(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // If the user wants to add an value in a cookie\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Cookie getItem = new Cookie(\"Buy\", \"Test\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 getItem.setComment(\"User has indicated a desire \" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 +\u00a0\u00a0 \"to buy this book from the bookstore.\");\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 request.addCookie(getItem);\u00a0\u00a0\u00a0 }",
      "protected void doPost(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // If the user wants to add an value in a cookie\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Cookie getItem = new Cookie(\"Buy\", \"Test\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 getItem.setComment(\"User has indicated a desire \" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 +\u00a0\u00a0 \"to buy this book from the bookstore.\");\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 request.setCookie(getItem);\u00a0\u00a0\u00a0 }",
      "protected void doPost(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // If the user wants to add an value in a cookie\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Cookie getItem = new Cookie(\"Buy\", \"Test\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 getItem.setComment(\"User has indicated a desire \" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 +\u00a0\u00a0 \"to buy this book from the bookstore.\");\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 response.setCookie(getItem);\u00a0\u00a0\u00a0 }"
    ],
    "description": "Choose 1 option",
    "answer": [
      "protected void doPost(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Cookie getItem = new Cookie(\"Buy\", \"Test\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 getItem.setComment(\"User has indicated a desire \" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 +\u00a0\u00a0 \"to buy this book from the bookstore.\");\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 response.addCookie(getItem);\u00a0\u00a0\u00a0 }"
    ]
  },
  {
    "question": "The Server wants to create a cookie at client, the TestServlet.java contains the following code:",
    "options": [
      "protected void doPost(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Cookie getItem = new Cookie(\"Buy\", \"Test\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 getItem.setComment(\"User has indicated a desire \" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 +\u00a0\u00a0 \"to buy this book from the bookstore.\");\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 response.addCookie(getItem);\u00a0\u00a0\u00a0 }",
      "protected void doPost(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // If the user wants to add an value in a cookie\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Cookie getItem = new Cookie(\"Buy\", \"Test\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 getItem.setComment(\"User has indicated a desire \" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 +\u00a0\u00a0 \"to buy this book from the bookstore.\");\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 request.addCookie(getItem);\u00a0\u00a0\u00a0 }",
      "protected void doPost(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // If the user wants to add an value in a cookie\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Cookie getItem = new Cookie(\"Buy\", \"Test\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 getItem.setComment(\"User has indicated a desire \" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 +\u00a0\u00a0 \"to buy this book from the bookstore.\");\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 request.setCookie(getItem);\u00a0\u00a0\u00a0 }",
      "protected void doPost(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // If the user wants to add an value in a cookie\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Cookie getItem = new Cookie(\"Buy\", \"Test\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 getItem.setComment(\"User has indicated a desire \" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 +\u00a0\u00a0 \"to buy this book from the bookstore.\");\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 response.setCookie(getItem);\u00a0\u00a0\u00a0 }"
    ],
    "description": "Choose 1 option",
    "answer": [
      "protected void doPost(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Cookie getItem = new Cookie(\"Buy\", \"Test\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 getItem.setComment(\"User has indicated a desire \" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 +\u00a0\u00a0 \"to buy this book from the bookstore.\");\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 response.addCookie(getItem);\u00a0\u00a0\u00a0 }"
    ]
  },
  {
    "question": "The TestServlet.java contains the following code.public class FirstServlet extends HttpServlet {\u00a0\u00a0\u00a0 int a = 0;\u00a0\u00a0\u00a0 @Override\u00a0\u00a0\u00a0 public void init() throws ServletException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"init\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a+=5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"a = \" + a);\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 @Override\u00a0\u00a0\u00a0 protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Server - This is service\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 PrintWriter out = resp.getWriter();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"This is service\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.close();\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 protected void processRequest(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 response.setContentType(\"text/html;charset=UTF-8\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 try (PrintWriter out = response.getWriter()) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /* TODO output your page here. You may use following sample code. */\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<!DOCTYPE html>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<html>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<head>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<title>Servlet FirstServlet</title>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"</head>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<body>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a+=10;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<h1>a = \" + a + \"</h1>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"</body>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"</html>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 }}What is the client output in 2 times?",
    "options": [
      "25",
      "35",
      "This is service",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "This is service"
    ]
  },
  {
    "question": "The TestServlet.java contains the following code.public class FirstServlet extends HttpServlet {\u00a0\u00a0\u00a0 int a = 0;\u00a0\u00a0\u00a0 @Override\u00a0\u00a0\u00a0 public void init() throws ServletException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"init\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a+=5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"a = \" + a);\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 @Override\u00a0\u00a0\u00a0 protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Server - This is service\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 PrintWriter out = resp.getWriter();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"This is service\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.close();\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 protected void processRequest(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 response.setContentType(\"text/html;charset=UTF-8\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 try (PrintWriter out = response.getWriter()) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /* TODO output your page here. You may use following sample code. */\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<!DOCTYPE html>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<html>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<head>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<title>Servlet FirstServlet</title>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"</head>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<body>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a+=10;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<h1>a = \" + a + \"</h1>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"</body>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"</html>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 }}What is the client output in 2 times?",
    "options": [
      "25",
      "35",
      "This is service",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "This is service"
    ]
  },
  {
    "question": "What is the output from the following JSP? <%! String s = \"final\"; %> EL: ${s} Scriptlet: <%= s %> <% Integer test = new Integer(8); request.setAttribute(\"num\", test); %> EL: ${num}",
    "options": [
      "EL: final Scriptlet: final EL: 8",
      "EL: Scriptlet: EL: 8",
      "EL: Scriptlet: final EL: 8",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "EL: Scriptlet: final EL: 8"
    ]
  },
  {
    "question": "What is the output from the following JSP? <%! String s = \"final\"; %> EL: ${s} Scriptlet: <%= s %> <% Integer test = new Integer(8); request.setAttribute(\"num\", test); %> EL: ${num}",
    "options": [
      "EL: final Scriptlet: final EL: 8",
      "EL: Scriptlet: EL: 8",
      "EL: Scriptlet: final EL: 8",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "EL: Scriptlet: final EL: 8"
    ]
  },
  {
    "question": "A JSP page called test.jsp is passed a parameter name in the URL using http://localhost/Final/test.jsp?name=John. The test.jsp contains the following code.<% String myName=request.getParameter(\"name\");%><%= \"Welcome \" + myName; %>What is the output?",
    "options": [
      "None of the others",
      "The program gives a syntax error because of the statement <%= \"Welcome \" + myName; %>",
      "The program gives a syntax error because of the statement <% String myName=request.getParameter(\"name\");%>",
      "The page display \"Welcome John\""
    ],
    "description": "Choose 1 option",
    "answer": [
      "The program gives a syntax error because of the statement <%= \"Welcome \" + myName; %>"
    ]
  },
  {
    "question": "A JSP page called test.jsp is passed a parameter name in the URL using http://localhost/Final/test.jsp?name=John. The test.jsp contains the following code.<% String myName=request.getParameter(\"name\");%><%= \"Welcome \" + myName; %>What is the output?",
    "options": [
      "None of the others",
      "The program gives a syntax error because of the statement <%= \"Welcome \" + myName; %>",
      "The program gives a syntax error because of the statement <% String myName=request.getParameter(\"name\");%>",
      "The page display \"Welcome John\""
    ],
    "description": "Choose 1 option",
    "answer": [
      "The program gives a syntax error because of the statement <%= \"Welcome \" + myName; %>"
    ]
  },
  {
    "question": "A JSP page called test.jsp is passed a parameter name in the URL using http://localhost/Final/test.jsp?name=John. The test.jsp contains the following code.<% String myName=(String)request.getAttribute(\"name\");%><% String test= \"Welcome \" + myName; %><%=test%>What is the output?",
    "options": [
      "None of the others",
      "The program gives a syntax error because of the statement <%=test%>",
      "The program gives a syntax error because of the statement <% String myName=(String)request.getAttribute(\"name\");%>",
      "The program gives a syntax error because of the statement <% String test= \"Welcome \" + myName; %>",
      "The page display \"Welcome John\""
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "A JSP page called test.jsp is passed a parameter name in the URL using http://localhost/Final/test.jsp?name=John. The test.jsp contains the following code.<% String myName=(String)request.getAttribute(\"name\");%><% String test= \"Welcome \" + myName; %><%=test%>What is the output?",
    "options": [
      "None of the others",
      "The program gives a syntax error because of the statement <%=test%>",
      "The program gives a syntax error because of the statement <% String myName=(String)request.getAttribute(\"name\");%>",
      "The program gives a syntax error because of the statement <% String test= \"Welcome \" + myName; %>",
      "The page display \"Welcome John\""
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "What will be the output of the code snippet ${\u201c2\u201d+\u201d2\u201d}?",
    "options": [
      "{\"2\"+\"2\"}",
      "2+2",
      "22",
      "4"
    ],
    "description": "Choose 1 option",
    "answer": [
      "4"
    ]
  },
  {
    "question": "What will be the output of the code snippet ${\u201c2\u201d+\u201d2\u201d}?",
    "options": [
      "{\"2\"+\"2\"}",
      "2+2",
      "22",
      "4"
    ],
    "description": "Choose 1 option",
    "answer": [
      "4"
    ]
  },
  {
    "question": "Match the tags against the corresponding syntax.Syntax:\u00a0(A)<x var = \"varName\" value = \"expression\" scope = \"page/ request/session/ Application\"/> (B)<x var = \"varName\" scope = \"page/ request/session/ application\"/>(C)<x value = \"value\" escapeXml = \"boolean\" default = \"defaultValue\"/>(D) <x [var=\"varName\"]> .... nested actions </x>Tag:(1) <c:remove>(2) <c:catch>(3) <c:set>(4) <c:out>",
    "options": [
      "A-2, B-3, C-4, D-1",
      "A-3, B-1, C-2, D-4",
      "A-3, B-1, C-4, D-2",
      "A-4, B-1, C-2, D-3"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-3, B-1, C-4, D-2"
    ]
  },
  {
    "question": "Match the tags against the corresponding syntax.Syntax:\u00a0(A)<x var = \"varName\" value = \"expression\" scope = \"page/ request/session/ Application\"/> (B)<x var = \"varName\" scope = \"page/ request/session/ application\"/>(C)<x value = \"value\" escapeXml = \"boolean\" default = \"defaultValue\"/>(D) <x [var=\"varName\"]> .... nested actions </x>Tag:(1) <c:remove>(2) <c:catch>(3) <c:set>(4) <c:out>",
    "options": [
      "A-2, B-3, C-4, D-1",
      "A-3, B-1, C-2, D-4",
      "A-3, B-1, C-4, D-2",
      "A-4, B-1, C-2, D-3"
    ],
    "description": "Choose 1 option",
    "answer": [
      "A-3, B-1, C-4, D-2"
    ]
  },
  {
    "question": "A JSP page called test.jsp is passed a parameter name in the URL using http://localhost/Final/test.jsp?name=John. The test.jsp contains the following code.<% String myName=request.getParameter(\"name\");%><% String test= \"Welcome \" + myName; %><%=test%>What is the output?",
    "options": [
      "None of the others.",
      "The program gives a syntax error because of the statement <%=test%>",
      "The program gives a syntax error because of the statement <% String test= \"Welcome \" + myName; %>",
      "The page display \"Welcome John\"",
      "The program gives a syntax error because of the statement <% String myName=request.getParameter(\"name\");%>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The page display \"Welcome John\""
    ]
  },
  {
    "question": "A JSP page called test.jsp is passed a parameter name in the URL using http://localhost/Final/test.jsp?name=John. The test.jsp contains the following code.<% String myName=request.getParameter(\"name\");%><% String test= \"Welcome \" + myName; %><%=test%>What is the output?",
    "options": [
      "None of the others.",
      "The program gives a syntax error because of the statement <%=test%>",
      "The program gives a syntax error because of the statement <% String test= \"Welcome \" + myName; %>",
      "The page display \"Welcome John\"",
      "The program gives a syntax error because of the statement <% String myName=request.getParameter(\"name\");%>"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The page display \"Welcome John\""
    ]
  },
  {
    "question": "What is output to the web page on the second access to the same instance of the following JSP? \n<html><body><%! int x = 0; %><%!\u00a0 public void jspInit() {\u00a0 System.out.println(x++);}%><%= x++ %><% System.out.println(x); %><% jspInit(); %></body></html>",
    "options": [
      "0",
      "1",
      "2",
      "3",
      "4",
      "The page can not be translated.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "3"
    ]
  },
  {
    "question": "What is output to the web page on the second access to the same instance of the following JSP? \n<html><body><%! int x = 0; %><%!\u00a0 public void jspInit() {\u00a0 System.out.println(x++);}%><%= x++ %><% System.out.println(x); %><% jspInit(); %></body></html>",
    "options": [
      "0",
      "1",
      "2",
      "3",
      "4",
      "The page can not be translated.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "3"
    ]
  },
  {
    "question": "What is output to the web page on the second access to the same instance of the following JSP? \n<html>\n<body>\n<%! int x = 0; %>\n<%= x++ %>\n</body></html>",
    "options": [
      "0",
      "1",
      "2",
      "3",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "1"
    ]
  },
  {
    "question": "What is output to the web page on the second access to the same instance of the following JSP? \n<html>\n<body>\n<%! int x = 0; %>\n<%= x++ %>\n</body></html>",
    "options": [
      "0",
      "1",
      "2",
      "3",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "1"
    ]
  },
  {
    "question": "For what reason does the following JSP fail to translate and compile? \n<html>\n<body>\n<%! int x; %>\n<%\npublic String getDescription() {\nreturn \"JAD Final Test\";\n} \n%>\n<%=getDescription() %>\n</body></html>",
    "options": [
      "Expression embedded in declaration.",
      "Data member x not initialized before use.",
      "Local variable x not initialized before use.",
      "The page actually compiles and translates without any problem.",
      "Method declared in scriptlet.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Method declared in scriptlet."
    ]
  },
  {
    "question": "For what reason does the following JSP fail to translate and compile? \n<html>\n<body>\n<%! int x; %>\n<%\npublic String getDescription() {\nreturn \"JAD Final Test\";\n} \n%>\n<%=getDescription() %>\n</body></html>",
    "options": [
      "Expression embedded in declaration.",
      "Data member x not initialized before use.",
      "Local variable x not initialized before use.",
      "The page actually compiles and translates without any problem.",
      "Method declared in scriptlet.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Method declared in scriptlet."
    ]
  },
  {
    "question": "What is the consequence of attempting to access the following JSP page? \n<html>\n<body>\n<%! \npublic void _jspService(HttpServletRequest request, HttpServletResponse response) {\nout.write(\"A\");\n}\n%>\n<% out.write(\"B\"); %>\n</body></html>",
    "options": [
      "Duplicate method compilation error.",
      "\"A\" is output to the response.",
      "\"B\" is output to the response.",
      "\"A\" is output to the response before \"B\".",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Duplicate method compilation error."
    ]
  },
  {
    "question": "What is the consequence of attempting to access the following JSP page? \n<html>\n<body>\n<%! \npublic void _jspService(HttpServletRequest request, HttpServletResponse response) {\nout.write(\"A\");\n}\n%>\n<% out.write(\"B\"); %>\n</body></html>",
    "options": [
      "Duplicate method compilation error.",
      "\"A\" is output to the response.",
      "\"B\" is output to the response.",
      "\"A\" is output to the response before \"B\".",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "Duplicate method compilation error."
    ]
  },
  {
    "question": "A JSP page called test.jsp is passed a parameter name in the URL using http://localhost/Final/test.jsp?name=John. The test.jsp contains the following code.\n<% String myName=request.getParameter(\"name\");%>\n<% String test= \"Welcome \" + myName; %>\n<%=test%>What is the output?",
    "options": [
      "The page display \"Welcome John\"",
      "The program gives a syntax error because of the statement<% String myName=request.getParameter(\"name\");%>",
      "The program gives a syntax error because of the statement<% String test= \"Welcome \" + myName; %>",
      "The program gives a syntax error because of the statement<%=test%>",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The page display \"Welcome John\""
    ]
  },
  {
    "question": "A JSP page called test.jsp is passed a parameter name in the URL using http://localhost/Final/test.jsp?name=John. The test.jsp contains the following code.\n<% String myName=request.getParameter(\"name\");%>\n<% String test= \"Welcome \" + myName; %>\n<%=test%>What is the output?",
    "options": [
      "The page display \"Welcome John\"",
      "The program gives a syntax error because of the statement<% String myName=request.getParameter(\"name\");%>",
      "The program gives a syntax error because of the statement<% String test= \"Welcome \" + myName; %>",
      "The program gives a syntax error because of the statement<%=test%>",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "The page display \"Welcome John\""
    ]
  },
  {
    "question": "What will be the result of pressing the submit button in the following HTML form? \n<form action=\"/servlet/Register\">\n<input type=\"text\" name=\"fullName\" value=\"Type name here\" />\n<input type=\"submit\" name=\"sbmButton\" value=\"OK\" /></form>",
    "options": [
      "A request is sent with the HTTP method HEAD.",
      "A request is sent with the HTTP method POST.",
      "A request is sent with the HTTP method GET.",
      "The parameter fullName is the only parameter passed to the web server in the request URL.",
      "The parameter fullName is the only parameter passed to the web server as part of the request body.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A request is sent with the HTTP method GET."
    ]
  },
  {
    "question": "What will be the result of pressing the submit button in the following HTML form? \n<form action=\"/servlet/Register\">\n<input type=\"text\" name=\"fullName\" value=\"Type name here\" />\n<input type=\"submit\" name=\"sbmButton\" value=\"OK\" /></form>",
    "options": [
      "A request is sent with the HTTP method HEAD.",
      "A request is sent with the HTTP method POST.",
      "A request is sent with the HTTP method GET.",
      "The parameter fullName is the only parameter passed to the web server in the request URL.",
      "The parameter fullName is the only parameter passed to the web server as part of the request body.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A request is sent with the HTTP method GET."
    ]
  },
  {
    "question": "What will be the outcome of executing the following code? \npublic void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nresponse.setContentType(\"text/plain\");\nresponse.setContentLength(6);\nPrintWriter out = response.getWriter();\nout.write(\"What's your name? \");\nout.write(\"\" + response.isCommitted());}",
    "options": [
      "Won't execute because of a compilation error.",
      "An IllegalArgumentException is thrown.",
      "An IllegalStateException is thrown.",
      "A blank page is returned to the client.",
      "\"What's\" is returned to the client.",
      "\"What's your name?\" is returned to the client.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "\"What's\" is returned to the client."
    ]
  },
  {
    "question": "What will be the outcome of executing the following code? \npublic void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nresponse.setContentType(\"text/plain\");\nresponse.setContentLength(6);\nPrintWriter out = response.getWriter();\nout.write(\"What's your name? \");\nout.write(\"\" + response.isCommitted());}",
    "options": [
      "Won't execute because of a compilation error.",
      "An IllegalArgumentException is thrown.",
      "An IllegalStateException is thrown.",
      "A blank page is returned to the client.",
      "\"What's\" is returned to the client.",
      "\"What's your name?\" is returned to the client.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "\"What's\" is returned to the client."
    ]
  },
  {
    "question": "Consider the following HTML page code:\u00a0<form action=\"UploaderServlet\" method=\"HEAD\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <input type=\"text\" name=\"test\" value=\"123\"/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <input type=\"submit\" value=\"Test\"/></form>Which method will be called on UploaderServlet when a user clicks on the submit button displayed by the above page?",
    "options": [
      "doGet",
      "doPut",
      "doPost",
      "doHead",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "doGet"
    ]
  },
  {
    "question": "Consider the following HTML page code:\u00a0<form action=\"UploaderServlet\" method=\"HEAD\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <input type=\"text\" name=\"test\" value=\"123\"/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <input type=\"submit\" value=\"Test\"/></form>Which method will be called on UploaderServlet when a user clicks on the submit button displayed by the above page?",
    "options": [
      "doGet",
      "doPut",
      "doPost",
      "doHead",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "doGet"
    ]
  },
  {
    "question": "Following is the code for doGet() and doPost() method of TestServlet.\u00a0public class TestServlet extends HttpServlet {\u00a0 \u00a0 @Override\u00a0 \u00a0 protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\u00a0 \u00a0 \u00a0 \u00a0 doPost(request, response);\u00a0 \u00a0 }\u00a0 \u00a0 @Override\u00a0 \u00a0 protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\u00a0 \u00a0 \u00a0 \u00a0 response.getWriter().println(\"This is doPost!\");\u00a0 \u00a0 }}Which of the statement is correct?",
    "options": [
      "This will only work for HTTP GET requests",
      "This will only work for HTTP POST requests",
      "This will work for HTTP GET as well as POST requests.",
      "It'll throw an exception at runtime, as you can not call doPost() from doGet().",
      "It'll throw an exception at runtime only if a POST request is sent to it.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "This will work for HTTP GET as well as POST requests."
    ]
  },
  {
    "question": "Following is the code for doGet() and doPost() method of TestServlet.\u00a0public class TestServlet extends HttpServlet {\u00a0 \u00a0 @Override\u00a0 \u00a0 protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\u00a0 \u00a0 \u00a0 \u00a0 doPost(request, response);\u00a0 \u00a0 }\u00a0 \u00a0 @Override\u00a0 \u00a0 protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\u00a0 \u00a0 \u00a0 \u00a0 response.getWriter().println(\"This is doPost!\");\u00a0 \u00a0 }}Which of the statement is correct?",
    "options": [
      "This will only work for HTTP GET requests",
      "This will only work for HTTP POST requests",
      "This will work for HTTP GET as well as POST requests.",
      "It'll throw an exception at runtime, as you can not call doPost() from doGet().",
      "It'll throw an exception at runtime only if a POST request is sent to it.",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "This will work for HTTP GET as well as POST requests."
    ]
  },
  {
    "question": "Given the following deployment descriptor:<web-app><servlet><servlet-name>InitParams</servlet-name><servlet-class>com.osborne.c02.InitParamsServlet</servlet-class><init-param><param-name>initParm</param-name><param-value>Final Test</param-value></init-param></servlet></web-app>\nWhat is the outcome of running the following servlet? \npublic class InitParamsServlet extends HttpServlet { \nprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nServletContext sc = this.getServletContext();\nPrintWriter out = response.getWriter();\nout.write(\"Initialization Parameter is: \" + sc.getInitParameter(\"initParm\"));\n}}",
    "options": [
      "A runtime error",
      "\"Initialization Parameter is: Final Test\" returned to the requester",
      "\"Initialization Parameter is: null\" returned to the requester",
      "\"Initialization Parameter is: null\" written to the console",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "\"Initialization Parameter is: null\" returned to the requester"
    ]
  },
  {
    "question": "Given the following deployment descriptor:<web-app><servlet><servlet-name>InitParams</servlet-name><servlet-class>com.osborne.c02.InitParamsServlet</servlet-class><init-param><param-name>initParm</param-name><param-value>Final Test</param-value></init-param></servlet></web-app>\nWhat is the outcome of running the following servlet? \npublic class InitParamsServlet extends HttpServlet { \nprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nServletContext sc = this.getServletContext();\nPrintWriter out = response.getWriter();\nout.write(\"Initialization Parameter is: \" + sc.getInitParameter(\"initParm\"));\n}}",
    "options": [
      "A runtime error",
      "\"Initialization Parameter is: Final Test\" returned to the requester",
      "\"Initialization Parameter is: null\" returned to the requester",
      "\"Initialization Parameter is: null\" written to the console",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "\"Initialization Parameter is: null\" returned to the requester"
    ]
  },
  {
    "question": "Given: \n1. //insert code \n2. \u2026 \n3. protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { \n4. PrintWriter out = response.getWriter(); \n5. out.println (\"Hello\"); \n7. } Which statement at line 1 allows this code to compile and run?",
    "options": [
      "import java.io.OutputStreamWriter;",
      "#include java.io.PrintWriter;",
      "import java.io.PrintWriter;",
      "#include java.io.OutputStream Writer;",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "import java.io.PrintWriter;"
    ]
  },
  {
    "question": "Given: \n1. //insert code \n2. \u2026 \n3. protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { \n4. PrintWriter out = response.getWriter(); \n5. out.println (\"Hello\"); \n7. } Which statement at line 1 allows this code to compile and run?",
    "options": [
      "import java.io.OutputStreamWriter;",
      "#include java.io.PrintWriter;",
      "import java.io.PrintWriter;",
      "#include java.io.OutputStream Writer;",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "import java.io.PrintWriter;"
    ]
  },
  {
    "question": "Given the web application deployment descriptor element: \n<context-param> \n<param-name>foo</param-name> \n<param-value>sushi</param-value> \n</context-param> Which retrieves the value associated with \"foo\" from within an HttpServlet?",
    "options": [
      "String value = getServletConfig().getParameter(\"foo\");",
      "String value = getServletContext().getAttribute(\"foo\");",
      "Object value = getServletConfig().getInitParameter(\"foo\");",
      "String value = getServletContext().getInitParameter(\"foo\");",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "String value = getServletContext().getInitParameter(\"foo\");"
    ]
  },
  {
    "question": "Given the web application deployment descriptor element: \n<context-param> \n<param-name>foo</param-name> \n<param-value>sushi</param-value> \n</context-param> Which retrieves the value associated with \"foo\" from within an HttpServlet?",
    "options": [
      "String value = getServletConfig().getParameter(\"foo\");",
      "String value = getServletContext().getAttribute(\"foo\");",
      "Object value = getServletConfig().getInitParameter(\"foo\");",
      "String value = getServletContext().getInitParameter(\"foo\");",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "String value = getServletContext().getInitParameter(\"foo\");"
    ]
  },
  {
    "question": "Given: \n10. public void service (HttpServletRequest request, \n11. HttpServletResponse response) { \n12. // your code here \n13.} Which code snippet inserted at line 12 cause the client to redirect to http://www.example.com?",
    "options": [
      "response.send Redirect (new URL (\"http://www.example.com\"));",
      "RequestDispatcher rd= getServletContext ().getRequestDispatcher (\u201chttp://www.example.com\"); rd. forward (request, response);",
      "RequestDispatch rd= getServletContext().getRequestDispatcher(new URL (\u201chttp://www.example.com\u201d)); rd. forward (request.response);",
      "response.sendRedirect (\u201chttp://www.example.com\u201d);",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "response.sendRedirect (\u201chttp://www.example.com\u201d);"
    ]
  },
  {
    "question": "Given: \n10. public void service (HttpServletRequest request, \n11. HttpServletResponse response) { \n12. // your code here \n13.} Which code snippet inserted at line 12 cause the client to redirect to http://www.example.com?",
    "options": [
      "response.send Redirect (new URL (\"http://www.example.com\"));",
      "RequestDispatcher rd= getServletContext ().getRequestDispatcher (\u201chttp://www.example.com\"); rd. forward (request, response);",
      "RequestDispatch rd= getServletContext().getRequestDispatcher(new URL (\u201chttp://www.example.com\u201d)); rd. forward (request.response);",
      "response.sendRedirect (\u201chttp://www.example.com\u201d);",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "response.sendRedirect (\u201chttp://www.example.com\u201d);"
    ]
  },
  {
    "question": "A developer has used this code within a servlet: \n62. if(request.isUserInRole(\"vip\")) { \n63. // VIP-related logic here \n64. } What else must the developer do to ensure that the intended security goal is achieved?",
    "options": [
      "create a user called vip in the security realm",
      "define a group within the security realm and call it vip",
      "define a security-role named vip in the deployment descriptor",
      "declare a security-role-ref for vip in the deployment descriptor",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "declare a security-role-ref for vip in the deployment descriptor"
    ]
  },
  {
    "question": "A developer has used this code within a servlet: \n62. if(request.isUserInRole(\"vip\")) { \n63. // VIP-related logic here \n64. } What else must the developer do to ensure that the intended security goal is achieved?",
    "options": [
      "create a user called vip in the security realm",
      "define a group within the security realm and call it vip",
      "define a security-role named vip in the deployment descriptor",
      "declare a security-role-ref for vip in the deployment descriptor",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "declare a security-role-ref for vip in the deployment descriptor"
    ]
  },
  {
    "question": "What is the output from the following JSP? \n<%! Integer num = new Integer(7); %> \nA: ${num} \nB: <%= num %> \n<% Integer num = new Integer(6); \nrequest.setAttribute(\u201cnum\u201d, num); %> C: ${num}",
    "options": [
      "A: 7B: 7C: 6",
      "A: B: 6C: 6",
      "A: 6B: 7C: 6",
      "A: B: 7C: 6",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A: B: 7C: 6"
    ]
  },
  {
    "question": "What is the output from the following JSP? \n<%! Integer num = new Integer(7); %> \nA: ${num} \nB: <%= num %> \n<% Integer num = new Integer(6); \nrequest.setAttribute(\u201cnum\u201d, num); %> C: ${num}",
    "options": [
      "A: 7B: 7C: 6",
      "A: B: 6C: 6",
      "A: 6B: 7C: 6",
      "A: B: 7C: 6",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "A: B: 7C: 6"
    ]
  },
  {
    "question": "Given: \n1. <% String value =\u201dbeanValue\u201d; %> \n2. <%request.setAttribute(\u201ccom.example.bean\u201d, value); %> \n3. <%-- insert code here --%> Which EL expression, inserted at line 3, is valid and evaluates to \u201cbeanValue\u201d?",
    "options": [
      "${value}",
      "${bean}",
      "${request.get(\u201ccom.example.bean\u201d).toString()}",
      "${requestScope[\u2018com.example.bean\u2019]}",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "${requestScope[\u2018com.example.bean\u2019]}"
    ]
  },
  {
    "question": "Given: \n1. <% String value =\u201dbeanValue\u201d; %> \n2. <%request.setAttribute(\u201ccom.example.bean\u201d, value); %> \n3. <%-- insert code here --%> Which EL expression, inserted at line 3, is valid and evaluates to \u201cbeanValue\u201d?",
    "options": [
      "${value}",
      "${bean}",
      "${request.get(\u201ccom.example.bean\u201d).toString()}",
      "${requestScope[\u2018com.example.bean\u2019]}",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "${requestScope[\u2018com.example.bean\u2019]}"
    ]
  },
  {
    "question": "Given: \n10. public void service (HttpServletRequest request, \n11. HttpServletResponse response) { \n12. // your code here \n13.} Which code snippet inserted at line 12 cause the client to forward the request object to http://www.example.com?",
    "options": [
      "response.send Redirect (new URL (\"http://www.example.com\"));",
      "http://www.example.com",
      "requestDispatch rd= getRequestDispatcher(new URL (\u201chttp://www.example.com\u201d)); rd. include (request.response);",
      "requestDispatcher rd = request.getRequestDispatcher (\u201chttp://www.example.com\u201d); rd.forward(request, response);",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "requestDispatcher rd = request.getRequestDispatcher (\u201chttp://www.example.com\u201d); rd.forward(request, response);"
    ]
  },
  {
    "question": "Given: \n10. public void service (HttpServletRequest request, \n11. HttpServletResponse response) { \n12. // your code here \n13.} Which code snippet inserted at line 12 cause the client to forward the request object to http://www.example.com?",
    "options": [
      "response.send Redirect (new URL (\"http://www.example.com\"));",
      "http://www.example.com",
      "requestDispatch rd= getRequestDispatcher(new URL (\u201chttp://www.example.com\u201d)); rd. include (request.response);",
      "requestDispatcher rd = request.getRequestDispatcher (\u201chttp://www.example.com\u201d); rd.forward(request, response);",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "requestDispatcher rd = request.getRequestDispatcher (\u201chttp://www.example.com\u201d); rd.forward(request, response);"
    ]
  },
  {
    "question": "What will be outcome of running the following servlet code for the given deployment descriptor file? \n- Servlet code\nprotect void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nServletConfig config = getServletConfig();\nString oneA = config.getInitParameter(\u201cfirst\u201d);\nString oneB = config.getInitParameter(\u201cfirst\u201d);\nString two = config.getInitParameter(\u201ctwo\u201d);\nPrintWriter out = response.getWriter();\nout.write(oneA + oneB + two);\n}\n- web.xml fragment\n<context-param>\n<param-name>first</param-name>\n<param-value>1a</param-value>\n</context-param>\n<context-param>\n<param-name>first</param-name>\n<param-value>1b</param-value>\n</context-param>\n<context-param>\n<param-name>second</param-name>\n<param-value>2</param-value></context-param>",
    "options": [
      "1a1a2",
      "1a1b2",
      "nullnullnull",
      "none of the others",
      "1b2a1"
    ],
    "description": "Choose 1 option",
    "answer": [
      "none of the others"
    ]
  },
  {
    "question": "What will be outcome of running the following servlet code for the given deployment descriptor file? \n- Servlet code\nprotect void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nServletConfig config = getServletConfig();\nString oneA = config.getInitParameter(\u201cfirst\u201d);\nString oneB = config.getInitParameter(\u201cfirst\u201d);\nString two = config.getInitParameter(\u201ctwo\u201d);\nPrintWriter out = response.getWriter();\nout.write(oneA + oneB + two);\n}\n- web.xml fragment\n<context-param>\n<param-name>first</param-name>\n<param-value>1a</param-value>\n</context-param>\n<context-param>\n<param-name>first</param-name>\n<param-value>1b</param-value>\n</context-param>\n<context-param>\n<param-name>second</param-name>\n<param-value>2</param-value></context-param>",
    "options": [
      "1a1a2",
      "1a1b2",
      "nullnullnull",
      "none of the others",
      "1b2a1"
    ],
    "description": "Choose 1 option",
    "answer": [
      "none of the others"
    ]
  },
  {
    "question": "A web application uses the HttpSession mechanism to determine if a user in \u201clogged in\u201d. When a user supplies a valid username and password, an HttpSession is created for that user. \nThe user has access to the application for only 15 minutes after logging in. The code must determine how long the user has been logged in, and if this time is greater than 15 minutes, must destroy the HttpSession \nWhich method in HttpSession is used to accomplish this?",
    "options": [
      "invalidateAfter",
      "getMaxInactiveInterval",
      "getLastAccessedTime",
      "getCreationTime",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "getCreationTime"
    ]
  },
  {
    "question": "A web application uses the HttpSession mechanism to determine if a user in \u201clogged in\u201d. When a user supplies a valid username and password, an HttpSession is created for that user. \nThe user has access to the application for only 15 minutes after logging in. The code must determine how long the user has been logged in, and if this time is greater than 15 minutes, must destroy the HttpSession \nWhich method in HttpSession is used to accomplish this?",
    "options": [
      "invalidateAfter",
      "getMaxInactiveInterval",
      "getLastAccessedTime",
      "getCreationTime",
      "None of the others."
    ],
    "description": "Choose 1 option",
    "answer": [
      "getCreationTime"
    ]
  },
  {
    "question": "The test.jsp contains the following code.<%!\u00a0\u00a0\u00a0 String s = \"String 1\";\u00a0\u00a0\u00a0 public void check() {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"this is check function\" + s);\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 public void checkJSP() {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"this is check JSP function\");\u00a0\u00a0\u00a0 }%><%\u00a0\u00a0\u00a0 check();\u00a0\u00a0\u00a0 checkJSP();\u00a0\u00a0\u00a0 %>What is the output?",
    "options": [
      "The program gives a syntax error because of the statement \"public void check() {\"",
      "The program gives a syntax error because of the statement \"public void checkJSP() {\"",
      "The server display \"this is check function\" and \"this is check JSP function\"",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "The test.jsp contains the following code.<%!\u00a0\u00a0\u00a0 String s = \"String 1\";\u00a0\u00a0\u00a0 public void check() {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"this is check function\" + s);\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0 public void checkJSP() {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"this is check JSP function\");\u00a0\u00a0\u00a0 }%><%\u00a0\u00a0\u00a0 check();\u00a0\u00a0\u00a0 checkJSP();\u00a0\u00a0\u00a0 %>What is the output?",
    "options": [
      "The program gives a syntax error because of the statement \"public void check() {\"",
      "The program gives a syntax error because of the statement \"public void checkJSP() {\"",
      "The server display \"this is check function\" and \"this is check JSP function\"",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "What is the output from the following JSP? <%! String s = \"final exam\"; %> EL: ${s} Scriptlet: <% s %> <% Integer test = new Integer(5); request.setAttribute(\"num\", test); %> EL: ${num}What is the output?",
    "options": [
      "EL: final Scriptlet: final exam EL: 5",
      "EL: Scriptlet: EL: 5",
      "EL: Scriptlet: final exam EL: 5",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "What is the output from the following JSP? <%! String s = \"final exam\"; %> EL: ${s} Scriptlet: <% s %> <% Integer test = new Integer(5); request.setAttribute(\"num\", test); %> EL: ${num}What is the output?",
    "options": [
      "EL: final Scriptlet: final exam EL: 5",
      "EL: Scriptlet: EL: 5",
      "EL: Scriptlet: final exam EL: 5",
      "None of the others"
    ],
    "description": "Choose 1 option",
    "answer": [
      "None of the others"
    ]
  },
  {
    "question": "What is output to the web page on the second access to the same instance of the following JSP?\u00a0<html><body><%! int x = 1; %><%!\u00a0 public void jspInit() {\u00a0 System.out.println(\"This is init\");}%><%= x++; %><% System.out.println(x); %><% jspInit(); %></body></html>\u00a0What is the output?",
    "options": [
      "2",
      "None of the others",
      "The page can not be translated",
      "0",
      "1"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The page can not be translated"
    ]
  },
  {
    "question": "What is output to the web page on the second access to the same instance of the following JSP?\u00a0<html><body><%! int x = 1; %><%!\u00a0 public void jspInit() {\u00a0 System.out.println(\"This is init\");}%><%= x++; %><% System.out.println(x); %><% jspInit(); %></body></html>\u00a0What is the output?",
    "options": [
      "2",
      "None of the others",
      "The page can not be translated",
      "0",
      "1"
    ],
    "description": "Choose 1 option",
    "answer": [
      "The page can not be translated"
    ]
  },
  {
    "question": "The Servlet.java contains the following code.protected void processRequest(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 response.setContentType(\"text/html;charset=UTF-8\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /* TODO output your page here. You may use following sample code. */\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<!DOCTYPE html>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<html>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<head>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<title>Servlet HelloServlet</title>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"</head>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<body>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String f1 = (String)request.getAttribute(\"f1\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(f1 + \"<br/>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"</body>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"</html>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.close();\u00a0\u00a0\u00a0 }The Filter.java contains the following code.public void doFilter(ServletRequest request, ServletResponse response,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 FilterChain chain)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws IOException, ServletException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 request.setAttribute(\"f1\", \"Request Filter 1\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 chain.doFilter(request, response);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 PrintWriter out = response.getWriter();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\" Response Filter 1 \");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.close();\u00a0\u00a0\u00a0 }What is the client output?",
    "options": [
      "Request Filter 1",
      "Request Filter 1 Response Filter 1",
      "Response Filter 1 Request Filter 1",
      "None of the others",
      "Response Filter 1"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Request Filter 1"
    ]
  },
  {
    "question": "The Servlet.java contains the following code.protected void processRequest(HttpServletRequest request, HttpServletResponse response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws ServletException, IOException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 response.setContentType(\"text/html;charset=UTF-8\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /* TODO output your page here. You may use following sample code. */\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<!DOCTYPE html>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<html>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<head>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<title>Servlet HelloServlet</title>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"</head>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"<body>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String f1 = (String)request.getAttribute(\"f1\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(f1 + \"<br/>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"</body>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\"</html>\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.close();\u00a0\u00a0\u00a0 }The Filter.java contains the following code.public void doFilter(ServletRequest request, ServletResponse response,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 FilterChain chain)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throws IOException, ServletException {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 request.setAttribute(\"f1\", \"Request Filter 1\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 chain.doFilter(request, response);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 PrintWriter out = response.getWriter();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.println(\" Response Filter 1 \");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 out.close();\u00a0\u00a0\u00a0 }What is the client output?",
    "options": [
      "Request Filter 1",
      "Request Filter 1 Response Filter 1",
      "Response Filter 1 Request Filter 1",
      "None of the others",
      "Response Filter 1"
    ],
    "description": "Choose 1 option",
    "answer": [
      "Request Filter 1"
    ]
  }
]